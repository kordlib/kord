public final class dev/kord/common/Color {
	public static final field Companion Ldev/kord/common/Color$Companion;
	public fun <init> (I)V
	public fun <init> (III)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlue ()I
	public final fun getGreen ()I
	public final fun getRed ()I
	public final fun getRgb ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/Color$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/ColorKt {
	public static final fun getKColor (Ljava/awt/Color;)Ldev/kord/common/Color;
}

public final class dev/kord/common/DiscordBitSet {
	public static final field Companion Ldev/kord/common/DiscordBitSet$Companion;
	public fun <init> ([J)V
	public final fun add (Ldev/kord/common/DiscordBitSet;)V
	public final fun contains (Ldev/kord/common/DiscordBitSet;)Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (I)Z
	public final fun getBinary ()Ljava/lang/String;
	public final fun getSize ()I
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public final fun minus (Ldev/kord/common/DiscordBitSet;)Ldev/kord/common/DiscordBitSet;
	public final fun plus (Ldev/kord/common/DiscordBitSet;)Ldev/kord/common/DiscordBitSet;
	public final fun remove (Ldev/kord/common/DiscordBitSet;)V
	public final fun set (IZ)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/DiscordBitSet$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/DiscordBitSetKt {
	public static final fun DiscordBitSet (Ljava/lang/String;)Ldev/kord/common/DiscordBitSet;
	public static final fun DiscordBitSet ([J)Ldev/kord/common/DiscordBitSet;
	public static final fun EmptyBitSet ()Ldev/kord/common/DiscordBitSet;
}

public final class dev/kord/common/DiscordBitSetSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/kord/common/DiscordBitSetSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/DiscordBitSet;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/DiscordBitSet;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/kord/common/DiscordTimestampKt {
	public static final fun toMessageFormat (Lkotlinx/datetime/Instant;Ldev/kord/common/DiscordTimestampStyle;)Ljava/lang/String;
	public static synthetic fun toMessageFormat$default (Lkotlinx/datetime/Instant;Ldev/kord/common/DiscordTimestampStyle;ILjava/lang/Object;)Ljava/lang/String;
}

public final class dev/kord/common/DiscordTimestampStyle : java/lang/Enum {
	public static final field LongDate Ldev/kord/common/DiscordTimestampStyle;
	public static final field LongDateTime Ldev/kord/common/DiscordTimestampStyle;
	public static final field LongTime Ldev/kord/common/DiscordTimestampStyle;
	public static final field RelativeTime Ldev/kord/common/DiscordTimestampStyle;
	public static final field ShortDate Ldev/kord/common/DiscordTimestampStyle;
	public static final field ShortDateTime Ldev/kord/common/DiscordTimestampStyle;
	public static final field ShortTime Ldev/kord/common/DiscordTimestampStyle;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getStyle ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/DiscordTimestampStyle;
	public static fun values ()[Ldev/kord/common/DiscordTimestampStyle;
}

public final class dev/kord/common/KordConfiguration {
	public static final field INSTANCE Ldev/kord/common/KordConfiguration;
	public final fun getGATEWAY_VERSION ()I
	public final fun getREST_VERSION ()I
	public final fun getVOICE_GATEWAY_VERSION ()I
	public final fun setGATEWAY_VERSION (I)V
	public final fun setREST_VERSION (I)V
	public final fun setVOICE_GATEWAY_VERSION (I)V
}

public final class dev/kord/common/KordConstants {
	public static final field INSTANCE Ldev/kord/common/KordConstants;
	public final fun getCOMMIT_HASH ()Ljava/lang/String;
	public final fun getGITHUB_URL ()Ljava/lang/String;
	public final fun getSHORT_COMMIT_HASH ()Ljava/lang/String;
	public final fun getUSER_AGENT ()Ljava/lang/String;
	public final fun getVERSION ()Ljava/lang/String;
}

public final class dev/kord/common/Locale {
	public static final field Companion Ldev/kord/common/Locale$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/kord/common/Locale;
	public static synthetic fun copy$default (Ldev/kord/common/Locale;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/Locale;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCountry ()Ljava/lang/String;
	public final fun getLanguage ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/Locale$Companion {
	public final fun fromString (Ljava/lang/String;)Ldev/kord/common/Locale;
	public final fun getALL ()Ljava/util/List;
	public final fun getBULGARIAN ()Ldev/kord/common/Locale;
	public final fun getCHINESE_CHINA ()Ldev/kord/common/Locale;
	public final fun getCHINESE_TAIWAN ()Ldev/kord/common/Locale;
	public final fun getCROATIAN ()Ldev/kord/common/Locale;
	public final fun getCZECH ()Ldev/kord/common/Locale;
	public final fun getDANISH ()Ldev/kord/common/Locale;
	public final fun getDUTCH ()Ldev/kord/common/Locale;
	public final fun getENGLISH_GREAT_BRITAIN ()Ldev/kord/common/Locale;
	public final fun getENGLISH_UNITED_STATES ()Ldev/kord/common/Locale;
	public final fun getFINNISH ()Ldev/kord/common/Locale;
	public final fun getFRENCH ()Ldev/kord/common/Locale;
	public final fun getGERMAN ()Ldev/kord/common/Locale;
	public final fun getGREEK ()Ldev/kord/common/Locale;
	public final fun getHINDI ()Ldev/kord/common/Locale;
	public final fun getHUNGARIAN ()Ldev/kord/common/Locale;
	public final fun getINDONESIAN ()Ldev/kord/common/Locale;
	public final fun getITALIAN ()Ldev/kord/common/Locale;
	public final fun getJAPANESE ()Ldev/kord/common/Locale;
	public final fun getKOREAN ()Ldev/kord/common/Locale;
	public final fun getLITHUANIAN ()Ldev/kord/common/Locale;
	public final fun getNORWEGIAN ()Ldev/kord/common/Locale;
	public final fun getPOLISH ()Ldev/kord/common/Locale;
	public final fun getPORTUGUESE_BRAZIL ()Ldev/kord/common/Locale;
	public final fun getROMANIAN ()Ldev/kord/common/Locale;
	public final fun getRUSSIAN ()Ldev/kord/common/Locale;
	public final fun getSPANISH_SPAIN ()Ldev/kord/common/Locale;
	public final fun getSWEDISH ()Ldev/kord/common/Locale;
	public final fun getTHAI ()Ldev/kord/common/Locale;
	public final fun getTURKISH ()Ldev/kord/common/Locale;
	public final fun getUKRAINIAN ()Ldev/kord/common/Locale;
	public final fun getVIETNAMESE ()Ldev/kord/common/Locale;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/Locale$Serializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/kord/common/Locale$Serializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/Locale;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/Locale;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/kord/common/LocaleKt {
	public static final fun asJavaLocale (Ldev/kord/common/Locale;)Ljava/util/Locale;
	public static final fun getKLocale (Ljava/util/Locale;)Ldev/kord/common/Locale;
}

public abstract interface annotation class dev/kord/common/annotation/DeprecatedSinceKord : java/lang/annotation/Annotation {
	public abstract fun version ()Ljava/lang/String;
}

public abstract interface annotation class dev/kord/common/annotation/KordDsl : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/kord/common/annotation/KordExperimental : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/kord/common/annotation/KordInternal : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/kord/common/annotation/KordPreview : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/kord/common/annotation/KordUnsafe : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/kord/common/annotation/KordVoice : java/lang/annotation/Annotation {
}

public final class dev/kord/common/entity/ActivityFlag : java/lang/Enum {
	public static final field Instance Ldev/kord/common/entity/ActivityFlag;
	public static final field Join Ldev/kord/common/entity/ActivityFlag;
	public static final field JoinRequest Ldev/kord/common/entity/ActivityFlag;
	public static final field Play Ldev/kord/common/entity/ActivityFlag;
	public static final field Spectate Ldev/kord/common/entity/ActivityFlag;
	public static final field Sync Ldev/kord/common/entity/ActivityFlag;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getValue ()I
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/entity/ActivityFlag;
	public static fun values ()[Ldev/kord/common/entity/ActivityFlag;
}

public final class dev/kord/common/entity/ActivityFlags {
	public static final field Companion Ldev/kord/common/entity/ActivityFlags$Companion;
	public fun <init> (I)V
	public final fun contains (Ldev/kord/common/entity/ActivityFlag;)Z
	public final fun getFlags ()Ljava/util/Set;
	public final fun getValue ()I
}

public final class dev/kord/common/entity/ActivityFlags$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/ActivityType {
	public static final field Companion Ldev/kord/common/entity/ActivityType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ActivityType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ActivityType$Competing : dev/kord/common/entity/ActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/ActivityType$Competing;
}

public final class dev/kord/common/entity/ActivityType$Custom : dev/kord/common/entity/ActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/ActivityType$Custom;
}

public final class dev/kord/common/entity/ActivityType$Game : dev/kord/common/entity/ActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/ActivityType$Game;
}

public final class dev/kord/common/entity/ActivityType$Listening : dev/kord/common/entity/ActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/ActivityType$Listening;
}

public final class dev/kord/common/entity/ActivityType$Streaming : dev/kord/common/entity/ActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/ActivityType$Streaming;
}

public final class dev/kord/common/entity/ActivityType$Unknown : dev/kord/common/entity/ActivityType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ActivityType$Watching : dev/kord/common/entity/ActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/ActivityType$Watching;
}

public final class dev/kord/common/entity/AllRemovedMessageReactions {
	public static final field Companion Ldev/kord/common/entity/AllRemovedMessageReactions$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)Ldev/kord/common/entity/AllRemovedMessageReactions;
	public static synthetic fun copy$default (Ldev/kord/common/entity/AllRemovedMessageReactions;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILjava/lang/Object;)Ldev/kord/common/entity/AllRemovedMessageReactions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/AllRemovedMessageReactions;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/AllRemovedMessageReactions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/AllRemovedMessageReactions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/AllRemovedMessageReactions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/AllRemovedMessageReactions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AllRemovedMessageReactions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/AllowedMentionType {
	public static final field Companion Ldev/kord/common/entity/AllowedMentionType$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AllowedMentionType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AllowedMentionType$EveryoneMentions : dev/kord/common/entity/AllowedMentionType {
	public static final field INSTANCE Ldev/kord/common/entity/AllowedMentionType$EveryoneMentions;
}

public final class dev/kord/common/entity/AllowedMentionType$RoleMentions : dev/kord/common/entity/AllowedMentionType {
	public static final field INSTANCE Ldev/kord/common/entity/AllowedMentionType$RoleMentions;
}

public final class dev/kord/common/entity/AllowedMentionType$Unknown : dev/kord/common/entity/AllowedMentionType {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/kord/common/entity/AllowedMentionType$UserMentions : dev/kord/common/entity/AllowedMentionType {
	public static final field INSTANCE Ldev/kord/common/entity/AllowedMentionType$UserMentions;
}

public final class dev/kord/common/entity/AllowedMentions {
	public static final field Companion Ldev/kord/common/entity/AllowedMentions$Companion;
	public synthetic fun <init> (ILjava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/AllowedMentions;
	public static synthetic fun copy$default (Ldev/kord/common/entity/AllowedMentions;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/AllowedMentions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getParse ()Ljava/util/List;
	public final fun getRepliedUser ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getRoles ()Ljava/util/List;
	public final fun getUsers ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/AllowedMentions;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/AllowedMentions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/AllowedMentions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/AllowedMentions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/AllowedMentions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AllowedMentions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ApplicationCommandOption {
	public static final field Companion Ldev/kord/common/entity/ApplicationCommandOption$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component15 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/common/entity/ApplicationCommandOption;
	public static synthetic fun copy$default (Ldev/kord/common/entity/ApplicationCommandOption;Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/common/entity/ApplicationCommandOption;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutocomplete ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getChannelTypes ()Ldev/kord/common/entity/optional/Optional;
	public final fun getChoices ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefault ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDescriptionLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMaxLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMaxValue ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMinLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMinValue ()Ldev/kord/common/entity/optional/Optional;
	public final fun getName ()Ljava/lang/String;
	public final fun getNameLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRequired ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/ApplicationCommandOption;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/ApplicationCommandOption$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOption$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/ApplicationCommandOption;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/ApplicationCommandOption;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ApplicationCommandOption$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field Companion Ldev/kord/common/entity/ApplicationCommandOptionType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getType ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Attachment : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$Attachment;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Boolean : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$Boolean;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Channel : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$Channel;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Integer : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$Integer;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Mentionable : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$Mentionable;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Number : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$Number;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Role : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$Role;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$String : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$String;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$SubCommand : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$SubCommand;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$SubCommandGroup : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$SubCommandGroup;
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$Unknown : dev/kord/common/entity/ApplicationCommandOptionType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ApplicationCommandOptionType$User : dev/kord/common/entity/ApplicationCommandOptionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandOptionType$User;
}

public abstract class dev/kord/common/entity/ApplicationCommandPermissionType {
	public static final field Companion Ldev/kord/common/entity/ApplicationCommandPermissionType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ApplicationCommandPermissionType$Channel : dev/kord/common/entity/ApplicationCommandPermissionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandPermissionType$Channel;
}

public final class dev/kord/common/entity/ApplicationCommandPermissionType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ApplicationCommandPermissionType$Role : dev/kord/common/entity/ApplicationCommandPermissionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandPermissionType$Role;
}

public final class dev/kord/common/entity/ApplicationCommandPermissionType$Unknown : dev/kord/common/entity/ApplicationCommandPermissionType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ApplicationCommandPermissionType$User : dev/kord/common/entity/ApplicationCommandPermissionType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandPermissionType$User;
}

public abstract class dev/kord/common/entity/ApplicationCommandType {
	public static final field Companion Ldev/kord/common/entity/ApplicationCommandType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ApplicationCommandType$ChatInput : dev/kord/common/entity/ApplicationCommandType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandType$ChatInput;
}

public final class dev/kord/common/entity/ApplicationCommandType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ApplicationCommandType$Message : dev/kord/common/entity/ApplicationCommandType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandType$Message;
}

public final class dev/kord/common/entity/ApplicationCommandType$Unknown : dev/kord/common/entity/ApplicationCommandType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ApplicationCommandType$User : dev/kord/common/entity/ApplicationCommandType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationCommandType$User;
}

public final class dev/kord/common/entity/ApplicationFlag : java/lang/Enum {
	public static final field ApplicationAutoModerationRuleCreateBadge Ldev/kord/common/entity/ApplicationFlag;
	public static final field ApplicationCommandBadge Ldev/kord/common/entity/ApplicationFlag;
	public static final field Embedded Ldev/kord/common/entity/ApplicationFlag;
	public static final field GatewayGuildMembers Ldev/kord/common/entity/ApplicationFlag;
	public static final field GatewayGuildMembersLimited Ldev/kord/common/entity/ApplicationFlag;
	public static final field GatewayMessageContent Ldev/kord/common/entity/ApplicationFlag;
	public static final field GatewayMessageContentLimited Ldev/kord/common/entity/ApplicationFlag;
	public static final field GatewayPresence Ldev/kord/common/entity/ApplicationFlag;
	public static final field GatewayPresenceLimited Ldev/kord/common/entity/ApplicationFlag;
	public static final field VerificationPendingGuildLimit Ldev/kord/common/entity/ApplicationFlag;
	public final fun getCode ()I
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun plus (Ldev/kord/common/entity/ApplicationFlag;)Ldev/kord/common/entity/ApplicationFlags;
	public final fun plus (Ldev/kord/common/entity/ApplicationFlags;)Ldev/kord/common/entity/ApplicationFlags;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/entity/ApplicationFlag;
	public static fun values ()[Ldev/kord/common/entity/ApplicationFlag;
}

public final class dev/kord/common/entity/ApplicationFlags {
	public static final field Companion Ldev/kord/common/entity/ApplicationFlags$Companion;
	public final fun component1 ()I
	public final fun contains (Ldev/kord/common/entity/ApplicationFlag;)Z
	public final fun contains (Ldev/kord/common/entity/ApplicationFlags;)Z
	public final fun copy (I)Ldev/kord/common/entity/ApplicationFlags;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/ApplicationFlags;
	public static synthetic fun copy$default (Ldev/kord/common/entity/ApplicationFlags;IILjava/lang/Object;)Ldev/kord/common/entity/ApplicationFlags;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun getFlags ()Ljava/util/List;
	public fun hashCode ()I
	public final fun minus (Ldev/kord/common/entity/ApplicationFlag;)Ldev/kord/common/entity/ApplicationFlags;
	public final fun minus (Ldev/kord/common/entity/ApplicationFlags;)Ldev/kord/common/entity/ApplicationFlags;
	public final fun plus (Ldev/kord/common/entity/ApplicationFlag;)Ldev/kord/common/entity/ApplicationFlags;
	public final fun plus (Ldev/kord/common/entity/ApplicationFlags;)Ldev/kord/common/entity/ApplicationFlags;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ApplicationFlags$Builder {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun flags ()Ldev/kord/common/entity/ApplicationFlags;
	public final fun unaryMinus (Ldev/kord/common/entity/ApplicationFlag;)V
	public final fun unaryMinus (Ldev/kord/common/entity/ApplicationFlags;)V
	public final fun unaryPlus (Ldev/kord/common/entity/ApplicationFlag;)V
	public final fun unaryPlus (Ldev/kord/common/entity/ApplicationFlags;)V
}

public final class dev/kord/common/entity/ApplicationFlags$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field Companion Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$BooleanEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$BooleanEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$BooleanNotEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$BooleanNotEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$DateTimeGreaterThanOrEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$DateTimeGreaterThanOrEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$DateTimeLessThanOrEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$DateTimeLessThanOrEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerGreaterThanOrEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerGreaterThanOrEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerLessThanOrEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerLessThanOrEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerNotEqual : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public static final field INSTANCE Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType$IntegerNotEqual;
}

public final class dev/kord/common/entity/ApplicationRoleConnectionMetadataType$Unknown : dev/kord/common/entity/ApplicationRoleConnectionMetadataType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/ArchiveDuration {
	public static final field Companion Ldev/kord/common/entity/ArchiveDuration$Companion;
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getDuration-UwyO8pc ()J
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ArchiveDuration$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ArchiveDuration$Day : dev/kord/common/entity/ArchiveDuration {
	public static final field INSTANCE Ldev/kord/common/entity/ArchiveDuration$Day;
}

public final class dev/kord/common/entity/ArchiveDuration$Hour : dev/kord/common/entity/ArchiveDuration {
	public static final field INSTANCE Ldev/kord/common/entity/ArchiveDuration$Hour;
}

public final class dev/kord/common/entity/ArchiveDuration$ThreeDays : dev/kord/common/entity/ArchiveDuration {
	public static final field INSTANCE Ldev/kord/common/entity/ArchiveDuration$ThreeDays;
}

public final class dev/kord/common/entity/ArchiveDuration$Unknown : dev/kord/common/entity/ArchiveDuration {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class dev/kord/common/entity/ArchiveDuration$Week : dev/kord/common/entity/ArchiveDuration {
	public static final field INSTANCE Ldev/kord/common/entity/ArchiveDuration$Week;
}

public final class dev/kord/common/entity/AuditLogChange {
	public static final field Companion Ldev/kord/common/entity/AuditLogChange$Companion;
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Ldev/kord/common/entity/AuditLogChangeKey;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/Object;
	public final fun component3 ()Ldev/kord/common/entity/AuditLogChangeKey;
	public final fun copy (Ljava/lang/Object;Ljava/lang/Object;Ldev/kord/common/entity/AuditLogChangeKey;)Ldev/kord/common/entity/AuditLogChange;
	public static synthetic fun copy$default (Ldev/kord/common/entity/AuditLogChange;Ljava/lang/Object;Ljava/lang/Object;Ldev/kord/common/entity/AuditLogChangeKey;ILjava/lang/Object;)Ldev/kord/common/entity/AuditLogChange;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKey ()Ldev/kord/common/entity/AuditLogChangeKey;
	public final fun getNew ()Ljava/lang/Object;
	public final fun getOld ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AuditLogChange$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/AuditLogChangeKey {
	public static final field Companion Ldev/kord/common/entity/AuditLogChangeKey$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlinx/serialization/KSerializer;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getName ()Ljava/lang/String;
	public final fun getSerializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Add : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Add;
}

public final class dev/kord/common/entity/AuditLogChangeKey$AfkChannelId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$AfkChannelId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$AfkTimeout : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$AfkTimeout;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Allow : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Allow;
}

public final class dev/kord/common/entity/AuditLogChangeKey$ApplicationId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$ApplicationId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Archived : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Archived;
}

public final class dev/kord/common/entity/AuditLogChangeKey$AutoArchiveDuration : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$AutoArchiveDuration;
}

public final class dev/kord/common/entity/AuditLogChangeKey$AvatarHash : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$AvatarHash;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Bitrate : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Bitrate;
}

public final class dev/kord/common/entity/AuditLogChangeKey$ChannelId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$ChannelId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Code : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Code;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Color : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Color;
}

public final class dev/kord/common/entity/AuditLogChangeKey$CommandId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$CommandId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$CommunicationDisabledUntil : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$CommunicationDisabledUntil;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Deaf : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Deaf;
}

public final class dev/kord/common/entity/AuditLogChangeKey$DefaultAutoArchiveDuration : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$DefaultAutoArchiveDuration;
}

public final class dev/kord/common/entity/AuditLogChangeKey$DefaultMessageNotificationLevel : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$DefaultMessageNotificationLevel;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Deny : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Deny;
}

public final class dev/kord/common/entity/AuditLogChangeKey$EnableEmoticons : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$EnableEmoticons;
}

public final class dev/kord/common/entity/AuditLogChangeKey$EntityType : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$EntityType;
}

public final class dev/kord/common/entity/AuditLogChangeKey$ExpireBehavior : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$ExpireBehavior;
}

public final class dev/kord/common/entity/AuditLogChangeKey$ExpireGracePeriod : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$ExpireGracePeriod;
}

public final class dev/kord/common/entity/AuditLogChangeKey$ExplicitContentFilter : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$ExplicitContentFilter;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Hoist : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Hoist;
}

public final class dev/kord/common/entity/AuditLogChangeKey$IconHash : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$IconHash;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Id : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Id;
}

public final class dev/kord/common/entity/AuditLogChangeKey$ImageHash : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$ImageHash;
}

public final class dev/kord/common/entity/AuditLogChangeKey$InviterId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$InviterId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Location : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Location;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Locked : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Locked;
}

public final class dev/kord/common/entity/AuditLogChangeKey$MFALevel : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$MFALevel;
}

public final class dev/kord/common/entity/AuditLogChangeKey$MaxAges : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$MaxAges;
}

public final class dev/kord/common/entity/AuditLogChangeKey$MaxUses : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$MaxUses;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Mentionable : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Mentionable;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Mute : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Mute;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Name : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Name;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Nick : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Nick;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Nsfw : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Nsfw;
}

public final class dev/kord/common/entity/AuditLogChangeKey$OwnerId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$OwnerId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$PermissionOverwrites : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$PermissionOverwrites;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Permissions : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Permissions;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Position : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Position;
}

public final class dev/kord/common/entity/AuditLogChangeKey$PruneDeleteDays : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$PruneDeleteDays;
}

public final class dev/kord/common/entity/AuditLogChangeKey$RateLimitPerUser : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$RateLimitPerUser;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Region : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Region;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Remove : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Remove;
}

public final class dev/kord/common/entity/AuditLogChangeKey$SkuIds : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$SkuIds;
}

public final class dev/kord/common/entity/AuditLogChangeKey$SplashHash : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$SplashHash;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Status : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Status;
}

public final class dev/kord/common/entity/AuditLogChangeKey$SystemChannelId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$SystemChannelId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Temporary : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Temporary;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Topic : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Topic;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Type : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Type;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Unknown : dev/kord/common/entity/AuditLogChangeKey {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/kord/common/entity/AuditLogChangeKey$UserLimit : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$UserLimit;
}

public final class dev/kord/common/entity/AuditLogChangeKey$Uses : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$Uses;
}

public final class dev/kord/common/entity/AuditLogChangeKey$VanityUrlCode : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$VanityUrlCode;
}

public final class dev/kord/common/entity/AuditLogChangeKey$VerificationLevel : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$VerificationLevel;
}

public final class dev/kord/common/entity/AuditLogChangeKey$WidgetChannelId : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$WidgetChannelId;
}

public final class dev/kord/common/entity/AuditLogChangeKey$WidgetEnabled : dev/kord/common/entity/AuditLogChangeKey {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogChangeKey$WidgetEnabled;
}

public final class dev/kord/common/entity/AuditLogEntryOptionalInfo {
	public static final field Companion Ldev/kord/common/entity/AuditLogEntryOptionalInfo$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/AuditLogEntryOptionalInfo;
	public static synthetic fun copy$default (Ldev/kord/common/entity/AuditLogEntryOptionalInfo;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/AuditLogEntryOptionalInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getAutoModerationRuleName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getAutoModerationRuleTriggerType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getChannelId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getCount ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDeleteMemberDays ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMembersRemoved ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMessageId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getRoleName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/AuditLogEntryOptionalInfo;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/AuditLogEntryOptionalInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEntryOptionalInfo$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/AuditLogEntryOptionalInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/AuditLogEntryOptionalInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AuditLogEntryOptionalInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/AuditLogEvent {
	public static final field Companion Ldev/kord/common/entity/AuditLogEvent$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AuditLogEvent$ApplicationCommandPermissionUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ApplicationCommandPermissionUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$AutoModerationBlockMessage : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$AutoModerationBlockMessage;
}

public final class dev/kord/common/entity/AuditLogEvent$AutoModerationFlagToChannel : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$AutoModerationFlagToChannel;
}

public final class dev/kord/common/entity/AuditLogEvent$AutoModerationRuleCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$AutoModerationRuleCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$AutoModerationRuleDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$AutoModerationRuleDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$AutoModerationRuleUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$AutoModerationRuleUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$AutoModerationUserCommunicationDisabled : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$AutoModerationUserCommunicationDisabled;
}

public final class dev/kord/common/entity/AuditLogEvent$BotAdd : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$BotAdd;
}

public final class dev/kord/common/entity/AuditLogEvent$ChannelCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ChannelCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$ChannelDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ChannelDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$ChannelOverwriteCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ChannelOverwriteCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$ChannelOverwriteDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ChannelOverwriteDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$ChannelOverwriteUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ChannelOverwriteUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$ChannelUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ChannelUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AuditLogEvent$EmojiCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$EmojiCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$EmojiDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$EmojiDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$EmojiUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$EmojiUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$GuildScheduledEventCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$GuildScheduledEventCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$GuildScheduledEventDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$GuildScheduledEventDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$GuildScheduledEventUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$GuildScheduledEventUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$GuildUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$GuildUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$IntegrationCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$IntegrationCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$IntegrationDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$IntegrationDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$IntegrationUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$IntegrationUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$InviteCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$InviteCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$InviteDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$InviteDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$InviteUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$InviteUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberBanAdd : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberBanAdd;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberBanRemove : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberBanRemove;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberDisconnect : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberDisconnect;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberKick : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberKick;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberMove : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberMove;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberPrune : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberPrune;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberRoleUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberRoleUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$MemberUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MemberUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$MessageBulkDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MessageBulkDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$MessageDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MessageDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$MessagePin : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MessagePin;
}

public final class dev/kord/common/entity/AuditLogEvent$MessageUnpin : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$MessageUnpin;
}

public final class dev/kord/common/entity/AuditLogEvent$RoleCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$RoleCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$RoleDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$RoleDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$RoleUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$RoleUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$StageInstanceCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$StageInstanceCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$StageInstanceDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$StageInstanceDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$StageInstanceUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$StageInstanceUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$StickerCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$StickerCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$StickerDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$StickerDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$StickerUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$StickerUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$ThreadCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ThreadCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$ThreadDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ThreadDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$ThreadUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$ThreadUpdate;
}

public final class dev/kord/common/entity/AuditLogEvent$Unknown : dev/kord/common/entity/AuditLogEvent {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/AuditLogEvent$WebhookCreate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$WebhookCreate;
}

public final class dev/kord/common/entity/AuditLogEvent$WebhookDelete : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$WebhookDelete;
}

public final class dev/kord/common/entity/AuditLogEvent$WebhookUpdate : dev/kord/common/entity/AuditLogEvent {
	public static final field INSTANCE Ldev/kord/common/entity/AuditLogEvent$WebhookUpdate;
}

public abstract class dev/kord/common/entity/AutoModerationActionType {
	public static final field Companion Ldev/kord/common/entity/AutoModerationActionType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AutoModerationActionType$BlockMessage : dev/kord/common/entity/AutoModerationActionType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationActionType$BlockMessage;
}

public final class dev/kord/common/entity/AutoModerationActionType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AutoModerationActionType$SendAlertMessage : dev/kord/common/entity/AutoModerationActionType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationActionType$SendAlertMessage;
}

public final class dev/kord/common/entity/AutoModerationActionType$Timeout : dev/kord/common/entity/AutoModerationActionType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationActionType$Timeout;
}

public final class dev/kord/common/entity/AutoModerationActionType$Unknown : dev/kord/common/entity/AutoModerationActionType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/AutoModerationRuleEventType {
	public static final field Companion Ldev/kord/common/entity/AutoModerationRuleEventType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AutoModerationRuleEventType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AutoModerationRuleEventType$MessageSend : dev/kord/common/entity/AutoModerationRuleEventType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleEventType$MessageSend;
}

public final class dev/kord/common/entity/AutoModerationRuleEventType$Unknown : dev/kord/common/entity/AutoModerationRuleEventType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/AutoModerationRuleKeywordPresetType {
	public static final field Companion Ldev/kord/common/entity/AutoModerationRuleKeywordPresetType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AutoModerationRuleKeywordPresetType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AutoModerationRuleKeywordPresetType$Profanity : dev/kord/common/entity/AutoModerationRuleKeywordPresetType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleKeywordPresetType$Profanity;
}

public final class dev/kord/common/entity/AutoModerationRuleKeywordPresetType$SexualContent : dev/kord/common/entity/AutoModerationRuleKeywordPresetType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleKeywordPresetType$SexualContent;
}

public final class dev/kord/common/entity/AutoModerationRuleKeywordPresetType$Slurs : dev/kord/common/entity/AutoModerationRuleKeywordPresetType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleKeywordPresetType$Slurs;
}

public final class dev/kord/common/entity/AutoModerationRuleKeywordPresetType$Unknown : dev/kord/common/entity/AutoModerationRuleKeywordPresetType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/AutoModerationRuleTriggerType {
	public static final field Companion Ldev/kord/common/entity/AutoModerationRuleTriggerType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/AutoModerationRuleTriggerType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/AutoModerationRuleTriggerType$Keyword : dev/kord/common/entity/AutoModerationRuleTriggerType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleTriggerType$Keyword;
}

public final class dev/kord/common/entity/AutoModerationRuleTriggerType$KeywordPreset : dev/kord/common/entity/AutoModerationRuleTriggerType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleTriggerType$KeywordPreset;
}

public final class dev/kord/common/entity/AutoModerationRuleTriggerType$MentionSpam : dev/kord/common/entity/AutoModerationRuleTriggerType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleTriggerType$MentionSpam;
}

public final class dev/kord/common/entity/AutoModerationRuleTriggerType$Spam : dev/kord/common/entity/AutoModerationRuleTriggerType {
	public static final field INSTANCE Ldev/kord/common/entity/AutoModerationRuleTriggerType$Spam;
}

public final class dev/kord/common/entity/AutoModerationRuleTriggerType$Unknown : dev/kord/common/entity/AutoModerationRuleTriggerType {
	public fun <init> (I)V
}

public abstract interface class dev/kord/common/entity/BaseDiscordApplication {
	public abstract fun getCoverImage ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getCustomInstallUrl ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getDescription ()Ljava/lang/String;
	public abstract fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public abstract fun getIcon ()Ljava/lang/String;
	public abstract fun getId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getInstallParams ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOwner ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getPrimarySkuId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public abstract fun getPrivacyPolicyUrl ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getRoleConnectionsVerificationUrl ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getRpcOrigins ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getSlug ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getTermsOfServiceUrl ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getVerifyKey ()Ljava/lang/String;
}

public abstract interface class dev/kord/common/entity/BaseDiscordInvite {
	public abstract fun getApproximateMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public abstract fun getApproximatePresenceCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public abstract fun getChannel ()Ldev/kord/common/entity/DiscordChannel;
	public abstract fun getCode ()Ljava/lang/String;
	public abstract fun getExpiresAt ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getGuild ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getGuildScheduledEvent ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getInviter ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getTargetApplication ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getTargetType ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getTargetUser ()Ldev/kord/common/entity/optional/Optional;
}

public final class dev/kord/common/entity/BulkDeleteData {
	public static final field Companion Ldev/kord/common/entity/BulkDeleteData$Companion;
	public synthetic fun <init> (ILjava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)V
	public synthetic fun <init> (Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)Ldev/kord/common/entity/BulkDeleteData;
	public static synthetic fun copy$default (Ldev/kord/common/entity/BulkDeleteData;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILjava/lang/Object;)Ldev/kord/common/entity/BulkDeleteData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getIds ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/BulkDeleteData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/BulkDeleteData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/BulkDeleteData$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/BulkDeleteData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/BulkDeleteData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/BulkDeleteData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/ButtonStyle {
	public static final field Companion Ldev/kord/common/entity/ButtonStyle$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ButtonStyle$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ButtonStyle$Danger : dev/kord/common/entity/ButtonStyle {
	public static final field INSTANCE Ldev/kord/common/entity/ButtonStyle$Danger;
}

public final class dev/kord/common/entity/ButtonStyle$Link : dev/kord/common/entity/ButtonStyle {
	public static final field INSTANCE Ldev/kord/common/entity/ButtonStyle$Link;
}

public final class dev/kord/common/entity/ButtonStyle$Primary : dev/kord/common/entity/ButtonStyle {
	public static final field INSTANCE Ldev/kord/common/entity/ButtonStyle$Primary;
}

public final class dev/kord/common/entity/ButtonStyle$Secondary : dev/kord/common/entity/ButtonStyle {
	public static final field INSTANCE Ldev/kord/common/entity/ButtonStyle$Secondary;
}

public final class dev/kord/common/entity/ButtonStyle$Success : dev/kord/common/entity/ButtonStyle {
	public static final field INSTANCE Ldev/kord/common/entity/ButtonStyle$Success;
}

public final class dev/kord/common/entity/ButtonStyle$Unknown : dev/kord/common/entity/ButtonStyle {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ChannelFlag : java/lang/Enum {
	public static final field Pinned Ldev/kord/common/entity/ChannelFlag;
	public static final field RequireTag Ldev/kord/common/entity/ChannelFlag;
	public final fun getCode ()I
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun plus (Ldev/kord/common/entity/ChannelFlag;)Ldev/kord/common/entity/ChannelFlags;
	public final fun plus (Ldev/kord/common/entity/ChannelFlags;)Ldev/kord/common/entity/ChannelFlags;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/entity/ChannelFlag;
	public static fun values ()[Ldev/kord/common/entity/ChannelFlag;
}

public final class dev/kord/common/entity/ChannelFlags {
	public static final field Companion Ldev/kord/common/entity/ChannelFlags$Companion;
	public final fun component1 ()I
	public final fun contains (Ldev/kord/common/entity/ChannelFlag;)Z
	public final fun contains (Ldev/kord/common/entity/ChannelFlags;)Z
	public final fun copy (I)Ldev/kord/common/entity/ChannelFlags;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/ChannelFlags;
	public static synthetic fun copy$default (Ldev/kord/common/entity/ChannelFlags;IILjava/lang/Object;)Ldev/kord/common/entity/ChannelFlags;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun getFlags ()Ljava/util/List;
	public fun hashCode ()I
	public final fun minus (Ldev/kord/common/entity/ChannelFlag;)Ldev/kord/common/entity/ChannelFlags;
	public final fun minus (Ldev/kord/common/entity/ChannelFlags;)Ldev/kord/common/entity/ChannelFlags;
	public final fun plus (Ldev/kord/common/entity/ChannelFlag;)Ldev/kord/common/entity/ChannelFlags;
	public final fun plus (Ldev/kord/common/entity/ChannelFlags;)Ldev/kord/common/entity/ChannelFlags;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ChannelFlags$Builder {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Ldev/kord/common/entity/ChannelFlags;
	public final fun unaryMinus (Ldev/kord/common/entity/ChannelFlag;)V
	public final fun unaryMinus (Ldev/kord/common/entity/ChannelFlags;)V
	public final fun unaryPlus (Ldev/kord/common/entity/ChannelFlag;)V
	public final fun unaryPlus (Ldev/kord/common/entity/ChannelFlags;)V
}

public final class dev/kord/common/entity/ChannelFlags$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/ChannelType {
	public static final field Companion Ldev/kord/common/entity/ChannelType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ChannelType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ChannelType$DM : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$DM;
}

public final class dev/kord/common/entity/ChannelType$GroupDM : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GroupDM;
}

public final class dev/kord/common/entity/ChannelType$GuildCategory : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GuildCategory;
}

public final class dev/kord/common/entity/ChannelType$GuildDirectory : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GuildDirectory;
}

public final class dev/kord/common/entity/ChannelType$GuildForum : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GuildForum;
}

public final class dev/kord/common/entity/ChannelType$GuildNews : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GuildNews;
}

public final class dev/kord/common/entity/ChannelType$GuildStageVoice : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GuildStageVoice;
}

public final class dev/kord/common/entity/ChannelType$GuildText : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GuildText;
}

public final class dev/kord/common/entity/ChannelType$GuildVoice : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$GuildVoice;
}

public final class dev/kord/common/entity/ChannelType$PrivateThread : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$PrivateThread;
}

public final class dev/kord/common/entity/ChannelType$PublicGuildThread : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$PublicGuildThread;
}

public final class dev/kord/common/entity/ChannelType$PublicNewsThread : dev/kord/common/entity/ChannelType {
	public static final field INSTANCE Ldev/kord/common/entity/ChannelType$PublicNewsThread;
}

public final class dev/kord/common/entity/ChannelType$Unknown : dev/kord/common/entity/ChannelType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/Choice {
	public static final field Companion Ldev/kord/common/entity/Choice$Companion;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getNameLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getValue ()Ljava/lang/Object;
}

public final class dev/kord/common/entity/Choice$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/Choice$IntegerChoice : dev/kord/common/entity/Choice {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;J)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()J
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;J)Ldev/kord/common/entity/Choice$IntegerChoice;
	public static synthetic fun copy$default (Ldev/kord/common/entity/Choice$IntegerChoice;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;JILjava/lang/Object;)Ldev/kord/common/entity/Choice$IntegerChoice;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public fun getValue ()Ljava/lang/Long;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/Choice$NumberChoice : dev/kord/common/entity/Choice {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;D)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()D
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;D)Ldev/kord/common/entity/Choice$NumberChoice;
	public static synthetic fun copy$default (Ldev/kord/common/entity/Choice$NumberChoice;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;DILjava/lang/Object;)Ldev/kord/common/entity/Choice$NumberChoice;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public fun getValue ()Ljava/lang/Double;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/Choice$StringChoice : dev/kord/common/entity/Choice {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;)Ldev/kord/common/entity/Choice$StringChoice;
	public static synthetic fun copy$default (Ldev/kord/common/entity/Choice$StringChoice;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/Choice$StringChoice;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun getNameLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/common/entity/CommandArgument : dev/kord/common/entity/Option {
	public static final field Companion Ldev/kord/common/entity/CommandArgument$Companion;
	public abstract fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public abstract fun getValue ()Ljava/lang/Object;
}

public final class dev/kord/common/entity/CommandArgument$AttachmentArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$AttachmentArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$AttachmentArgument;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$AttachmentArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ldev/kord/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$AutoCompleteArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$AutoCompleteArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$AutoCompleteArgument;Ljava/lang/String;Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$AutoCompleteArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$BooleanArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$BooleanArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$BooleanArgument;Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$BooleanArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ljava/lang/Boolean;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$ChannelArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$ChannelArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$ChannelArgument;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$ChannelArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ldev/kord/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/CommandArgument$IntegerArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;JLdev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;JLdev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()J
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;JLdev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$IntegerArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$IntegerArgument;Ljava/lang/String;JLdev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$IntegerArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ljava/lang/Long;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$MentionableArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$MentionableArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$MentionableArgument;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$MentionableArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ldev/kord/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$NumberArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;DLdev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;DLdev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()D
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;DLdev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$NumberArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$NumberArgument;Ljava/lang/String;DLdev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$NumberArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ljava/lang/Double;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$RoleArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$RoleArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$RoleArgument;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$RoleArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ldev/kord/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$StringArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$StringArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$StringArgument;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$StringArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandArgument$UserArgument : dev/kord/common/entity/CommandArgument {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/CommandArgument$UserArgument;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandArgument$UserArgument;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/CommandArgument$UserArgument;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFocused ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun getValue ()Ldev/kord/common/entity/Snowflake;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/CommandGroup : dev/kord/common/entity/Option {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/CommandGroup;
	public static synthetic fun copy$default (Ldev/kord/common/entity/CommandGroup;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/CommandGroup;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/common/entity/ComponentType {
	public static final field Companion Ldev/kord/common/entity/ComponentType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ComponentType$ActionRow : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$ActionRow;
}

public final class dev/kord/common/entity/ComponentType$Button : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$Button;
}

public final class dev/kord/common/entity/ComponentType$ChannelSelect : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$ChannelSelect;
}

public final class dev/kord/common/entity/ComponentType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ComponentType$MentionableSelect : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$MentionableSelect;
}

public final class dev/kord/common/entity/ComponentType$RoleSelect : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$RoleSelect;
}

public final class dev/kord/common/entity/ComponentType$StringSelect : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$StringSelect;
}

public final class dev/kord/common/entity/ComponentType$TextInput : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$TextInput;
}

public final class dev/kord/common/entity/ComponentType$Unknown : dev/kord/common/entity/ComponentType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ComponentType$UserSelect : dev/kord/common/entity/ComponentType {
	public static final field INSTANCE Ldev/kord/common/entity/ComponentType$UserSelect;
}

public abstract class dev/kord/common/entity/DefaultMessageNotificationLevel {
	public static final field Companion Ldev/kord/common/entity/DefaultMessageNotificationLevel$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/DefaultMessageNotificationLevel$AllMessages : dev/kord/common/entity/DefaultMessageNotificationLevel {
	public static final field INSTANCE Ldev/kord/common/entity/DefaultMessageNotificationLevel$AllMessages;
}

public final class dev/kord/common/entity/DefaultMessageNotificationLevel$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DefaultMessageNotificationLevel$OnlyMentions : dev/kord/common/entity/DefaultMessageNotificationLevel {
	public static final field INSTANCE Ldev/kord/common/entity/DefaultMessageNotificationLevel$OnlyMentions;
}

public final class dev/kord/common/entity/DefaultMessageNotificationLevel$Unknown : dev/kord/common/entity/DefaultMessageNotificationLevel {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/DefaultReaction {
	public static final field Companion Ldev/kord/common/entity/DefaultReaction$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/common/entity/DefaultReaction;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DefaultReaction;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/DefaultReaction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEmojiId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DefaultReaction;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DefaultReaction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DefaultReaction$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DefaultReaction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DefaultReaction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DefaultReaction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DeletedMessage {
	public static final field Companion Ldev/kord/common/entity/DeletedMessage$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)Ldev/kord/common/entity/DeletedMessage;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DeletedMessage;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DeletedMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DeletedMessage;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DeletedMessage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DeletedMessage$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DeletedMessage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DeletedMessage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DeletedMessage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivity {
	public static final field Companion Ldev/kord/common/entity/DiscordActivity$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/ActivityType;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Lkotlinx/datetime/Instant;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordActivity;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordActivity;Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordActivity;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getAssets ()Ldev/kord/common/entity/optional/Optional;
	public final fun getButtons ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getDetails ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmoji ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getInstance ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getParty ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSecrets ()Ldev/kord/common/entity/optional/Optional;
	public final fun getState ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamps ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/ActivityType;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordActivity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordActivity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordActivity$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordActivity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordActivity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityAssets {
	public static final field Companion Ldev/kord/common/entity/DiscordActivityAssets$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordActivityAssets;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordActivityAssets;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordActivityAssets;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLargeImage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getLargeText ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSmallImage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSmallText ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordActivityAssets;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordActivityAssets$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordActivityAssets$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordActivityAssets;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordActivityAssets;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityAssets$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityEmoji {
	public static final field Companion Ldev/kord/common/entity/DiscordActivityEmoji$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordActivityEmoji;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordActivityEmoji;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordActivityEmoji;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAnimated ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordActivityEmoji;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordActivityEmoji$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordActivityEmoji$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordActivityEmoji;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordActivityEmoji;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityEmoji$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityParty {
	public static final field Companion Ldev/kord/common/entity/DiscordActivityParty$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordActivityParty;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordActivityParty;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordActivityParty;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSize ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordActivityParty;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordActivityParty$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordActivityParty$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordActivityParty;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordActivityParty;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityParty$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityPartySize {
	public static final field Companion Ldev/kord/common/entity/DiscordActivityPartySize$Companion;
	public fun <init> (II)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Ldev/kord/common/entity/DiscordActivityPartySize;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordActivityPartySize;IIILjava/lang/Object;)Ldev/kord/common/entity/DiscordActivityPartySize;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCurrent ()I
	public final fun getMaximum ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/DiscordActivityPartySize$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivitySecrets {
	public static final field Companion Ldev/kord/common/entity/DiscordActivitySecrets$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordActivitySecrets;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordActivitySecrets;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordActivitySecrets;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getJoin ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMatch ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSpectate ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordActivitySecrets;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordActivitySecrets$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordActivitySecrets$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordActivitySecrets;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordActivitySecrets;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivitySecrets$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityTimestamps {
	public static final field Companion Ldev/kord/common/entity/DiscordActivityTimestamps$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordActivityTimestamps;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordActivityTimestamps;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordActivityTimestamps;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEnd ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStart ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordActivityTimestamps;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordActivityTimestamps$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordActivityTimestamps$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordActivityTimestamps;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordActivityTimestamps;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordActivityTimestamps$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAddedGuildMember {
	public static final field Companion Ldev/kord/common/entity/DiscordAddedGuildMember$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Lkotlinx/datetime/Instant;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Ldev/kord/common/entity/Snowflake;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordAddedGuildMember;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAddedGuildMember;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAddedGuildMember;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCommunicationDisabledUntil ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDeaf ()Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getJoinedAt ()Lkotlinx/datetime/Instant;
	public final fun getMute ()Z
	public final fun getNick ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPending ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPremiumSince ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoles ()Ljava/util/List;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAddedGuildMember;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAddedGuildMember$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAddedGuildMember$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAddedGuildMember;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAddedGuildMember;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAddedGuildMember$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordApplication : dev/kord/common/entity/BaseDiscordApplication {
	public static final field Companion Ldev/kord/common/entity/DiscordApplication$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ljava/lang/String;
	public final fun component12 ()Ldev/kord/common/entity/DiscordTeam;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component14 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component18 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component19 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component21 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordApplication;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordApplication;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordApplication;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBotPublic ()Z
	public final fun getBotRequireCodeGrant ()Z
	public fun getCoverImage ()Ldev/kord/common/entity/optional/Optional;
	public fun getCustomInstallUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getDescription ()Ljava/lang/String;
	public fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInstallParams ()Ldev/kord/common/entity/optional/Optional;
	public fun getName ()Ljava/lang/String;
	public fun getOwner ()Ldev/kord/common/entity/optional/Optional;
	public fun getPrimarySkuId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun getPrivacyPolicyUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getRoleConnectionsVerificationUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getRpcOrigins ()Ldev/kord/common/entity/optional/Optional;
	public fun getSlug ()Ldev/kord/common/entity/optional/Optional;
	public fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTeam ()Ldev/kord/common/entity/DiscordTeam;
	public fun getTermsOfServiceUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getVerifyKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordApplication;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordApplication$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordApplication$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordApplication;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordApplication;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordApplication$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordApplicationCommand {
	public static final field Companion Ldev/kord/common/entity/DiscordApplicationCommand$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/Permissions;
	public final fun component11 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component12 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component14 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordApplicationCommand;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordApplicationCommand;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordApplicationCommand;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDefaultMemberPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getDefaultPermission ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDescriptionLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDmPermission ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getNameLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public final fun getNsfw ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getVersion ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordApplicationCommand;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordApplicationCommand$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordApplicationCommand$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordApplicationCommand;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordApplicationCommand;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordApplicationCommand$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordApplicationKt {
	public static final fun ApplicationFlags (Ljava/lang/Iterable;)Ldev/kord/common/entity/ApplicationFlags;
	public static final fun ApplicationFlags (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/ApplicationFlags;
	public static final fun ApplicationFlags ([Ldev/kord/common/entity/ApplicationFlag;)Ldev/kord/common/entity/ApplicationFlags;
	public static final fun ApplicationFlags ([Ldev/kord/common/entity/ApplicationFlags;)Ldev/kord/common/entity/ApplicationFlags;
	public static final fun ApplicationFlagsWithIterable (Ljava/lang/Iterable;)Ldev/kord/common/entity/ApplicationFlags;
}

public final class dev/kord/common/entity/DiscordApplicationRoleConnectionMetadata {
	public static final field Companion Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/ApplicationRoleConnectionMetadataType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata;Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDescriptionLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public final fun getKey ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getNameLocalizations ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/ApplicationRoleConnectionMetadataType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordApplicationRoleConnectionMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordApplicationRoleConnectionMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordApplicationRoleConnectionMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAttachment {
	public static final field Companion Ldev/kord/common/entity/DiscordAttachment$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()I
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordAttachment;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAttachment;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAttachment;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContentType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDescription ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDurationSecs ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEphemeral ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getFilename ()Ljava/lang/String;
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getSize ()I
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWaveform ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAttachment;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAttachment$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAttachment$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAttachment;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAttachment;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAttachment$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAuditLog {
	public static final field Companion Ldev/kord/common/entity/DiscordAuditLog$Companion;
	public synthetic fun <init> (ILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ldev/kord/common/entity/DiscordAuditLog;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAuditLog;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAuditLog;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationCommands ()Ljava/util/List;
	public final fun getAuditLogEntries ()Ljava/util/List;
	public final fun getAutoModerationRules ()Ljava/util/List;
	public final fun getIntegrations ()Ljava/util/List;
	public final fun getThreads ()Ljava/util/List;
	public final fun getUsers ()Ljava/util/List;
	public final fun getWebhooks ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAuditLog;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAuditLog$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAuditLog$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAuditLog;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAuditLog;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAuditLog$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAuditLogEntry {
	public static final field Companion Ldev/kord/common/entity/DiscordAuditLogEntry$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AuditLogEvent;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AuditLogEvent;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AuditLogEvent;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun component5 ()Ldev/kord/common/entity/AuditLogEvent;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AuditLogEvent;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordAuditLogEntry;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAuditLogEntry;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AuditLogEvent;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAuditLogEntry;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Ldev/kord/common/entity/AuditLogChangeKey;)Ldev/kord/common/entity/AuditLogChange;
	public final fun getActionType ()Ldev/kord/common/entity/AuditLogEvent;
	public final fun getChanges ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getReason ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTargetId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAuditLogEntry;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAuditLogEntry$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAuditLogEntry$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAuditLogEntry;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAuditLogEntry;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAuditLogEntry$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAuditLogRoleChange {
	public static final field Companion Ldev/kord/common/entity/DiscordAuditLogRoleChange$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ldev/kord/common/entity/Permissions;Ljava/lang/Boolean;Ljava/lang/Boolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ldev/kord/common/entity/Permissions;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ldev/kord/common/entity/Permissions;Ljava/lang/Boolean;Ljava/lang/Boolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/Integer;
	public final fun component4 ()Ljava/lang/Boolean;
	public final fun component5 ()Ljava/lang/Integer;
	public final fun component6 ()Ldev/kord/common/entity/Permissions;
	public final fun component7 ()Ljava/lang/Boolean;
	public final fun component8 ()Ljava/lang/Boolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ldev/kord/common/entity/Permissions;Ljava/lang/Boolean;Ljava/lang/Boolean;)Ldev/kord/common/entity/DiscordAuditLogRoleChange;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAuditLogRoleChange;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Integer;Ldev/kord/common/entity/Permissions;Ljava/lang/Boolean;Ljava/lang/Boolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAuditLogRoleChange;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ljava/lang/Integer;
	public final fun getHoist ()Ljava/lang/Boolean;
	public final fun getId ()Ljava/lang/String;
	public final fun getManaged ()Ljava/lang/Boolean;
	public final fun getMentionable ()Ljava/lang/Boolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getPosition ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAuditLogRoleChange;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAuditLogRoleChange$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAuditLogRoleChange$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAuditLogRoleChange;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAuditLogRoleChange;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAuditLogRoleChange$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoComplete {
	public static final field Companion Ldev/kord/common/entity/DiscordAutoComplete$Companion;
	public synthetic fun <init> (ILjava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Ldev/kord/common/entity/DiscordAutoComplete;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAutoComplete;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAutoComplete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChoices ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAutoComplete;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;)V
}

public final class dev/kord/common/entity/DiscordAutoComplete$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAutoComplete;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAutoComplete;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoComplete$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationAction {
	public static final field Companion Ldev/kord/common/entity/DiscordAutoModerationAction$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/AutoModerationActionType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/AutoModerationActionType;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/AutoModerationActionType;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/AutoModerationActionType;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/AutoModerationActionType;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordAutoModerationAction;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAutoModerationAction;Ldev/kord/common/entity/AutoModerationActionType;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAutoModerationAction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMetadata ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/AutoModerationActionType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAutoModerationAction;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAutoModerationAction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAutoModerationAction$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAutoModerationAction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAutoModerationAction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationAction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationActionMetadata {
	public static final field Companion Ldev/kord/common/entity/DiscordAutoModerationActionMetadata$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordAutoModerationActionMetadata;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAutoModerationActionMetadata;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAutoModerationActionMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getCustomMessage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDurationSeconds ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAutoModerationActionMetadata;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAutoModerationActionMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAutoModerationActionMetadata$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAutoModerationActionMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAutoModerationActionMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationActionMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationRule {
	public static final field Companion Ldev/kord/common/entity/DiscordAutoModerationRule$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AutoModerationRuleEventType;Ldev/kord/common/entity/AutoModerationRuleTriggerType;Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;Ljava/util/List;ZLjava/util/List;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AutoModerationRuleEventType;Ldev/kord/common/entity/AutoModerationRuleTriggerType;Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;Ljava/util/List;ZLjava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ljava/util/List;
	public final fun component11 ()Ljava/util/List;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun component5 ()Ldev/kord/common/entity/AutoModerationRuleEventType;
	public final fun component6 ()Ldev/kord/common/entity/AutoModerationRuleTriggerType;
	public final fun component7 ()Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;
	public final fun component8 ()Ljava/util/List;
	public final fun component9 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AutoModerationRuleEventType;Ldev/kord/common/entity/AutoModerationRuleTriggerType;Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;Ljava/util/List;ZLjava/util/List;Ljava/util/List;)Ldev/kord/common/entity/DiscordAutoModerationRule;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAutoModerationRule;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/AutoModerationRuleEventType;Ldev/kord/common/entity/AutoModerationRuleTriggerType;Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;Ljava/util/List;ZLjava/util/List;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAutoModerationRule;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActions ()Ljava/util/List;
	public final fun getCreatorId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEnabled ()Z
	public final fun getEventType ()Ldev/kord/common/entity/AutoModerationRuleEventType;
	public final fun getExemptChannels ()Ljava/util/List;
	public final fun getExemptRoles ()Ljava/util/List;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getTriggerMetadata ()Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;
	public final fun getTriggerType ()Ldev/kord/common/entity/AutoModerationRuleTriggerType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAutoModerationRule;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAutoModerationRule$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAutoModerationRule$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAutoModerationRule;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAutoModerationRule;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationRule$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata {
	public static final field Companion Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowList ()Ldev/kord/common/entity/optional/Optional;
	public final fun getKeywordFilter ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentionRaidProtectionEnabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getMentionTotalLimit ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getPresets ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRegexPatterns ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordAutoModerationRuleTriggerMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordBotActivity {
	public static final field Companion Ldev/kord/common/entity/DiscordBotActivity$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/ActivityType;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordBotActivity;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordBotActivity;Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordBotActivity;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/ActivityType;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordBotActivity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordBotActivity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordBotActivity$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordBotActivity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordBotActivity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordBotActivity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordChannel {
	public static final field Companion Ldev/kord/common/entity/DiscordChannel$Companion;
	public synthetic fun <init> (IILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component11 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component16 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component17 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component18 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component19 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/ChannelType;
	public final fun component20 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component21 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component22 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component23 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component24 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component25 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component26 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component27 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component28 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component29 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component30 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component31 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component32 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component33 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component34 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component35 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordChannel;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;IILjava/lang/Object;)Ldev/kord/common/entity/DiscordChannel;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getAppliedTags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getAvailableTags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getBitrate ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getDefaultAutoArchiveDuration ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefaultForumLayout ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefaultReactionEmoji ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefaultSortOrder ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefaultThreadRateLimitPerUser ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getIcon ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getLastMessageId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getLastPinTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMessage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMessageCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getNsfw ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getOwnerId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getParentId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getPermissionOverwrites ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPosition ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getRateLimitPerUser ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRecipients ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRtcRegion ()Ldev/kord/common/entity/optional/Optional;
	public final fun getThreadMetadata ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTopic ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTotalMessageSent ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getType ()Ldev/kord/common/entity/ChannelType;
	public final fun getUserLimit ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getVideoQualityMode ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordChannel;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordChannel$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordChannel$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordChannel;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordChannel;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordChannel$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordChannelKt {
	public static final fun ChannelFlags (Ljava/lang/Iterable;)Ldev/kord/common/entity/ChannelFlags;
	public static final fun ChannelFlags (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/ChannelFlags;
	public static final fun ChannelFlags ([Ldev/kord/common/entity/ChannelFlag;)Ldev/kord/common/entity/ChannelFlags;
	public static final fun ChannelFlags ([Ldev/kord/common/entity/ChannelFlags;)Ldev/kord/common/entity/ChannelFlags;
	public static final fun ChannelFlags0 (Ljava/lang/Iterable;)Ldev/kord/common/entity/ChannelFlags;
}

public final class dev/kord/common/entity/DiscordChatComponent : dev/kord/common/entity/DiscordComponent {
	public static final field Companion Ldev/kord/common/entity/DiscordChatComponent$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/ComponentType;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component14 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component15 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordChatComponent;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordChatComponent;Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordChatComponent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChannelTypes ()Ldev/kord/common/entity/optional/Optional;
	public fun getComponents ()Ldev/kord/common/entity/optional/Optional;
	public fun getCustomId ()Ldev/kord/common/entity/optional/Optional;
	public fun getDisabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getEmoji ()Ldev/kord/common/entity/optional/Optional;
	public fun getLabel ()Ldev/kord/common/entity/optional/Optional;
	public fun getMaxLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getMaxValues ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getMinLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getMinValues ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public fun getPlaceholder ()Ldev/kord/common/entity/optional/Optional;
	public fun getRequired ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getStyle ()Ldev/kord/common/entity/optional/Optional;
	public fun getType ()Ldev/kord/common/entity/ComponentType;
	public fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getValue ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordChatComponent;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordChatComponent$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordChatComponent$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordChatComponent;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordChatComponent;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordChatComponent$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordClientStatus {
	public static final field Companion Ldev/kord/common/entity/DiscordClientStatus$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordClientStatus;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordClientStatus;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordClientStatus;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDesktop ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMobile ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWeb ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordClientStatus;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordClientStatus$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordClientStatus$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordClientStatus;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordClientStatus;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordClientStatus$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/DiscordComponent {
	public static final field Companion Ldev/kord/common/entity/DiscordComponent$Companion;
	public abstract fun getChannelTypes ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getComponents ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getCustomId ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getDisabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public abstract fun getEmoji ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getLabel ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getMaxLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public abstract fun getMaxValues ()Ldev/kord/common/entity/optional/OptionalInt;
	public abstract fun getMinLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public abstract fun getMinValues ()Ldev/kord/common/entity/optional/OptionalInt;
	public abstract fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getPlaceholder ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getRequired ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public abstract fun getType ()Ldev/kord/common/entity/ComponentType;
	public abstract fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public abstract fun getValue ()Ldev/kord/common/entity/optional/Optional;
}

public final class dev/kord/common/entity/DiscordComponent$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordConnection {
	public static final field Companion Ldev/kord/common/entity/DiscordConnection$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ZZZLdev/kord/common/entity/DiscordConnectionVisibility;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ZZZLdev/kord/common/entity/DiscordConnectionVisibility;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ZZZLdev/kord/common/entity/DiscordConnectionVisibility;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Ldev/kord/common/entity/DiscordConnectionVisibility;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ZZZLdev/kord/common/entity/DiscordConnectionVisibility;)Ldev/kord/common/entity/DiscordConnection;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordConnection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ZZZLdev/kord/common/entity/DiscordConnectionVisibility;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordConnection;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFriendSync ()Z
	public final fun getId ()Ljava/lang/String;
	public final fun getIntegrations ()Ldev/kord/common/entity/optional/Optional;
	public final fun getName ()Ljava/lang/String;
	public final fun getRevoked ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getShowActivity ()Z
	public final fun getType ()Ljava/lang/String;
	public final fun getVerified ()Z
	public final fun getVisibility ()Ldev/kord/common/entity/DiscordConnectionVisibility;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordConnection;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordConnection$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordConnection$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordConnection;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordConnection;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordConnection$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/DiscordConnectionVisibility {
	public static final field Companion Ldev/kord/common/entity/DiscordConnectionVisibility$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/DiscordConnectionVisibility$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordConnectionVisibility$Everyone : dev/kord/common/entity/DiscordConnectionVisibility {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordConnectionVisibility$Everyone;
}

public final class dev/kord/common/entity/DiscordConnectionVisibility$None : dev/kord/common/entity/DiscordConnectionVisibility {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordConnectionVisibility$None;
}

public final class dev/kord/common/entity/DiscordConnectionVisibility$Unknown : dev/kord/common/entity/DiscordConnectionVisibility {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/DiscordDeletedGuildRole {
	public static final field Companion Ldev/kord/common/entity/DiscordDeletedGuildRole$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordDeletedGuildRole;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordDeletedGuildRole;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordDeletedGuildRole;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordDeletedGuildRole;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordDeletedGuildRole$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordDeletedGuildRole$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordDeletedGuildRole;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordDeletedGuildRole;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordDeletedGuildRole$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordEmbed;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthor ()Ldev/kord/common/entity/optional/Optional;
	public final fun getColor ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getDescription ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFields ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFooter ()Ldev/kord/common/entity/optional/Optional;
	public final fun getImage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getProvider ()Ldev/kord/common/entity/optional/Optional;
	public final fun getThumbnail ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTitle ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getVideo ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Author {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Author$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordEmbed$Author;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed$Author;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed$Author;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getProxyIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed$Author;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$Author$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$Author$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed$Author;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed$Author;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Author$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Field {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Field$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordEmbed$Field;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed$Field;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed$Field;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInline ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed$Field;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$Field$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$Field$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed$Field;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed$Field;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Field$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Footer {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Footer$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordEmbed$Footer;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed$Footer;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed$Footer;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getProxyIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed$Footer;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$Footer$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$Footer$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed$Footer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed$Footer;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Footer$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Image {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Image$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/common/entity/DiscordEmbed$Image;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed$Image;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed$Image;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getProxyUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed$Image;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$Image$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$Image$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed$Image;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed$Image;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Image$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Provider {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Provider$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordEmbed$Provider;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed$Provider;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed$Provider;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed$Provider;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$Provider$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$Provider$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed$Provider;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed$Provider;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Provider$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Thumbnail {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Thumbnail$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/common/entity/DiscordEmbed$Thumbnail;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed$Thumbnail;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed$Thumbnail;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getProxyUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed$Thumbnail;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$Thumbnail$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$Thumbnail$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed$Thumbnail;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed$Thumbnail;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Thumbnail$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Video {
	public static final field Companion Ldev/kord/common/entity/DiscordEmbed$Video$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/common/entity/DiscordEmbed$Video;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmbed$Video;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmbed$Video;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmbed$Video;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmbed$Video$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmbed$Video$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmbed$Video;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmbed$Video;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmbed$Video$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmoji {
	public static final field Companion Ldev/kord/common/entity/DiscordEmoji$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordEmoji;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordEmoji;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordEmoji;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAnimated ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getAvailable ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getManaged ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getRequireColons ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getRoles ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordEmoji;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordEmoji$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordEmoji$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordEmoji;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordEmoji;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordEmoji$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuild {
	public static final field Companion Ldev/kord/common/entity/DiscordGuild$Companion;
	public synthetic fun <init> (IILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Lkotlin/time/Duration;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/NsfwLevel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/NsfwLevel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/Snowflake;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/NsfwLevel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/Snowflake;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ldev/kord/common/entity/Snowflake;
	public final fun component12-UwyO8pc ()J
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component14 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component15 ()Ldev/kord/common/entity/VerificationLevel;
	public final fun component16 ()Ldev/kord/common/entity/DefaultMessageNotificationLevel;
	public final fun component17 ()Ldev/kord/common/entity/ExplicitContentFilter;
	public final fun component18 ()Ljava/util/List;
	public final fun component19 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Ljava/util/List;
	public final fun component21 ()Ldev/kord/common/entity/MFALevel;
	public final fun component22 ()Ldev/kord/common/entity/Snowflake;
	public final fun component23 ()Ldev/kord/common/entity/Snowflake;
	public final fun component24 ()Ldev/kord/common/entity/SystemChannelFlags;
	public final fun component25 ()Ldev/kord/common/entity/Snowflake;
	public final fun component26 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component27 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component28 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component29 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component3 ()Ljava/lang/String;
	public final fun component30 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component31 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component32 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component33 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component34 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component35 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component36 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component37 ()Ljava/lang/String;
	public final fun component38 ()Ljava/lang/String;
	public final fun component39 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component40 ()Ldev/kord/common/entity/PremiumTier;
	public final fun component41 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component42 ()Ljava/lang/String;
	public final fun component43 ()Ldev/kord/common/entity/Snowflake;
	public final fun component44 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component45 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component46 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component47 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component48 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component49 ()Ldev/kord/common/entity/NsfwLevel;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component50 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component51 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component52 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component53 ()Z
	public final fun component54 ()Ldev/kord/common/entity/Snowflake;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/Snowflake;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy-S_VAx1s (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/NsfwLevel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordGuild;
	public static synthetic fun copy-S_VAx1s$default (Ldev/kord/common/entity/DiscordGuild;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/NsfwLevel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/Snowflake;IILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuild;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAfkChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getAfkTimeout-UwyO8pc ()J
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getApproximateMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getApproximatePresenceCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getBanner ()Ljava/lang/String;
	public final fun getChannels ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefaultMessageNotifications ()Ldev/kord/common/entity/DefaultMessageNotificationLevel;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmojis ()Ljava/util/List;
	public final fun getExplicitContentFilter ()Ldev/kord/common/entity/ExplicitContentFilter;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getGuildScheduledEvents ()Ldev/kord/common/entity/optional/Optional;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getIconHash ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getJoinedAt ()Ldev/kord/common/entity/optional/Optional;
	public final fun getLarge ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getMaxMembers ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMaxPresences ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMaxStageVideoChannelUsers ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMaxVideoChannelUsers ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMembers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMfaLevel ()Ldev/kord/common/entity/MFALevel;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfwLevel ()Ldev/kord/common/entity/NsfwLevel;
	public final fun getOwner ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getOwnerId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPreferredLocale ()Ljava/lang/String;
	public final fun getPremiumProgressBarEnabled ()Z
	public final fun getPremiumSubscriptionCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getPremiumTier ()Ldev/kord/common/entity/PremiumTier;
	public final fun getPresences ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPublicUpdatesChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getRegion ()Ljava/lang/String;
	public final fun getRoles ()Ljava/util/List;
	public final fun getRulesChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSafetyAlertsChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSplash ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStageInstances ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSystemChannelFlags ()Ldev/kord/common/entity/SystemChannelFlags;
	public final fun getSystemChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getThreads ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUnavailable ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getVanityUrlCode ()Ljava/lang/String;
	public final fun getVerificationLevel ()Ldev/kord/common/entity/VerificationLevel;
	public final fun getVoiceStates ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWelcomeScreen ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidgetChannelId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getWidgetEnabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuild;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuild$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuild$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuild;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuild;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuild$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildApplicationCommandPermission {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ApplicationCommandPermissionType;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ApplicationCommandPermissionType;Z)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/ApplicationCommandPermissionType;
	public final fun component3 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ApplicationCommandPermissionType;Z)Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ApplicationCommandPermissionType;ZILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermission ()Z
	public final fun getType ()Ldev/kord/common/entity/ApplicationCommandPermissionType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildApplicationCommandPermission$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildApplicationCommandPermission$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildApplicationCommandPermissions {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/util/List;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/util/List;)Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermissions ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildApplicationCommandPermissions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildApplicationCommandPermissions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildBan {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildBan$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/DiscordUser;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;)Ldev/kord/common/entity/DiscordGuildBan;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildBan;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildBan;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUser ()Ldev/kord/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildBan;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildBan$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildBan$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildBan;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildBan;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildBan$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildIntegrations {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildIntegrations$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordGuildIntegrations;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildIntegrations;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildIntegrations;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildIntegrations;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildIntegrations$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildIntegrations$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildIntegrations;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildIntegrations;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildIntegrations$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildMember {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildMember$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/GuildMemberFlags;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/GuildMemberFlags;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/GuildMemberFlags;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Lkotlinx/datetime/Instant;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/GuildMemberFlags;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/GuildMemberFlags;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordGuildMember;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildMember;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/GuildMemberFlags;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildMember;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCommunicationDisabledUntil ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDeaf ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getFlags ()Ldev/kord/common/entity/GuildMemberFlags;
	public final fun getJoinedAt ()Lkotlinx/datetime/Instant;
	public final fun getMute ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getNick ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPending ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPremiumSince ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoles ()Ljava/util/List;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildMember;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildMember$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildMember$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildMember;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildMember;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildMember$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildOnboarding {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildOnboarding$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;Z)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;Z)Ldev/kord/common/entity/DiscordGuildOnboarding;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildOnboarding;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;ZILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildOnboarding;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDefaultChannelIds ()Ljava/util/List;
	public final fun getEnabled ()Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPrompts ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildOnboarding;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildOnboarding$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildOnboarding$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildOnboarding;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildOnboarding;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildOnboarding$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildPreview {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildPreview$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()I
	public final fun component9 ()I
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Ljava/util/List;)Ldev/kord/common/entity/DiscordGuildPreview;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildPreview;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildPreview;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApproximateMemberCount ()I
	public final fun getApproximatePresenceCount ()I
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ljava/lang/String;
	public final fun getEmojis ()Ljava/util/List;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getSplash ()Ljava/lang/String;
	public final fun getStickers ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildPreview;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildPreview$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildPreview$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildPreview;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildPreview;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildPreview$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildRole {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildRole$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordRole;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordRole;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/DiscordRole;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordRole;)Ldev/kord/common/entity/DiscordGuildRole;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildRole;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordRole;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildRole;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getRole ()Ldev/kord/common/entity/DiscordRole;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildRole;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildRole$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildRole$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildRole;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildRole;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildRole$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildScheduledEvent {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildScheduledEvent$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel;Ldev/kord/common/entity/GuildScheduledEventStatus;Ldev/kord/common/entity/ScheduledEntityType;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel;Ldev/kord/common/entity/GuildScheduledEventStatus;Ldev/kord/common/entity/ScheduledEntityType;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel;Ldev/kord/common/entity/GuildScheduledEventStatus;Ldev/kord/common/entity/ScheduledEntityType;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/GuildScheduledEventStatus;
	public final fun component11 ()Ldev/kord/common/entity/ScheduledEntityType;
	public final fun component12 ()Ldev/kord/common/entity/Snowflake;
	public final fun component13 ()Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Lkotlinx/datetime/Instant;
	public final fun component8 ()Lkotlinx/datetime/Instant;
	public final fun component9 ()Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel;Ldev/kord/common/entity/GuildScheduledEventStatus;Ldev/kord/common/entity/ScheduledEntityType;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordGuildScheduledEvent;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildScheduledEvent;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel;Ldev/kord/common/entity/GuildScheduledEventStatus;Ldev/kord/common/entity/ScheduledEntityType;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildScheduledEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getCreator ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCreatorId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getDescription ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEntityId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEntityMetadata ()Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;
	public final fun getEntityType ()Ldev/kord/common/entity/ScheduledEntityType;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getImage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getName ()Ljava/lang/String;
	public final fun getPrivacyLevel ()Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel;
	public final fun getScheduledEndTime ()Lkotlinx/datetime/Instant;
	public final fun getScheduledStartTime ()Lkotlinx/datetime/Instant;
	public final fun getStatus ()Ldev/kord/common/entity/GuildScheduledEventStatus;
	public final fun getUserCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildScheduledEvent;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildScheduledEvent$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildScheduledEvent$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildScheduledEvent;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildScheduledEvent;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildScheduledEvent$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildWidget {
	public static final field Companion Ldev/kord/common/entity/DiscordGuildWidget$Companion;
	public synthetic fun <init> (IZLdev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (ZLdev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Z
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (ZLdev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordGuildWidget;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordGuildWidget;ZLdev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordGuildWidget;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEnabled ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordGuildWidget;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordGuildWidget$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordGuildWidget$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordGuildWidget;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordGuildWidget;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordGuildWidget$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegration {
	public static final field Companion Ldev/kord/common/entity/DiscordIntegration$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordIntegrationsAccount;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordIntegrationsAccount;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordIntegrationsAccount;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/DiscordIntegrationsAccount;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component14 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component16 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordIntegrationsAccount;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;)Ldev/kord/common/entity/DiscordIntegration;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordIntegration;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZLdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordIntegrationsAccount;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordIntegration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccount ()Ldev/kord/common/entity/DiscordIntegrationsAccount;
	public final fun getApplication ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEnableEmoticons ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getEnabled ()Z
	public final fun getExpireBehavior ()Ldev/kord/common/entity/optional/Optional;
	public final fun getExpireGracePeriod ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getRevoked ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getRoleId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getSubscriberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getSyncedAt ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSyncing ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getType ()Ljava/lang/String;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordIntegration;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordIntegration$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordIntegration$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordIntegration;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordIntegration;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegrationAccount {
	public static final field Companion Ldev/kord/common/entity/DiscordIntegrationAccount$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/kord/common/entity/DiscordIntegrationAccount;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordIntegrationAccount;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordIntegrationAccount;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordIntegrationAccount;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordIntegrationAccount$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordIntegrationAccount$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordIntegrationAccount;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordIntegrationAccount;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegrationAccount$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegrationDelete {
	public static final field Companion Ldev/kord/common/entity/DiscordIntegrationDelete$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)Ldev/kord/common/entity/DiscordIntegrationDelete;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordIntegrationDelete;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordIntegrationDelete;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordIntegrationDelete;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordIntegrationDelete$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordIntegrationDelete$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordIntegrationDelete;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordIntegrationDelete;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegrationDelete$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegrationsAccount {
	public static final field Companion Ldev/kord/common/entity/DiscordIntegrationsAccount$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/kord/common/entity/DiscordIntegrationsAccount;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordIntegrationsAccount;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordIntegrationsAccount;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordIntegrationsAccount;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordIntegrationsAccount$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordIntegrationsAccount$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordIntegrationsAccount;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordIntegrationsAccount;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordIntegrationsAccount$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInteraction {
	public static final field Companion Ldev/kord/common/entity/DiscordInteraction$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/common/entity/InteractionCallbackData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/common/entity/InteractionCallbackData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/common/entity/InteractionCallbackData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()I
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/InteractionType;
	public final fun component4 ()Ldev/kord/common/entity/InteractionCallbackData;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ldev/kord/common/entity/Snowflake;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/common/entity/InteractionCallbackData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordInteraction;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordInteraction;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/common/entity/InteractionCallbackData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordInteraction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAppPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/common/entity/InteractionCallbackData;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getGuildLocale ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getLocale ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMessage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getToken ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/InteractionType;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public final fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordInteraction;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordInteraction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordInteraction$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordInteraction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordInteraction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInteraction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInteractionGuildMember {
	public static final field Companion Ldev/kord/common/entity/DiscordInteractionGuildMember$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Lkotlinx/datetime/Instant;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/Permissions;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordInteractionGuildMember;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordInteractionGuildMember;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordInteractionGuildMember;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCommunicationDisabledUntil ()Ldev/kord/common/entity/optional/Optional;
	public final fun getJoinedAt ()Lkotlinx/datetime/Instant;
	public final fun getNick ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPending ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getPremiumSince ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoles ()Ljava/util/List;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordInteractionGuildMember;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordInteractionGuildMember$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordInteractionGuildMember$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordInteractionGuildMember;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordInteractionGuildMember;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInteractionGuildMember$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInvite : dev/kord/common/entity/BaseDiscordInvite {
	public static final field Companion Ldev/kord/common/entity/DiscordInvite$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/DiscordChannel;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordInvite;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordInvite;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordInvite;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApproximateMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getApproximatePresenceCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getChannel ()Ldev/kord/common/entity/DiscordChannel;
	public fun getCode ()Ljava/lang/String;
	public fun getExpiresAt ()Ldev/kord/common/entity/optional/Optional;
	public fun getGuild ()Ldev/kord/common/entity/optional/Optional;
	public fun getGuildScheduledEvent ()Ldev/kord/common/entity/optional/Optional;
	public fun getInviter ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStageInstance ()Ldev/kord/common/entity/optional/Optional;
	public fun getTargetApplication ()Ldev/kord/common/entity/optional/Optional;
	public fun getTargetType ()Ldev/kord/common/entity/optional/Optional;
	public fun getTargetUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordInvite;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordInvite$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordInvite$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordInvite;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordInvite;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInvite$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInviteWithMetadata : dev/kord/common/entity/BaseDiscordInvite {
	public static final field Companion Ldev/kord/common/entity/DiscordInviteWithMetadata$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;IILkotlin/time/Duration;ZLkotlinx/datetime/Instant;Lkotlinx/serialization/internal/SerializationConstructorMarker;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()I
	public final fun component13 ()I
	public final fun component14-UwyO8pc ()J
	public final fun component15 ()Z
	public final fun component16 ()Lkotlinx/datetime/Instant;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/DiscordChannel;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy-GiGF46s (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;)Ldev/kord/common/entity/DiscordInviteWithMetadata;
	public static synthetic fun copy-GiGF46s$default (Ldev/kord/common/entity/DiscordInviteWithMetadata;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordChannel;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;IIJZLkotlinx/datetime/Instant;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordInviteWithMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public fun getApproximateMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getApproximatePresenceCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getChannel ()Ldev/kord/common/entity/DiscordChannel;
	public fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public fun getExpiresAt ()Ldev/kord/common/entity/optional/Optional;
	public fun getGuild ()Ldev/kord/common/entity/optional/Optional;
	public fun getGuildScheduledEvent ()Ldev/kord/common/entity/optional/Optional;
	public fun getInviter ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMaxAge-UwyO8pc ()J
	public final fun getMaxUses ()I
	public fun getTargetApplication ()Ldev/kord/common/entity/optional/Optional;
	public fun getTargetType ()Ldev/kord/common/entity/optional/Optional;
	public fun getTargetUser ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTemporary ()Z
	public final fun getUses ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordInviteWithMetadata;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordInviteWithMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordInviteWithMetadata$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordInviteWithMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordInviteWithMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordInviteWithMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMentionedChannel {
	public static final field Companion Ldev/kord/common/entity/DiscordMentionedChannel$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/ChannelType;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ljava/lang/String;)Ldev/kord/common/entity/DiscordMentionedChannel;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordMentionedChannel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordMentionedChannel;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/ChannelType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordMentionedChannel;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordMentionedChannel$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordMentionedChannel$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordMentionedChannel;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordMentionedChannel;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMentionedChannel$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessage {
	public static final field Companion Ldev/kord/common/entity/DiscordMessage$Companion;
	public synthetic fun <init> (IILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Z
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ljava/util/List;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ljava/util/List;
	public final fun component15 ()Ljava/util/List;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component18 ()Z
	public final fun component19 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component20 ()Ldev/kord/common/entity/MessageType;
	public final fun component21 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component22 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component23 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component24 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component25 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component26 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component27 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component28 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component29 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component30 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component31 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component32 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/kord/common/entity/DiscordUser;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Lkotlinx/datetime/Instant;
	public final fun component8 ()Lkotlinx/datetime/Instant;
	public final fun component9 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/common/entity/DiscordMessage;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordMessage;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivity ()Ldev/kord/common/entity/optional/Optional;
	public final fun getApplication ()Ldev/kord/common/entity/optional/Optional;
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getAttachments ()Ljava/util/List;
	public final fun getAuthor ()Ldev/kord/common/entity/DiscordUser;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getComponents ()Ldev/kord/common/entity/optional/Optional;
	public final fun getContent ()Ljava/lang/String;
	public final fun getEditedTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getEmbeds ()Ljava/util/List;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getInteraction ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentionEveryone ()Z
	public final fun getMentionRoles ()Ljava/util/List;
	public final fun getMentionedChannels ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentions ()Ljava/util/List;
	public final fun getMessageReference ()Ldev/kord/common/entity/optional/Optional;
	public final fun getNonce ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPinned ()Z
	public final fun getPosition ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getReactions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getReferencedMessage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoleSubscriptionData ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getThread ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getTts ()Z
	public final fun getType ()Ldev/kord/common/entity/MessageType;
	public final fun getWebhookId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordMessage;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordMessage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordMessage$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordMessage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordMessage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessageInteraction {
	public static final field Companion Ldev/kord/common/entity/DiscordMessageInteraction$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/DiscordUser;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/DiscordUser;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/InteractionType;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/DiscordUser;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/DiscordUser;)Ldev/kord/common/entity/DiscordMessageInteraction;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordMessageInteraction;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/DiscordUser;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordMessageInteraction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/InteractionType;
	public final fun getUser ()Ldev/kord/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordMessageInteraction;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordMessageInteraction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordMessageInteraction$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordMessageInteraction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordMessageInteraction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessageInteraction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessageKt {
	public static final fun MessageFlags (Ljava/lang/Iterable;)Ldev/kord/common/entity/MessageFlags;
	public static final fun MessageFlags (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/MessageFlags;
	public static final fun MessageFlags ([Ldev/kord/common/entity/MessageFlag;)Ldev/kord/common/entity/MessageFlags;
	public static final fun MessageFlags ([Ldev/kord/common/entity/MessageFlags;)Ldev/kord/common/entity/MessageFlags;
	public static final fun MessageFlagsWithIterable (Ljava/lang/Iterable;)Ldev/kord/common/entity/MessageFlags;
}

public final class dev/kord/common/entity/DiscordMessageReference {
	public static final field Companion Ldev/kord/common/entity/DiscordMessageReference$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordMessageReference;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordMessageReference;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordMessageReference;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getFailIfNotExists ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordMessageReference;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordMessageReference$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordMessageReference$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordMessageReference;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordMessageReference;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessageReference$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessageSticker {
	public static final field Companion Ldev/kord/common/entity/DiscordMessageSticker$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/MessageStickerType;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/common/entity/DiscordMessageSticker;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordMessageSticker;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordMessageSticker;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvailable ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFormatType ()Ldev/kord/common/entity/MessageStickerType;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getPackId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getSortValue ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordMessageSticker;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordMessageSticker$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordMessageSticker$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordMessageSticker;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordMessageSticker;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordMessageSticker$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordModal {
	public static final field Companion Ldev/kord/common/entity/DiscordModal$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ldev/kord/common/entity/DiscordModal;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordModal;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordModal;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComponents ()Ljava/util/List;
	public final fun getCustomId ()Ljava/lang/String;
	public final fun getTitle ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordModal;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordModal$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordModal$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordModal;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordModal;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordModal$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordOnboardingPrompt {
	public static final field Companion Ldev/kord/common/entity/DiscordOnboardingPrompt$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OnboardingPromptType;Ljava/util/List;Ljava/lang/String;ZZZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OnboardingPromptType;Ljava/util/List;Ljava/lang/String;ZZZ)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/OnboardingPromptType;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OnboardingPromptType;Ljava/util/List;Ljava/lang/String;ZZZ)Ldev/kord/common/entity/DiscordOnboardingPrompt;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordOnboardingPrompt;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OnboardingPromptType;Ljava/util/List;Ljava/lang/String;ZZZILjava/lang/Object;)Ldev/kord/common/entity/DiscordOnboardingPrompt;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getInOnboarding ()Z
	public final fun getOptions ()Ljava/util/List;
	public final fun getRequired ()Z
	public final fun getSingleSelect ()Z
	public final fun getTitle ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/OnboardingPromptType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordOnboardingPrompt;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordOnboardingPrompt$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordOnboardingPrompt$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordOnboardingPrompt;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordOnboardingPrompt;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordOnboardingPrompt$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordOnboardingPromptOption {
	public static final field Companion Ldev/kord/common/entity/DiscordOnboardingPromptOption$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/DiscordEmoji;Ljava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/DiscordEmoji;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ldev/kord/common/entity/DiscordEmoji;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/DiscordEmoji;Ljava/lang/String;Ljava/lang/String;)Ldev/kord/common/entity/DiscordOnboardingPromptOption;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordOnboardingPromptOption;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/DiscordEmoji;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordOnboardingPromptOption;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelIds ()Ljava/util/List;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEmoji ()Ldev/kord/common/entity/DiscordEmoji;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getRoleIds ()Ljava/util/List;
	public final fun getTitle ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordOnboardingPromptOption;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordOnboardingPromptOption$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordOnboardingPromptOption$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordOnboardingPromptOption;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordOnboardingPromptOption;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordOnboardingPromptOption$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordOptionallyMemberUser {
	public static final field Companion Ldev/kord/common/entity/DiscordOptionallyMemberUser$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordOptionallyMemberUser;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordOptionallyMemberUser;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordOptionallyMemberUser;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getBot ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDiscriminator ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmail ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGlobalName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getLocale ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMfaEnabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPremiumType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPublicFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSystem ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getUsername ()Ljava/lang/String;
	public final fun getVerified ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordOptionallyMemberUser;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordOptionallyMemberUser$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordOptionallyMemberUser$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordOptionallyMemberUser;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordOptionallyMemberUser;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordOptionallyMemberUser$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialApplication : dev/kord/common/entity/BaseDiscordApplication {
	public static final field Companion Ldev/kord/common/entity/DiscordPartialApplication$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component11 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component18 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordPartialApplication;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPartialApplication;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPartialApplication;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCoverImage ()Ldev/kord/common/entity/optional/Optional;
	public fun getCustomInstallUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getDescription ()Ljava/lang/String;
	public fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInstallParams ()Ldev/kord/common/entity/optional/Optional;
	public fun getName ()Ljava/lang/String;
	public fun getOwner ()Ldev/kord/common/entity/optional/Optional;
	public fun getPrimarySkuId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun getPrivacyPolicyUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getRoleConnectionsVerificationUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getRpcOrigins ()Ldev/kord/common/entity/optional/Optional;
	public fun getSlug ()Ldev/kord/common/entity/optional/Optional;
	public fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public fun getTermsOfServiceUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getVerifyKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPartialApplication;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPartialApplication$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPartialApplication$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPartialApplication;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPartialApplication;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialApplication$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialEmoji {
	public static final field Companion Ldev/kord/common/entity/DiscordPartialEmoji$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordPartialEmoji;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPartialEmoji;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPartialEmoji;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAnimated ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPartialEmoji;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPartialEmoji$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPartialEmoji$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPartialEmoji;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPartialEmoji;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialEmoji$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialGuild {
	public static final field Companion Ldev/kord/common/entity/DiscordPartialGuild$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordPartialGuild;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPartialGuild;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPartialGuild;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBanner ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDescription ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getGuildScheduledEvents ()Ldev/kord/common/entity/optional/Optional;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfwLevel ()Ldev/kord/common/entity/optional/Optional;
	public final fun getOwner ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPremiumProgressBarEnabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getSplash ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStageInstances ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getVanityUrlCode ()Ldev/kord/common/entity/optional/Optional;
	public final fun getVerificationLevel ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWelcomeScreen ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPartialGuild;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPartialGuild$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPartialGuild$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPartialGuild;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPartialGuild;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialGuild$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialIntegration {
	public static final field Companion Ldev/kord/common/entity/DiscordPartialIntegration$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordIntegrationsAccount;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordIntegrationsAccount;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/DiscordIntegrationsAccount;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordIntegrationsAccount;)Ldev/kord/common/entity/DiscordPartialIntegration;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPartialIntegration;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordIntegrationsAccount;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPartialIntegration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccount ()Ldev/kord/common/entity/DiscordIntegrationsAccount;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPartialIntegration;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPartialIntegration$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPartialIntegration$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPartialIntegration;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPartialIntegration;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialIntegration$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialInvite {
	public static final field Companion Ldev/kord/common/entity/DiscordPartialInvite$Companion;
	public synthetic fun <init> (ILjava/lang/String;ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;I)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun copy (Ljava/lang/String;I)Ldev/kord/common/entity/DiscordPartialInvite;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPartialInvite;Ljava/lang/String;IILjava/lang/Object;)Ldev/kord/common/entity/DiscordPartialInvite;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ljava/lang/String;
	public final fun getUses ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPartialInvite;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPartialInvite$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPartialInvite$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPartialInvite;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPartialInvite;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialInvite$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialMessage {
	public static final field Companion Ldev/kord/common/entity/DiscordPartialMessage$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component18 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component19 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component20 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component21 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component22 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component23 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component24 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component25 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component26 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component27 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component28 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/common/entity/DiscordPartialMessage;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPartialMessage;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPartialMessage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivity ()Ldev/kord/common/entity/optional/Optional;
	public final fun getApplication ()Ldev/kord/common/entity/optional/Optional;
	public final fun getAttachments ()Ldev/kord/common/entity/optional/Optional;
	public final fun getAuthor ()Ldev/kord/common/entity/optional/Optional;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getContent ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEditedTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmbeds ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getInteraction ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentionEveryone ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getMentionRoles ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentionedChannels ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMessageReference ()Ldev/kord/common/entity/optional/Optional;
	public final fun getNonce ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPinned ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPosition ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getReactions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getReferencedMessage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTts ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWebhookId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPartialMessage;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPartialMessage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPartialMessage$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPartialMessage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPartialMessage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialMessage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialRole {
	public static final field Companion Ldev/kord/common/entity/DiscordPartialRole$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordPartialRole;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPartialRole;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPartialRole;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getHoist ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getIcon ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getManaged ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getMentionable ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPosition ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUnicodeEmoji ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPartialRole;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPartialRole$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPartialRole$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPartialRole;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPartialRole;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPartialRole$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPinsUpdateData {
	public static final field Companion Ldev/kord/common/entity/DiscordPinsUpdateData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordPinsUpdateData;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPinsUpdateData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPinsUpdateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getLastPinTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPinsUpdateData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPinsUpdateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPinsUpdateData$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPinsUpdateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPinsUpdateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPinsUpdateData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPresenceUpdate {
	public static final field Companion Ldev/kord/common/entity/DiscordPresenceUpdate$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/common/entity/DiscordClientStatus;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/common/entity/DiscordClientStatus;)V
	public synthetic fun <init> (Ldev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/common/entity/DiscordClientStatus;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/DiscordPresenceUser;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/kord/common/entity/PresenceStatus;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ldev/kord/common/entity/DiscordClientStatus;
	public final fun copy (Ldev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/common/entity/DiscordClientStatus;)Ldev/kord/common/entity/DiscordPresenceUpdate;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPresenceUpdate;Ldev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/common/entity/DiscordClientStatus;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPresenceUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivities ()Ljava/util/List;
	public final fun getClientStatus ()Ldev/kord/common/entity/DiscordClientStatus;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getStatus ()Ldev/kord/common/entity/PresenceStatus;
	public final fun getUser ()Ldev/kord/common/entity/DiscordPresenceUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordPresenceUpdate;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordPresenceUpdate$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordPresenceUpdate$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordPresenceUpdate;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordPresenceUpdate;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPresenceUpdate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordPresenceUser {
	public static final field Companion Ldev/kord/common/entity/DiscordPresenceUser$Companion;
	public fun <init> (Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/json/JsonObject;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Lkotlinx/serialization/json/JsonObject;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/json/JsonObject;)Ldev/kord/common/entity/DiscordPresenceUser;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/json/JsonObject;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordPresenceUser;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDetails ()Lkotlinx/serialization/json/JsonObject;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/DiscordPresenceUser$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordRemovedGuildMember {
	public static final field Companion Ldev/kord/common/entity/DiscordRemovedGuildMember$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/DiscordUser;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;)Ldev/kord/common/entity/DiscordRemovedGuildMember;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordRemovedGuildMember;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordRemovedGuildMember;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUser ()Ldev/kord/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordRemovedGuildMember;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordRemovedGuildMember$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordRemovedGuildMember$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordRemovedGuildMember;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordRemovedGuildMember;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordRemovedGuildMember$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordRole {
	public static final field Companion Ldev/kord/common/entity/DiscordRole$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;IZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Z
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun component4 ()Z
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()I
	public final fun component8 ()Ldev/kord/common/entity/Permissions;
	public final fun component9 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordRole;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordRole;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordRole;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()I
	public final fun getHoist ()Z
	public final fun getIcon ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getManaged ()Z
	public final fun getMentionable ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getPosition ()I
	public final fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUnicodeEmoji ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordRole;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordRole$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordRole$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordRole;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordRole;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordRole$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordRoleTags {
	public static final field Companion Ldev/kord/common/entity/DiscordRoleTags$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordRoleTags;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordRoleTags;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordRoleTags;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvailableForPurchase ()Ldev/kord/common/entity/optional/Optional;
	public final fun getBotId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getGuildConnections ()Ldev/kord/common/entity/optional/Optional;
	public final fun getIntegrationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getPremiumSubscriber ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSubscriptionListingId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordRoleTags;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordRoleTags$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordRoleTags$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordRoleTags;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordRoleTags;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordRoleTags$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordSelectOption {
	public static final field Companion Ldev/kord/common/entity/DiscordSelectOption$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordSelectOption;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordSelectOption;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordSelectOption;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDefault ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmoji ()Ldev/kord/common/entity/optional/Optional;
	public final fun getLabel ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordSelectOption;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordSelectOption$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordSelectOption$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordSelectOption;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordSelectOption;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordSelectOption$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordShard {
	public static final field Companion Ldev/kord/common/entity/DiscordShard$Companion;
	public fun <init> (II)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Ldev/kord/common/entity/DiscordShard;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordShard;IIILjava/lang/Object;)Ldev/kord/common/entity/DiscordShard;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()I
	public final fun getIndex ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/DiscordShard$Companion : kotlinx/serialization/KSerializer {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordShard;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordShard;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordStageInstance {
	public static final field Companion Ldev/kord/common/entity/DiscordStageInstance$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/StageInstancePrivacyLevel;ZLdev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/StageInstancePrivacyLevel;ZLdev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/StageInstancePrivacyLevel;
	public final fun component6 ()Z
	public final fun component7 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/StageInstancePrivacyLevel;ZLdev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordStageInstance;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordStageInstance;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/StageInstancePrivacyLevel;ZLdev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordStageInstance;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDiscoverableDisabled ()Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildScheduledEventId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPrivacyLevel ()Ldev/kord/common/entity/StageInstancePrivacyLevel;
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordStageInstance;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordStageInstance$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordStageInstance$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordStageInstance;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordStageInstance;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordStageInstance$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordStickerItem {
	public static final field Companion Ldev/kord/common/entity/DiscordStickerItem$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/MessageStickerType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/MessageStickerType;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/MessageStickerType;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/MessageStickerType;)Ldev/kord/common/entity/DiscordStickerItem;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordStickerItem;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/MessageStickerType;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordStickerItem;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFormatType ()Ldev/kord/common/entity/MessageStickerType;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordStickerItem;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordStickerItem$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordStickerItem$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordStickerItem;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordStickerItem;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordStickerItem$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordStickerPack {
	public static final field Companion Ldev/kord/common/entity/DiscordStickerPack$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordStickerPack;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordStickerPack;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordStickerPack;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBannerAssetId ()Ldev/kord/common/entity/Snowflake;
	public final fun getCoverStickerId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getSkuId ()Ldev/kord/common/entity/Snowflake;
	public final fun getStickers ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordStickerPack;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordStickerPack$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordStickerPack$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordStickerPack;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordStickerPack;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordStickerPack$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTeam {
	public static final field Companion Ldev/kord/common/entity/DiscordTeam$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordTeam;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordTeam;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordTeam;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/List;
	public final fun getOwnerUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordTeam;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordTeam$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordTeam$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordTeam;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordTeam;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTeam$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTeamMember {
	public static final field Companion Ldev/kord/common/entity/DiscordTeamMember$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/TeamMembershipState;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/TeamMembershipState;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;)V
	public final fun component1 ()Ldev/kord/common/entity/TeamMembershipState;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/DiscordUser;
	public final fun copy (Ldev/kord/common/entity/TeamMembershipState;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;)Ldev/kord/common/entity/DiscordTeamMember;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordTeamMember;Ldev/kord/common/entity/TeamMembershipState;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordTeamMember;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMembershipState ()Ldev/kord/common/entity/TeamMembershipState;
	public final fun getPermissions ()Ljava/util/List;
	public final fun getTeamId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUser ()Ldev/kord/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordTeamMember;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordTeamMember$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordTeamMember$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordTeamMember;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordTeamMember;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTeamMember$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTemplate {
	public static final field Companion Ldev/kord/common/entity/DiscordTemplate$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordPartialGuild;Ljava/lang/Boolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordPartialGuild;Ljava/lang/Boolean;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/kord/common/entity/DiscordPartialGuild;
	public final fun component11 ()Ljava/lang/Boolean;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun component5 ()Ldev/kord/common/entity/Snowflake;
	public final fun component6 ()Ldev/kord/common/entity/DiscordUser;
	public final fun component7 ()Lkotlinx/datetime/Instant;
	public final fun component8 ()Lkotlinx/datetime/Instant;
	public final fun component9 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordPartialGuild;Ljava/lang/Boolean;)Ldev/kord/common/entity/DiscordTemplate;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordTemplate;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordUser;Lkotlinx/datetime/Instant;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordPartialGuild;Ljava/lang/Boolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordTemplate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getCreator ()Ldev/kord/common/entity/DiscordUser;
	public final fun getCreatorId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getSerializedSourceGuild ()Ldev/kord/common/entity/DiscordPartialGuild;
	public final fun getSourceGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUpdatedAt ()Lkotlinx/datetime/Instant;
	public final fun getUsageCount ()I
	public fun hashCode ()I
	public final fun isDirty ()Ljava/lang/Boolean;
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordTemplate;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordTemplate$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordTemplate$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordTemplate;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordTemplate;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTemplate$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTextInputComponent : dev/kord/common/entity/DiscordComponent {
	public static final field Companion Ldev/kord/common/entity/DiscordTextInputComponent$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/ComponentType;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component14 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component15 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordTextInputComponent;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordTextInputComponent;Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordTextInputComponent;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChannelTypes ()Ldev/kord/common/entity/optional/Optional;
	public fun getComponents ()Ldev/kord/common/entity/optional/Optional;
	public fun getCustomId ()Ldev/kord/common/entity/optional/Optional;
	public fun getDisabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun getEmoji ()Ldev/kord/common/entity/optional/Optional;
	public fun getLabel ()Ldev/kord/common/entity/optional/Optional;
	public fun getMaxLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getMaxValues ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getMinLength ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getMinValues ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public fun getPlaceholder ()Ldev/kord/common/entity/optional/Optional;
	public fun getRequired ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getStyle ()Ldev/kord/common/entity/optional/Optional;
	public fun getType ()Ldev/kord/common/entity/ComponentType;
	public fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun getValue ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordTextInputComponent;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordTextInputComponent$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordTextInputComponent$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordTextInputComponent;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordTextInputComponent;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTextInputComponent$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordThreadMember {
	public static final field Companion Ldev/kord/common/entity/DiscordThreadMember$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;I)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Lkotlinx/datetime/Instant;
	public final fun component4 ()I
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;I)Ldev/kord/common/entity/DiscordThreadMember;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordThreadMember;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/datetime/Instant;IILjava/lang/Object;)Ldev/kord/common/entity/DiscordThreadMember;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFlags ()I
	public final fun getId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getJoinTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getUserId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordThreadMember;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordThreadMember$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordThreadMember$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordThreadMember;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordThreadMember;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordThreadMember$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordThreadMetadata {
	public static final field Companion Ldev/kord/common/entity/DiscordThreadMetadata$Companion;
	public synthetic fun <init> (IZLkotlinx/datetime/Instant;Ldev/kord/common/entity/ArchiveDuration;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (ZLkotlinx/datetime/Instant;Ldev/kord/common/entity/ArchiveDuration;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (ZLkotlinx/datetime/Instant;Ldev/kord/common/entity/ArchiveDuration;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Lkotlinx/datetime/Instant;
	public final fun component3 ()Ldev/kord/common/entity/ArchiveDuration;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (ZLkotlinx/datetime/Instant;Ldev/kord/common/entity/ArchiveDuration;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordThreadMetadata;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordThreadMetadata;ZLkotlinx/datetime/Instant;Ldev/kord/common/entity/ArchiveDuration;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordThreadMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArchiveTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getArchived ()Z
	public final fun getAutoArchiveDuration ()Ldev/kord/common/entity/ArchiveDuration;
	public final fun getCreateTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public final fun getInvitable ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getLocked ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordThreadMetadata;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordThreadMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordThreadMetadata$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordThreadMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordThreadMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordThreadMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTyping {
	public static final field Companion Ldev/kord/common/entity/DiscordTyping$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Lkotlinx/datetime/Instant;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordTyping;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordTyping;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordTyping;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordTyping;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordTyping$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordTyping$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordTyping;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordTyping;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordTyping$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUnavailableGuild {
	public static final field Companion Ldev/kord/common/entity/DiscordUnavailableGuild$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/common/entity/DiscordUnavailableGuild;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordUnavailableGuild;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordUnavailableGuild;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUnavailable ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordUnavailableGuild;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordUnavailableGuild$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordUnavailableGuild$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordUnavailableGuild;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordUnavailableGuild;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUnavailableGuild$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUpdatedEmojis {
	public static final field Companion Ldev/kord/common/entity/DiscordUpdatedEmojis$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/List;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/util/List;)Ldev/kord/common/entity/DiscordUpdatedEmojis;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordUpdatedEmojis;Ldev/kord/common/entity/Snowflake;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordUpdatedEmojis;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEmojis ()Ljava/util/List;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordUpdatedEmojis;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordUpdatedEmojis$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordUpdatedEmojis$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordUpdatedEmojis;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordUpdatedEmojis;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUpdatedEmojis$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUpdatedGuildMember {
	public static final field Companion Ldev/kord/common/entity/DiscordUpdatedGuildMember$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ldev/kord/common/entity/DiscordUser;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Lkotlinx/datetime/Instant;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/DiscordUpdatedGuildMember;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordUpdatedGuildMember;Ldev/kord/common/entity/Snowflake;Ljava/util/List;Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/optional/Optional;Lkotlinx/datetime/Instant;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordUpdatedGuildMember;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCommunicationDisabledUntil ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getJoinedAt ()Lkotlinx/datetime/Instant;
	public final fun getNick ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPending ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPremiumSince ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoles ()Ljava/util/List;
	public final fun getUser ()Ldev/kord/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordUpdatedGuildMember;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordUpdatedGuildMember$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordUpdatedGuildMember$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordUpdatedGuildMember;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordUpdatedGuildMember;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUpdatedGuildMember$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUser {
	public static final field Companion Ldev/kord/common/entity/DiscordUser$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ljava/lang/String;
	public final fun component16 ()Ljava/lang/Integer;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;)Ldev/kord/common/entity/DiscordUser;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordUser;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordUser;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccentColor ()Ljava/lang/Integer;
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getBanner ()Ljava/lang/String;
	public final fun getBot ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDiscriminator ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmail ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGlobalName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getLocale ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMfaEnabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPremiumType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPublicFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSystem ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getUsername ()Ljava/lang/String;
	public final fun getVerified ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordUser;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordUser$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordUser$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordUser;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordUser;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUser$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordUserKt {
	public static final fun UserFlags (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/UserFlags;
}

public final class dev/kord/common/entity/DiscordVoiceRegion {
	public static final field Companion Ldev/kord/common/entity/DiscordVoiceRegion$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;ZZZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;ZZZ)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun copy (Ljava/lang/String;Ljava/lang/String;ZZZ)Ldev/kord/common/entity/DiscordVoiceRegion;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordVoiceRegion;Ljava/lang/String;Ljava/lang/String;ZZZILjava/lang/Object;)Ldev/kord/common/entity/DiscordVoiceRegion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustom ()Z
	public final fun getDeprecated ()Z
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptimal ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordVoiceRegion;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordVoiceRegion$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordVoiceRegion$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordVoiceRegion;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordVoiceRegion;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordVoiceRegion$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordVoiceServerUpdateData {
	public static final field Companion Ldev/kord/common/entity/DiscordVoiceServerUpdateData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/common/entity/DiscordVoiceServerUpdateData;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordVoiceServerUpdateData;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordVoiceServerUpdateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEndpoint ()Ljava/lang/String;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getToken ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordVoiceServerUpdateData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordVoiceServerUpdateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordVoiceServerUpdateData$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordVoiceServerUpdateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordVoiceServerUpdateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordVoiceServerUpdateData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordVoiceState {
	public static final field Companion Ldev/kord/common/entity/DiscordVoiceState$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ZZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLkotlinx/datetime/Instant;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ZZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLkotlinx/datetime/Instant;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ZZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLkotlinx/datetime/Instant;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component10 ()Z
	public final fun component11 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component12 ()Z
	public final fun component13 ()Lkotlinx/datetime/Instant;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ZZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLkotlinx/datetime/Instant;)Ldev/kord/common/entity/DiscordVoiceState;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordVoiceState;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;ZZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLkotlinx/datetime/Instant;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordVoiceState;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDeaf ()Z
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMute ()Z
	public final fun getRequestToSpeakTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getSelfDeaf ()Z
	public final fun getSelfMute ()Z
	public final fun getSelfStream ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getSelfVideo ()Z
	public final fun getSessionId ()Ljava/lang/String;
	public final fun getSuppress ()Z
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordVoiceState;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordVoiceState$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordVoiceState$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordVoiceState;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordVoiceState;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordVoiceState$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWebhook {
	public static final field Companion Ldev/kord/common/entity/DiscordWebhook$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/WebhookType;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordWebhook;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordWebhook;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordWebhook;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getToken ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/WebhookType;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordWebhook;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordWebhook$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordWebhook$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordWebhook;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordWebhook;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWebhook$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWebhooksUpdateData {
	public static final field Companion Ldev/kord/common/entity/DiscordWebhooksUpdateData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/DiscordWebhooksUpdateData;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordWebhooksUpdateData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordWebhooksUpdateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordWebhooksUpdateData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordWebhooksUpdateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordWebhooksUpdateData$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordWebhooksUpdateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordWebhooksUpdateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWebhooksUpdateData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWelcomeScreen {
	public static final field Companion Ldev/kord/common/entity/DiscordWelcomeScreen$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Ldev/kord/common/entity/DiscordWelcomeScreen;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordWelcomeScreen;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordWelcomeScreen;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getWelcomeChannels ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordWelcomeScreen;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordWelcomeScreen$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordWelcomeScreen$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordWelcomeScreen;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordWelcomeScreen;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWelcomeScreen$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWelcomeScreenChannel {
	public static final field Companion Ldev/kord/common/entity/DiscordWelcomeScreenChannel$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/common/entity/DiscordWelcomeScreenChannel;
	public static synthetic fun copy$default (Ldev/kord/common/entity/DiscordWelcomeScreenChannel;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/DiscordWelcomeScreenChannel;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEmojiId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/DiscordWelcomeScreenChannel;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/DiscordWelcomeScreenChannel$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/DiscordWelcomeScreenChannel$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/DiscordWelcomeScreenChannel;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/DiscordWelcomeScreenChannel;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/DiscordWelcomeScreenChannel$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/EmbedType {
	public static final field Companion Ldev/kord/common/entity/EmbedType$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/EmbedType$Article : dev/kord/common/entity/EmbedType {
	public static final field INSTANCE Ldev/kord/common/entity/EmbedType$Article;
}

public final class dev/kord/common/entity/EmbedType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/EmbedType$Gifv : dev/kord/common/entity/EmbedType {
	public static final field INSTANCE Ldev/kord/common/entity/EmbedType$Gifv;
}

public final class dev/kord/common/entity/EmbedType$Image : dev/kord/common/entity/EmbedType {
	public static final field INSTANCE Ldev/kord/common/entity/EmbedType$Image;
}

public final class dev/kord/common/entity/EmbedType$Link : dev/kord/common/entity/EmbedType {
	public static final field INSTANCE Ldev/kord/common/entity/EmbedType$Link;
}

public final class dev/kord/common/entity/EmbedType$Rich : dev/kord/common/entity/EmbedType {
	public static final field INSTANCE Ldev/kord/common/entity/EmbedType$Rich;
}

public final class dev/kord/common/entity/EmbedType$Unknown : dev/kord/common/entity/EmbedType {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/kord/common/entity/EmbedType$Video : dev/kord/common/entity/EmbedType {
	public static final field INSTANCE Ldev/kord/common/entity/EmbedType$Video;
}

public abstract class dev/kord/common/entity/ExplicitContentFilter {
	public static final field Companion Ldev/kord/common/entity/ExplicitContentFilter$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ExplicitContentFilter$AllMembers : dev/kord/common/entity/ExplicitContentFilter {
	public static final field INSTANCE Ldev/kord/common/entity/ExplicitContentFilter$AllMembers;
}

public final class dev/kord/common/entity/ExplicitContentFilter$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ExplicitContentFilter$Disabled : dev/kord/common/entity/ExplicitContentFilter {
	public static final field INSTANCE Ldev/kord/common/entity/ExplicitContentFilter$Disabled;
}

public final class dev/kord/common/entity/ExplicitContentFilter$MembersWithoutRoles : dev/kord/common/entity/ExplicitContentFilter {
	public static final field INSTANCE Ldev/kord/common/entity/ExplicitContentFilter$MembersWithoutRoles;
}

public final class dev/kord/common/entity/ExplicitContentFilter$Unknown : dev/kord/common/entity/ExplicitContentFilter {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/ForumLayoutType {
	public static final field Companion Ldev/kord/common/entity/ForumLayoutType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ForumLayoutType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ForumLayoutType$GalleryView : dev/kord/common/entity/ForumLayoutType {
	public static final field INSTANCE Ldev/kord/common/entity/ForumLayoutType$GalleryView;
}

public final class dev/kord/common/entity/ForumLayoutType$ListView : dev/kord/common/entity/ForumLayoutType {
	public static final field INSTANCE Ldev/kord/common/entity/ForumLayoutType$ListView;
}

public final class dev/kord/common/entity/ForumLayoutType$NotSet : dev/kord/common/entity/ForumLayoutType {
	public static final field INSTANCE Ldev/kord/common/entity/ForumLayoutType$NotSet;
}

public final class dev/kord/common/entity/ForumLayoutType$Unknown : dev/kord/common/entity/ForumLayoutType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ForumTag {
	public static final field Companion Ldev/kord/common/entity/ForumTag$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;ZLdev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ZLdev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun component5 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ZLdev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/common/entity/ForumTag;
	public static synthetic fun copy$default (Ldev/kord/common/entity/ForumTag;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ZLdev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/ForumTag;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEmojiId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getModerated ()Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/ForumTag;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/ForumTag$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/ForumTag$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/ForumTag;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/ForumTag;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ForumTag$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/GuildFeature {
	public static final field Companion Ldev/kord/common/entity/GuildFeature$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/GuildFeature$AnimatedBanner : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$AnimatedBanner;
}

public final class dev/kord/common/entity/GuildFeature$AnimatedIcon : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$AnimatedIcon;
}

public final class dev/kord/common/entity/GuildFeature$ApplicationCommandPermissionsV2 : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$ApplicationCommandPermissionsV2;
}

public final class dev/kord/common/entity/GuildFeature$AutoModeration : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$AutoModeration;
}

public final class dev/kord/common/entity/GuildFeature$Banner : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$Banner;
}

public final class dev/kord/common/entity/GuildFeature$Community : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$Community;
}

public final class dev/kord/common/entity/GuildFeature$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/GuildFeature$CreatorMonetizableProvisional : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$CreatorMonetizableProvisional;
}

public final class dev/kord/common/entity/GuildFeature$CreatorStorePage : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$CreatorStorePage;
}

public final class dev/kord/common/entity/GuildFeature$DeveloperSupportServer : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$DeveloperSupportServer;
}

public final class dev/kord/common/entity/GuildFeature$Discoverable : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$Discoverable;
}

public final class dev/kord/common/entity/GuildFeature$Featurable : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$Featurable;
}

public final class dev/kord/common/entity/GuildFeature$InviteSplash : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$InviteSplash;
}

public final class dev/kord/common/entity/GuildFeature$InvitesDisabled : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$InvitesDisabled;
}

public final class dev/kord/common/entity/GuildFeature$MemberVerificationGateEnabled : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$MemberVerificationGateEnabled;
}

public final class dev/kord/common/entity/GuildFeature$MoreStickers : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$MoreStickers;
}

public final class dev/kord/common/entity/GuildFeature$News : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$News;
}

public final class dev/kord/common/entity/GuildFeature$Partnered : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$Partnered;
}

public final class dev/kord/common/entity/GuildFeature$PreviewEnabled : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$PreviewEnabled;
}

public final class dev/kord/common/entity/GuildFeature$RaidAlertsDisabled : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$RaidAlertsDisabled;
}

public final class dev/kord/common/entity/GuildFeature$RoleIcons : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$RoleIcons;
}

public final class dev/kord/common/entity/GuildFeature$RoleSubscriptionsAvailableForPurchase : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$RoleSubscriptionsAvailableForPurchase;
}

public final class dev/kord/common/entity/GuildFeature$RoleSubscriptionsEnabled : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$RoleSubscriptionsEnabled;
}

public final class dev/kord/common/entity/GuildFeature$TicketedEventsEnabled : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$TicketedEventsEnabled;
}

public final class dev/kord/common/entity/GuildFeature$Unknown : dev/kord/common/entity/GuildFeature {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/kord/common/entity/GuildFeature$VIPRegions : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$VIPRegions;
}

public final class dev/kord/common/entity/GuildFeature$VanityUrl : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$VanityUrl;
}

public final class dev/kord/common/entity/GuildFeature$Verified : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$Verified;
}

public final class dev/kord/common/entity/GuildFeature$WelcomeScreenEnabled : dev/kord/common/entity/GuildFeature {
	public static final field INSTANCE Ldev/kord/common/entity/GuildFeature$WelcomeScreenEnabled;
}

public final class dev/kord/common/entity/GuildMemberFlag : java/lang/Enum {
	public static final field BypassesVerification Ldev/kord/common/entity/GuildMemberFlag;
	public static final field Companion Ldev/kord/common/entity/GuildMemberFlag$Companion;
	public static final field CompletedOnboarding Ldev/kord/common/entity/GuildMemberFlag;
	public static final field DidRejoin Ldev/kord/common/entity/GuildMemberFlag;
	public static final field StartedOnboarding Ldev/kord/common/entity/GuildMemberFlag;
	public final fun getCode ()I
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/entity/GuildMemberFlag;
	public static fun values ()[Ldev/kord/common/entity/GuildMemberFlag;
}

public final class dev/kord/common/entity/GuildMemberFlag$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/GuildMemberFlags {
	public static final field Companion Ldev/kord/common/entity/GuildMemberFlags$Companion;
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun contains (Ldev/kord/common/entity/GuildMemberFlags;)Z
	public final fun copy (I)Ldev/kord/common/entity/GuildMemberFlags;
	public static synthetic fun copy$default (Ldev/kord/common/entity/GuildMemberFlags;IILjava/lang/Object;)Ldev/kord/common/entity/GuildMemberFlags;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/GuildMemberFlags$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/GuildScheduledEventEntityMetadata {
	public static final field Companion Ldev/kord/common/entity/GuildScheduledEventEntityMetadata$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;
	public static synthetic fun copy$default (Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/GuildScheduledEventEntityMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/GuildScheduledEventEntityMetadata$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/GuildScheduledEventEntityMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/GuildScheduledEventEntityMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/GuildScheduledEventPrivacyLevel {
	public static final field Companion Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/GuildScheduledEventPrivacyLevel$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/GuildScheduledEventPrivacyLevel$GuildOnly : dev/kord/common/entity/GuildScheduledEventPrivacyLevel {
	public static final field INSTANCE Ldev/kord/common/entity/GuildScheduledEventPrivacyLevel$GuildOnly;
}

public final class dev/kord/common/entity/GuildScheduledEventPrivacyLevel$Unknown : dev/kord/common/entity/GuildScheduledEventPrivacyLevel {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/GuildScheduledEventStatus {
	public static final field Companion Ldev/kord/common/entity/GuildScheduledEventStatus$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/GuildScheduledEventStatus$Active : dev/kord/common/entity/GuildScheduledEventStatus {
	public static final field INSTANCE Ldev/kord/common/entity/GuildScheduledEventStatus$Active;
}

public final class dev/kord/common/entity/GuildScheduledEventStatus$Cancelled : dev/kord/common/entity/GuildScheduledEventStatus {
	public static final field INSTANCE Ldev/kord/common/entity/GuildScheduledEventStatus$Cancelled;
}

public final class dev/kord/common/entity/GuildScheduledEventStatus$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/GuildScheduledEventStatus$Completed : dev/kord/common/entity/GuildScheduledEventStatus {
	public static final field INSTANCE Ldev/kord/common/entity/GuildScheduledEventStatus$Completed;
}

public final class dev/kord/common/entity/GuildScheduledEventStatus$Scheduled : dev/kord/common/entity/GuildScheduledEventStatus {
	public static final field INSTANCE Ldev/kord/common/entity/GuildScheduledEventStatus$Scheduled;
}

public final class dev/kord/common/entity/GuildScheduledEventStatus$Unknown : dev/kord/common/entity/GuildScheduledEventStatus {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/InstallParams {
	public static final field Companion Ldev/kord/common/entity/InstallParams$Companion;
	public synthetic fun <init> (ILjava/util/List;Ldev/kord/common/entity/Permissions;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/List;Ldev/kord/common/entity/Permissions;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ldev/kord/common/entity/Permissions;
	public final fun copy (Ljava/util/List;Ldev/kord/common/entity/Permissions;)Ldev/kord/common/entity/InstallParams;
	public static synthetic fun copy$default (Ldev/kord/common/entity/InstallParams;Ljava/util/List;Ldev/kord/common/entity/Permissions;ILjava/lang/Object;)Ldev/kord/common/entity/InstallParams;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getScopes ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/InstallParams;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/InstallParams$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/InstallParams$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/InstallParams;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/InstallParams;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/InstallParams$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/IntegrationApplication {
	public static final field Companion Ldev/kord/common/entity/IntegrationApplication$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/IntegrationApplication;
	public static synthetic fun copy$default (Ldev/kord/common/entity/IntegrationApplication;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/IntegrationApplication;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBot ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/IntegrationApplication;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/IntegrationApplication$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/IntegrationApplication$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/IntegrationApplication;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/IntegrationApplication;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/IntegrationApplication$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/IntegrationExpireBehavior {
	public static final field Companion Ldev/kord/common/entity/IntegrationExpireBehavior$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/IntegrationExpireBehavior$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/IntegrationExpireBehavior$Kick : dev/kord/common/entity/IntegrationExpireBehavior {
	public static final field INSTANCE Ldev/kord/common/entity/IntegrationExpireBehavior$Kick;
}

public final class dev/kord/common/entity/IntegrationExpireBehavior$RemoveRole : dev/kord/common/entity/IntegrationExpireBehavior {
	public static final field INSTANCE Ldev/kord/common/entity/IntegrationExpireBehavior$RemoveRole;
}

public final class dev/kord/common/entity/IntegrationExpireBehavior$Unknown : dev/kord/common/entity/IntegrationExpireBehavior {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/InteractionCallbackData {
	public static final field Companion Ldev/kord/common/entity/InteractionCallbackData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/InteractionCallbackData;
	public static synthetic fun copy$default (Ldev/kord/common/entity/InteractionCallbackData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/InteractionCallbackData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComponentType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getComponents ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCustomId ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getResolved ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTargetId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getValues ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/InteractionCallbackData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/InteractionCallbackData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionCallbackData$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/InteractionCallbackData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/InteractionCallbackData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/InteractionCallbackData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/InteractionResponseType {
	public static final field Companion Ldev/kord/common/entity/InteractionResponseType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getType ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/InteractionResponseType$ApplicationCommandAutoCompleteResult : dev/kord/common/entity/InteractionResponseType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionResponseType$ApplicationCommandAutoCompleteResult;
}

public final class dev/kord/common/entity/InteractionResponseType$ChannelMessageWithSource : dev/kord/common/entity/InteractionResponseType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionResponseType$ChannelMessageWithSource;
}

public final class dev/kord/common/entity/InteractionResponseType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/InteractionResponseType$DeferredChannelMessageWithSource : dev/kord/common/entity/InteractionResponseType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionResponseType$DeferredChannelMessageWithSource;
}

public final class dev/kord/common/entity/InteractionResponseType$DeferredUpdateMessage : dev/kord/common/entity/InteractionResponseType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionResponseType$DeferredUpdateMessage;
}

public final class dev/kord/common/entity/InteractionResponseType$Modal : dev/kord/common/entity/InteractionResponseType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionResponseType$Modal;
}

public final class dev/kord/common/entity/InteractionResponseType$Pong : dev/kord/common/entity/InteractionResponseType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionResponseType$Pong;
}

public final class dev/kord/common/entity/InteractionResponseType$Unknown : dev/kord/common/entity/InteractionResponseType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/InteractionResponseType$UpdateMessage : dev/kord/common/entity/InteractionResponseType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionResponseType$UpdateMessage;
}

public abstract class dev/kord/common/entity/InteractionType {
	public static final field Companion Ldev/kord/common/entity/InteractionType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getType ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/InteractionType$ApplicationCommand : dev/kord/common/entity/InteractionType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionType$ApplicationCommand;
}

public final class dev/kord/common/entity/InteractionType$AutoComplete : dev/kord/common/entity/InteractionType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionType$AutoComplete;
}

public final class dev/kord/common/entity/InteractionType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/InteractionType$Component : dev/kord/common/entity/InteractionType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionType$Component;
}

public final class dev/kord/common/entity/InteractionType$ModalSubmit : dev/kord/common/entity/InteractionType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionType$ModalSubmit;
}

public final class dev/kord/common/entity/InteractionType$Ping : dev/kord/common/entity/InteractionType {
	public static final field INSTANCE Ldev/kord/common/entity/InteractionType$Ping;
}

public final class dev/kord/common/entity/InteractionType$Unknown : dev/kord/common/entity/InteractionType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/InviteTargetType {
	public static final field Companion Ldev/kord/common/entity/InviteTargetType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/InviteTargetType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/InviteTargetType$EmbeddedApplication : dev/kord/common/entity/InviteTargetType {
	public static final field INSTANCE Ldev/kord/common/entity/InviteTargetType$EmbeddedApplication;
}

public final class dev/kord/common/entity/InviteTargetType$Stream : dev/kord/common/entity/InviteTargetType {
	public static final field INSTANCE Ldev/kord/common/entity/InviteTargetType$Stream;
}

public final class dev/kord/common/entity/InviteTargetType$Unknown : dev/kord/common/entity/InviteTargetType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/MFALevel {
	public static final field Companion Ldev/kord/common/entity/MFALevel$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/MFALevel$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MFALevel$Elevated : dev/kord/common/entity/MFALevel {
	public static final field INSTANCE Ldev/kord/common/entity/MFALevel$Elevated;
}

public final class dev/kord/common/entity/MFALevel$None : dev/kord/common/entity/MFALevel {
	public static final field INSTANCE Ldev/kord/common/entity/MFALevel$None;
}

public final class dev/kord/common/entity/MFALevel$Unknown : dev/kord/common/entity/MFALevel {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/MessageActivity {
	public static final field Companion Ldev/kord/common/entity/MessageActivity$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/MessageActivityType;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/MessageActivityType;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/MessageActivityType;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/MessageActivityType;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/MessageActivityType;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/MessageActivity;
	public static synthetic fun copy$default (Ldev/kord/common/entity/MessageActivity;Ldev/kord/common/entity/MessageActivityType;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/MessageActivity;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPartyId ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/MessageActivityType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/MessageActivity;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/MessageActivity$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/MessageActivity$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/MessageActivity;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/MessageActivity;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageActivity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/MessageActivityType {
	public static final field Companion Ldev/kord/common/entity/MessageActivityType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/MessageActivityType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageActivityType$Join : dev/kord/common/entity/MessageActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageActivityType$Join;
}

public final class dev/kord/common/entity/MessageActivityType$JoinRequest : dev/kord/common/entity/MessageActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageActivityType$JoinRequest;
}

public final class dev/kord/common/entity/MessageActivityType$Listen : dev/kord/common/entity/MessageActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageActivityType$Listen;
}

public final class dev/kord/common/entity/MessageActivityType$Spectate : dev/kord/common/entity/MessageActivityType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageActivityType$Spectate;
}

public final class dev/kord/common/entity/MessageActivityType$Unknown : dev/kord/common/entity/MessageActivityType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/MessageApplication {
	public static final field Companion Ldev/kord/common/entity/MessageApplication$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ldev/kord/common/entity/MessageApplication;
	public static synthetic fun copy$default (Ldev/kord/common/entity/MessageApplication;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/common/entity/MessageApplication;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCoverImage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/MessageApplication;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/MessageApplication$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/MessageApplication$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/MessageApplication;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/MessageApplication;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageApplication$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageFlag : java/lang/Enum {
	public static final field CrossPosted Ldev/kord/common/entity/MessageFlag;
	public static final field Ephemeral Ldev/kord/common/entity/MessageFlag;
	public static final field FailedToMentionSomeRolesInThread Ldev/kord/common/entity/MessageFlag;
	public static final field HasThread Ldev/kord/common/entity/MessageFlag;
	public static final field IsCrossPost Ldev/kord/common/entity/MessageFlag;
	public static final field IsVoiceMessage Ldev/kord/common/entity/MessageFlag;
	public static final field Loading Ldev/kord/common/entity/MessageFlag;
	public static final field SourceMessageDeleted Ldev/kord/common/entity/MessageFlag;
	public static final field SuppressEmbeds Ldev/kord/common/entity/MessageFlag;
	public static final field SuppressNotifications Ldev/kord/common/entity/MessageFlag;
	public static final field Urgent Ldev/kord/common/entity/MessageFlag;
	public final fun getCode ()I
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/entity/MessageFlag;
	public static fun values ()[Ldev/kord/common/entity/MessageFlag;
}

public final class dev/kord/common/entity/MessageFlags {
	public static final field Companion Ldev/kord/common/entity/MessageFlags$Companion;
	public final fun component1 ()I
	public final fun contains (Ldev/kord/common/entity/MessageFlag;)Z
	public final fun contains (Ldev/kord/common/entity/MessageFlags;)Z
	public final fun copy (I)Ldev/kord/common/entity/MessageFlags;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/MessageFlags;
	public static synthetic fun copy$default (Ldev/kord/common/entity/MessageFlags;IILjava/lang/Object;)Ldev/kord/common/entity/MessageFlags;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun getFlags ()Ljava/util/List;
	public fun hashCode ()I
	public final fun minus (Ldev/kord/common/entity/MessageFlag;)Ldev/kord/common/entity/MessageFlags;
	public final fun minus (Ldev/kord/common/entity/MessageFlags;)Ldev/kord/common/entity/MessageFlags;
	public final fun plus (Ldev/kord/common/entity/MessageFlag;)Ldev/kord/common/entity/MessageFlags;
	public final fun plus (Ldev/kord/common/entity/MessageFlags;)Ldev/kord/common/entity/MessageFlags;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/MessageFlags$Builder {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun flags ()Ldev/kord/common/entity/MessageFlags;
	public final fun unaryMinus (Ldev/kord/common/entity/MessageFlag;)V
	public final fun unaryMinus (Ldev/kord/common/entity/MessageFlags;)V
	public final fun unaryPlus (Ldev/kord/common/entity/MessageFlag;)V
	public final fun unaryPlus (Ldev/kord/common/entity/MessageFlags;)V
}

public final class dev/kord/common/entity/MessageFlags$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageReactionAddData {
	public static final field Companion Ldev/kord/common/entity/MessageReactionAddData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordPartialEmoji;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordPartialEmoji;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordPartialEmoji;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/DiscordPartialEmoji;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordPartialEmoji;)Ldev/kord/common/entity/MessageReactionAddData;
	public static synthetic fun copy$default (Ldev/kord/common/entity/MessageReactionAddData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/DiscordPartialEmoji;ILjava/lang/Object;)Ldev/kord/common/entity/MessageReactionAddData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmoji ()Ldev/kord/common/entity/DiscordPartialEmoji;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/MessageReactionAddData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/MessageReactionAddData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/MessageReactionAddData$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/MessageReactionAddData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/MessageReactionAddData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageReactionAddData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageReactionRemoveData {
	public static final field Companion Ldev/kord/common/entity/MessageReactionRemoveData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordPartialEmoji;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordPartialEmoji;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordPartialEmoji;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/kord/common/entity/DiscordPartialEmoji;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordPartialEmoji;)Ldev/kord/common/entity/MessageReactionRemoveData;
	public static synthetic fun copy$default (Ldev/kord/common/entity/MessageReactionRemoveData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordPartialEmoji;ILjava/lang/Object;)Ldev/kord/common/entity/MessageReactionRemoveData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmoji ()Ldev/kord/common/entity/DiscordPartialEmoji;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/MessageReactionRemoveData;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/MessageReactionRemoveData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/MessageReactionRemoveData$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/MessageReactionRemoveData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/MessageReactionRemoveData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageReactionRemoveData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/MessageStickerType {
	public static final field Companion Ldev/kord/common/entity/MessageStickerType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/MessageStickerType$APNG : dev/kord/common/entity/MessageStickerType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageStickerType$APNG;
}

public final class dev/kord/common/entity/MessageStickerType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageStickerType$GIF : dev/kord/common/entity/MessageStickerType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageStickerType$GIF;
}

public final class dev/kord/common/entity/MessageStickerType$LOTTIE : dev/kord/common/entity/MessageStickerType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageStickerType$LOTTIE;
}

public final class dev/kord/common/entity/MessageStickerType$PNG : dev/kord/common/entity/MessageStickerType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageStickerType$PNG;
}

public final class dev/kord/common/entity/MessageStickerType$Unknown : dev/kord/common/entity/MessageStickerType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/MessageType {
	public static final field Companion Ldev/kord/common/entity/MessageType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/MessageType$AutoModerationAction : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$AutoModerationAction;
}

public final class dev/kord/common/entity/MessageType$Call : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$Call;
}

public final class dev/kord/common/entity/MessageType$ChannelFollowAdd : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ChannelFollowAdd;
}

public final class dev/kord/common/entity/MessageType$ChannelIconChange : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ChannelIconChange;
}

public final class dev/kord/common/entity/MessageType$ChannelNameChange : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ChannelNameChange;
}

public final class dev/kord/common/entity/MessageType$ChannelPinnedMessage : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ChannelPinnedMessage;
}

public final class dev/kord/common/entity/MessageType$ChatInputCommand : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ChatInputCommand;
}

public final class dev/kord/common/entity/MessageType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/MessageType$ContextMenuCommand : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ContextMenuCommand;
}

public final class dev/kord/common/entity/MessageType$Default : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$Default;
}

public final class dev/kord/common/entity/MessageType$GuildApplicationPremiumSubscription : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildApplicationPremiumSubscription;
}

public final class dev/kord/common/entity/MessageType$GuildBoost : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildBoost;
}

public final class dev/kord/common/entity/MessageType$GuildBoostTier1 : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildBoostTier1;
}

public final class dev/kord/common/entity/MessageType$GuildBoostTier2 : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildBoostTier2;
}

public final class dev/kord/common/entity/MessageType$GuildBoostTier3 : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildBoostTier3;
}

public final class dev/kord/common/entity/MessageType$GuildDiscoveryDisqualified : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildDiscoveryDisqualified;
}

public final class dev/kord/common/entity/MessageType$GuildDiscoveryGracePeriodFinalWarning : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildDiscoveryGracePeriodFinalWarning;
}

public final class dev/kord/common/entity/MessageType$GuildDiscoveryGracePeriodInitialWarning : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildDiscoveryGracePeriodInitialWarning;
}

public final class dev/kord/common/entity/MessageType$GuildDiscoveryRequalified : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildDiscoveryRequalified;
}

public final class dev/kord/common/entity/MessageType$GuildInviteReminder : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$GuildInviteReminder;
}

public final class dev/kord/common/entity/MessageType$InteractionPremiumUpsell : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$InteractionPremiumUpsell;
}

public final class dev/kord/common/entity/MessageType$RecipientAdd : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$RecipientAdd;
}

public final class dev/kord/common/entity/MessageType$RecipientRemove : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$RecipientRemove;
}

public final class dev/kord/common/entity/MessageType$Reply : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$Reply;
}

public final class dev/kord/common/entity/MessageType$RoleSubscriptionPurchase : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$RoleSubscriptionPurchase;
}

public final class dev/kord/common/entity/MessageType$StageEnd : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$StageEnd;
}

public final class dev/kord/common/entity/MessageType$StageSpeaker : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$StageSpeaker;
}

public final class dev/kord/common/entity/MessageType$StageStart : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$StageStart;
}

public final class dev/kord/common/entity/MessageType$StageTopic : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$StageTopic;
}

public final class dev/kord/common/entity/MessageType$ThreadCreated : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ThreadCreated;
}

public final class dev/kord/common/entity/MessageType$ThreadStarterMessage : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$ThreadStarterMessage;
}

public final class dev/kord/common/entity/MessageType$Unknown : dev/kord/common/entity/MessageType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/MessageType$UserJoin : dev/kord/common/entity/MessageType {
	public static final field INSTANCE Ldev/kord/common/entity/MessageType$UserJoin;
}

public final class dev/kord/common/entity/NotSerializable : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/NotSerializable;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Void;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public abstract class dev/kord/common/entity/NsfwLevel {
	public static final field Companion Ldev/kord/common/entity/NsfwLevel$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/NsfwLevel$AgeRestricted : dev/kord/common/entity/NsfwLevel {
	public static final field INSTANCE Ldev/kord/common/entity/NsfwLevel$AgeRestricted;
}

public final class dev/kord/common/entity/NsfwLevel$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/NsfwLevel$Default : dev/kord/common/entity/NsfwLevel {
	public static final field INSTANCE Ldev/kord/common/entity/NsfwLevel$Default;
}

public final class dev/kord/common/entity/NsfwLevel$Explicit : dev/kord/common/entity/NsfwLevel {
	public static final field INSTANCE Ldev/kord/common/entity/NsfwLevel$Explicit;
}

public final class dev/kord/common/entity/NsfwLevel$Safe : dev/kord/common/entity/NsfwLevel {
	public static final field INSTANCE Ldev/kord/common/entity/NsfwLevel$Safe;
}

public final class dev/kord/common/entity/NsfwLevel$Unknown : dev/kord/common/entity/NsfwLevel {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/OnboardingPromptType {
	public static final field Companion Ldev/kord/common/entity/OnboardingPromptType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/OnboardingPromptType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/OnboardingPromptType$Dropdown : dev/kord/common/entity/OnboardingPromptType {
	public static final field INSTANCE Ldev/kord/common/entity/OnboardingPromptType$Dropdown;
}

public final class dev/kord/common/entity/OnboardingPromptType$MultipleChoice : dev/kord/common/entity/OnboardingPromptType {
	public static final field INSTANCE Ldev/kord/common/entity/OnboardingPromptType$MultipleChoice;
}

public final class dev/kord/common/entity/OnboardingPromptType$Unknown : dev/kord/common/entity/OnboardingPromptType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/Option {
	public static final field Companion Ldev/kord/common/entity/Option$Companion;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
}

public final class dev/kord/common/entity/Option$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/Overwrite {
	public static final field Companion Ldev/kord/common/entity/Overwrite$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/OverwriteType;
	public final fun component3 ()Ldev/kord/common/entity/Permissions;
	public final fun component4 ()Ldev/kord/common/entity/Permissions;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;)Ldev/kord/common/entity/Overwrite;
	public static synthetic fun copy$default (Ldev/kord/common/entity/Overwrite;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;ILjava/lang/Object;)Ldev/kord/common/entity/Overwrite;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllow ()Ldev/kord/common/entity/Permissions;
	public final fun getDeny ()Ldev/kord/common/entity/Permissions;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getType ()Ldev/kord/common/entity/OverwriteType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/Overwrite;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/Overwrite$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/Overwrite$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/Overwrite;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/Overwrite;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/Overwrite$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/OverwriteType {
	public static final field Companion Ldev/kord/common/entity/OverwriteType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/OverwriteType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/OverwriteType$Member : dev/kord/common/entity/OverwriteType {
	public static final field INSTANCE Ldev/kord/common/entity/OverwriteType$Member;
}

public final class dev/kord/common/entity/OverwriteType$Role : dev/kord/common/entity/OverwriteType {
	public static final field INSTANCE Ldev/kord/common/entity/OverwriteType$Role;
}

public final class dev/kord/common/entity/OverwriteType$Unknown : dev/kord/common/entity/OverwriteType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/Permission {
	public static final field Companion Ldev/kord/common/entity/Permission$Companion;
	public synthetic fun <init> (Ldev/kord/common/DiscordBitSet;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> ([JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCode ()Ldev/kord/common/DiscordBitSet;
}

public final class dev/kord/common/entity/Permission$AddReactions : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$AddReactions;
}

public final class dev/kord/common/entity/Permission$Administrator : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$Administrator;
}

public final class dev/kord/common/entity/Permission$All : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$All;
}

public final class dev/kord/common/entity/Permission$AttachFiles : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$AttachFiles;
}

public final class dev/kord/common/entity/Permission$BanMembers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$BanMembers;
}

public final class dev/kord/common/entity/Permission$ChangeNickname : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ChangeNickname;
}

public final class dev/kord/common/entity/Permission$Companion {
	public final fun getValues ()Ljava/util/Set;
}

public final class dev/kord/common/entity/Permission$Connect : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$Connect;
}

public final class dev/kord/common/entity/Permission$CreateInstantInvite : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$CreateInstantInvite;
}

public final class dev/kord/common/entity/Permission$CreatePrivateThreads : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$CreatePrivateThreads;
}

public final class dev/kord/common/entity/Permission$CreatePublicThreads : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$CreatePublicThreads;
}

public final class dev/kord/common/entity/Permission$DeafenMembers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$DeafenMembers;
}

public final class dev/kord/common/entity/Permission$EmbedLinks : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$EmbedLinks;
}

public final class dev/kord/common/entity/Permission$KickMembers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$KickMembers;
}

public final class dev/kord/common/entity/Permission$ManageChannels : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageChannels;
}

public final class dev/kord/common/entity/Permission$ManageEmojisAndStickers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageEmojisAndStickers;
}

public final class dev/kord/common/entity/Permission$ManageEvents : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageEvents;
}

public final class dev/kord/common/entity/Permission$ManageGuild : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageGuild;
}

public final class dev/kord/common/entity/Permission$ManageGuildExpressions : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageGuildExpressions;
}

public final class dev/kord/common/entity/Permission$ManageMessages : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageMessages;
}

public final class dev/kord/common/entity/Permission$ManageNicknames : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageNicknames;
}

public final class dev/kord/common/entity/Permission$ManageRoles : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageRoles;
}

public final class dev/kord/common/entity/Permission$ManageThreads : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageThreads;
}

public final class dev/kord/common/entity/Permission$ManageWebhooks : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ManageWebhooks;
}

public final class dev/kord/common/entity/Permission$MentionEveryone : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$MentionEveryone;
}

public final class dev/kord/common/entity/Permission$ModerateMembers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ModerateMembers;
}

public final class dev/kord/common/entity/Permission$MoveMembers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$MoveMembers;
}

public final class dev/kord/common/entity/Permission$MuteMembers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$MuteMembers;
}

public final class dev/kord/common/entity/Permission$PrioritySpeaker : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$PrioritySpeaker;
}

public final class dev/kord/common/entity/Permission$ReadMessageHistory : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ReadMessageHistory;
}

public final class dev/kord/common/entity/Permission$RequestToSpeak : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$RequestToSpeak;
}

public final class dev/kord/common/entity/Permission$SendMessages : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$SendMessages;
}

public final class dev/kord/common/entity/Permission$SendMessagesInThreads : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$SendMessagesInThreads;
}

public final class dev/kord/common/entity/Permission$SendTTSMessages : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$SendTTSMessages;
}

public final class dev/kord/common/entity/Permission$SendVoiceMessages : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$SendVoiceMessages;
}

public final class dev/kord/common/entity/Permission$Speak : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$Speak;
}

public final class dev/kord/common/entity/Permission$Stream : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$Stream;
}

public final class dev/kord/common/entity/Permission$Unknown : dev/kord/common/entity/Permission {
	public fun <init> (Ldev/kord/common/DiscordBitSet;)V
	public fun <init> ([J)V
}

public final class dev/kord/common/entity/Permission$UseApplicationCommands : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$UseApplicationCommands;
}

public final class dev/kord/common/entity/Permission$UseEmbeddedActivities : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$UseEmbeddedActivities;
}

public final class dev/kord/common/entity/Permission$UseExternalEmojis : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$UseExternalEmojis;
}

public final class dev/kord/common/entity/Permission$UseExternalSounds : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$UseExternalSounds;
}

public final class dev/kord/common/entity/Permission$UseExternalStickers : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$UseExternalStickers;
}

public final class dev/kord/common/entity/Permission$UseSoundboard : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$UseSoundboard;
}

public final class dev/kord/common/entity/Permission$UseVAD : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$UseVAD;
}

public final class dev/kord/common/entity/Permission$ViewAuditLog : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ViewAuditLog;
}

public final class dev/kord/common/entity/Permission$ViewChannel : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ViewChannel;
}

public final class dev/kord/common/entity/Permission$ViewCreatorMonetizationAnalytics : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ViewCreatorMonetizationAnalytics;
}

public final class dev/kord/common/entity/Permission$ViewGuildInsights : dev/kord/common/entity/Permission {
	public static final field INSTANCE Ldev/kord/common/entity/Permission$ViewGuildInsights;
}

public final class dev/kord/common/entity/PermissionKt {
	public static final fun PermissionWithIterable (Ljava/lang/Iterable;)Ldev/kord/common/entity/Permissions;
	public static final fun Permissions (Ljava/lang/Iterable;)Ldev/kord/common/entity/Permissions;
	public static final fun Permissions (Ljava/lang/String;)Ldev/kord/common/entity/Permissions;
	public static final fun Permissions (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/Permissions;
	public static final fun Permissions ([Ldev/kord/common/entity/Permission;)Ldev/kord/common/entity/Permissions;
	public static final fun Permissions ([Ldev/kord/common/entity/Permissions;)Ldev/kord/common/entity/Permissions;
	public static synthetic fun Permissions$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/kord/common/entity/Permissions;
}

public final class dev/kord/common/entity/Permissions {
	public static final field Companion Ldev/kord/common/entity/Permissions$Companion;
	public fun <init> (Ldev/kord/common/DiscordBitSet;)V
	public final fun component1 ()Ldev/kord/common/DiscordBitSet;
	public final fun contains (Ldev/kord/common/entity/Permission;)Z
	public final fun contains (Ldev/kord/common/entity/Permissions;)Z
	public final fun copy (Ldev/kord/common/DiscordBitSet;)Ldev/kord/common/entity/Permissions;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/Permissions;
	public static synthetic fun copy$default (Ldev/kord/common/entity/Permissions;Ldev/kord/common/DiscordBitSet;ILjava/lang/Object;)Ldev/kord/common/entity/Permissions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ldev/kord/common/DiscordBitSet;
	public final fun getValues ()Ljava/util/Set;
	public fun hashCode ()I
	public final fun minus (Ldev/kord/common/entity/Permission;)Ldev/kord/common/entity/Permissions;
	public final fun minus (Ldev/kord/common/entity/Permissions;)Ldev/kord/common/entity/Permissions;
	public final fun plus (Ldev/kord/common/entity/Permission;)Ldev/kord/common/entity/Permissions;
	public final fun plus (Ldev/kord/common/entity/Permissions;)Ldev/kord/common/entity/Permissions;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/Permissions$Companion : kotlinx/serialization/KSerializer {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/Permissions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/Permissions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/Permissions$PermissionsBuilder {
	public fun <init> (Ldev/kord/common/DiscordBitSet;)V
	public final fun permissions ()Ldev/kord/common/entity/Permissions;
	public final fun unaryMinus (Ldev/kord/common/entity/Permission;)V
	public final fun unaryMinus (Ldev/kord/common/entity/Permissions;)V
	public final fun unaryPlus (Ldev/kord/common/entity/Permission;)V
	public final fun unaryPlus (Ldev/kord/common/entity/Permissions;)V
}

public abstract class dev/kord/common/entity/PremiumTier {
	public static final field Companion Ldev/kord/common/entity/PremiumTier$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/PremiumTier$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/PremiumTier$None : dev/kord/common/entity/PremiumTier {
	public static final field INSTANCE Ldev/kord/common/entity/PremiumTier$None;
}

public final class dev/kord/common/entity/PremiumTier$One : dev/kord/common/entity/PremiumTier {
	public static final field INSTANCE Ldev/kord/common/entity/PremiumTier$One;
}

public final class dev/kord/common/entity/PremiumTier$Three : dev/kord/common/entity/PremiumTier {
	public static final field INSTANCE Ldev/kord/common/entity/PremiumTier$Three;
}

public final class dev/kord/common/entity/PremiumTier$Two : dev/kord/common/entity/PremiumTier {
	public static final field INSTANCE Ldev/kord/common/entity/PremiumTier$Two;
}

public final class dev/kord/common/entity/PremiumTier$Unknown : dev/kord/common/entity/PremiumTier {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/PresenceStatus {
	public static final field Companion Ldev/kord/common/entity/PresenceStatus$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/PresenceStatus$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/PresenceStatus$DoNotDisturb : dev/kord/common/entity/PresenceStatus {
	public static final field INSTANCE Ldev/kord/common/entity/PresenceStatus$DoNotDisturb;
}

public final class dev/kord/common/entity/PresenceStatus$Idle : dev/kord/common/entity/PresenceStatus {
	public static final field INSTANCE Ldev/kord/common/entity/PresenceStatus$Idle;
}

public final class dev/kord/common/entity/PresenceStatus$Invisible : dev/kord/common/entity/PresenceStatus {
	public static final field INSTANCE Ldev/kord/common/entity/PresenceStatus$Invisible;
}

public final class dev/kord/common/entity/PresenceStatus$Offline : dev/kord/common/entity/PresenceStatus {
	public static final field INSTANCE Ldev/kord/common/entity/PresenceStatus$Offline;
}

public final class dev/kord/common/entity/PresenceStatus$Online : dev/kord/common/entity/PresenceStatus {
	public static final field INSTANCE Ldev/kord/common/entity/PresenceStatus$Online;
}

public final class dev/kord/common/entity/PresenceStatus$Unknown : dev/kord/common/entity/PresenceStatus {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/kord/common/entity/Reaction {
	public static final field Companion Ldev/kord/common/entity/Reaction$Companion;
	public synthetic fun <init> (IIZLdev/kord/common/entity/DiscordEmoji;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (IZLdev/kord/common/entity/DiscordEmoji;)V
	public final fun component1 ()I
	public final fun component2 ()Z
	public final fun component3 ()Ldev/kord/common/entity/DiscordEmoji;
	public final fun copy (IZLdev/kord/common/entity/DiscordEmoji;)Ldev/kord/common/entity/Reaction;
	public static synthetic fun copy$default (Ldev/kord/common/entity/Reaction;IZLdev/kord/common/entity/DiscordEmoji;ILjava/lang/Object;)Ldev/kord/common/entity/Reaction;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()I
	public final fun getEmoji ()Ldev/kord/common/entity/DiscordEmoji;
	public final fun getMe ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/Reaction;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/Reaction$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/Reaction$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/Reaction;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/Reaction;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/Reaction$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ResolvedObjects {
	public static final field Companion Ldev/kord/common/entity/ResolvedObjects$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/ResolvedObjects;
	public static synthetic fun copy$default (Ldev/kord/common/entity/ResolvedObjects;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/ResolvedObjects;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAttachments ()Ldev/kord/common/entity/optional/Optional;
	public final fun getChannels ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMembers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMessages ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoles ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUsers ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/ResolvedObjects;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/ResolvedObjects$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/ResolvedObjects$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/ResolvedObjects;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/ResolvedObjects;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ResolvedObjects$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/RoleSubscription {
	public static final field Companion Ldev/kord/common/entity/RoleSubscription$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;IZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZ)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun component4 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZ)Ldev/kord/common/entity/RoleSubscription;
	public static synthetic fun copy$default (Ldev/kord/common/entity/RoleSubscription;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZILjava/lang/Object;)Ldev/kord/common/entity/RoleSubscription;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSubscriptionId ()Ldev/kord/common/entity/Snowflake;
	public final fun getTierName ()Ljava/lang/String;
	public final fun getTotalMonthsSubscribed ()I
	public fun hashCode ()I
	public final fun isRenewal ()Z
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/RoleSubscription;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/RoleSubscription$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/RoleSubscription$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/RoleSubscription;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/RoleSubscription;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/RoleSubscription$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/ScheduledEntityType {
	public static final field Companion Ldev/kord/common/entity/ScheduledEntityType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/ScheduledEntityType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/ScheduledEntityType$External : dev/kord/common/entity/ScheduledEntityType {
	public static final field INSTANCE Ldev/kord/common/entity/ScheduledEntityType$External;
}

public final class dev/kord/common/entity/ScheduledEntityType$StageInstance : dev/kord/common/entity/ScheduledEntityType {
	public static final field INSTANCE Ldev/kord/common/entity/ScheduledEntityType$StageInstance;
}

public final class dev/kord/common/entity/ScheduledEntityType$Unknown : dev/kord/common/entity/ScheduledEntityType {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/ScheduledEntityType$Voice : dev/kord/common/entity/ScheduledEntityType {
	public static final field INSTANCE Ldev/kord/common/entity/ScheduledEntityType$Voice;
}

public final class dev/kord/common/entity/Snowflake : java/lang/Comparable {
	public static final field Companion Ldev/kord/common/entity/Snowflake$Companion;
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Lkotlinx/datetime/Instant;)V
	public fun compareTo (Ldev/kord/common/entity/Snowflake;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Lkotlinx/datetime/Instant;
	public final fun component2-w2LRezQ ()B
	public final fun component3-w2LRezQ ()B
	public final fun component4-Mh2AYeg ()S
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIncrement-Mh2AYeg ()S
	public final fun getProcessId-w2LRezQ ()B
	public final fun getTimeMark ()Lkotlin/time/TimeMark;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getValue-s-VKNKU ()J
	public final fun getWorkerId-w2LRezQ ()B
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/Snowflake$Companion {
	public final fun getDiscordEpoch ()Lkotlinx/datetime/Instant;
	public final fun getEndOfTime ()Lkotlinx/datetime/Instant;
	public final fun getMax ()Ldev/kord/common/entity/Snowflake;
	public final fun getMin ()Ldev/kord/common/entity/Snowflake;
	public final fun getTimestampComparator ()Ljava/util/Comparator;
	public final fun getValidValues ()Lkotlin/ranges/ULongRange;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/SnowflakeKt {
	public static final fun Snowflake (J)Ldev/kord/common/entity/Snowflake;
}

public abstract class dev/kord/common/entity/SortOrderType {
	public static final field Companion Ldev/kord/common/entity/SortOrderType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/SortOrderType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/SortOrderType$CreationDate : dev/kord/common/entity/SortOrderType {
	public static final field INSTANCE Ldev/kord/common/entity/SortOrderType$CreationDate;
}

public final class dev/kord/common/entity/SortOrderType$LatestActivity : dev/kord/common/entity/SortOrderType {
	public static final field INSTANCE Ldev/kord/common/entity/SortOrderType$LatestActivity;
}

public final class dev/kord/common/entity/SortOrderType$Unknown : dev/kord/common/entity/SortOrderType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/StageInstancePrivacyLevel {
	public static final field Companion Ldev/kord/common/entity/StageInstancePrivacyLevel$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/StageInstancePrivacyLevel$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/StageInstancePrivacyLevel$GuildOnly : dev/kord/common/entity/StageInstancePrivacyLevel {
	public static final field INSTANCE Ldev/kord/common/entity/StageInstancePrivacyLevel$GuildOnly;
}

public final class dev/kord/common/entity/StageInstancePrivacyLevel$Public : dev/kord/common/entity/StageInstancePrivacyLevel {
	public static final field INSTANCE Ldev/kord/common/entity/StageInstancePrivacyLevel$Public;
}

public final class dev/kord/common/entity/StageInstancePrivacyLevel$Unknown : dev/kord/common/entity/StageInstancePrivacyLevel {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/SubCommand : dev/kord/common/entity/Option {
	public static final field Companion Ldev/kord/common/entity/SubCommand$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/SubCommand;
	public static synthetic fun copy$default (Ldev/kord/common/entity/SubCommand;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/common/entity/SubCommand;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final synthetic fun write$Self (Ldev/kord/common/entity/SubCommand;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/common/entity/SubCommand$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/common/entity/SubCommand$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/SubCommand;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/SubCommand;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/SubCommand$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/SystemChannelFlag : java/lang/Enum {
	public static final field SuppressGuildReminderNotifications Ldev/kord/common/entity/SystemChannelFlag;
	public static final field SuppressJoinNotificationReplies Ldev/kord/common/entity/SystemChannelFlag;
	public static final field SuppressJoinNotifications Ldev/kord/common/entity/SystemChannelFlag;
	public static final field SuppressPremiumSubscriptions Ldev/kord/common/entity/SystemChannelFlag;
	public static final field SuppressRoleSubscriptionPurchaseNotificationReplies Ldev/kord/common/entity/SystemChannelFlag;
	public static final field SuppressRoleSubscriptionPurchaseNotifications Ldev/kord/common/entity/SystemChannelFlag;
	public final fun getCode ()I
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/entity/SystemChannelFlag;
	public static fun values ()[Ldev/kord/common/entity/SystemChannelFlag;
}

public final class dev/kord/common/entity/SystemChannelFlags {
	public static final field Companion Ldev/kord/common/entity/SystemChannelFlags$Companion;
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun contains (Ldev/kord/common/entity/SystemChannelFlags;)Z
	public final fun copy (I)Ldev/kord/common/entity/SystemChannelFlags;
	public static synthetic fun copy$default (Ldev/kord/common/entity/SystemChannelFlags;IILjava/lang/Object;)Ldev/kord/common/entity/SystemChannelFlags;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/SystemChannelFlags$Companion : kotlinx/serialization/KSerializer {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/SystemChannelFlags;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/SystemChannelFlags;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/TeamMembershipState {
	public static final field Companion Ldev/kord/common/entity/TeamMembershipState$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/TeamMembershipState$Accepted : dev/kord/common/entity/TeamMembershipState {
	public static final field INSTANCE Ldev/kord/common/entity/TeamMembershipState$Accepted;
}

public final class dev/kord/common/entity/TeamMembershipState$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/TeamMembershipState$Invited : dev/kord/common/entity/TeamMembershipState {
	public static final field INSTANCE Ldev/kord/common/entity/TeamMembershipState$Invited;
}

public final class dev/kord/common/entity/TeamMembershipState$Unknown : dev/kord/common/entity/TeamMembershipState {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/TextInputStyle {
	public static final field Companion Ldev/kord/common/entity/TextInputStyle$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/TextInputStyle$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/TextInputStyle$Paragraph : dev/kord/common/entity/TextInputStyle {
	public static final field INSTANCE Ldev/kord/common/entity/TextInputStyle$Paragraph;
}

public final class dev/kord/common/entity/TextInputStyle$Short : dev/kord/common/entity/TextInputStyle {
	public static final field INSTANCE Ldev/kord/common/entity/TextInputStyle$Short;
}

public final class dev/kord/common/entity/TextInputStyle$Unknown : dev/kord/common/entity/TextInputStyle {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/UserFlag : java/lang/Enum {
	public static final field ActiveDeveloper Ldev/kord/common/entity/UserFlag;
	public static final field BotHttpInteractions Ldev/kord/common/entity/UserFlag;
	public static final field BugHunterLevel1 Ldev/kord/common/entity/UserFlag;
	public static final field BugHunterLevel2 Ldev/kord/common/entity/UserFlag;
	public static final field DiscordCertifiedModerator Ldev/kord/common/entity/UserFlag;
	public static final field DiscordEmployee Ldev/kord/common/entity/UserFlag;
	public static final field DiscordPartner Ldev/kord/common/entity/UserFlag;
	public static final field EarlySupporter Ldev/kord/common/entity/UserFlag;
	public static final field HouseBalance Ldev/kord/common/entity/UserFlag;
	public static final field HouseBravery Ldev/kord/common/entity/UserFlag;
	public static final field HouseBrilliance Ldev/kord/common/entity/UserFlag;
	public static final field HypeSquad Ldev/kord/common/entity/UserFlag;
	public static final field System Ldev/kord/common/entity/UserFlag;
	public static final field TeamUser Ldev/kord/common/entity/UserFlag;
	public static final field VerifiedBot Ldev/kord/common/entity/UserFlag;
	public static final field VerifiedBotDeveloper Ldev/kord/common/entity/UserFlag;
	public final fun getCode ()I
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/common/entity/UserFlag;
	public static fun values ()[Ldev/kord/common/entity/UserFlag;
}

public final class dev/kord/common/entity/UserFlags {
	public static final field UserFlagsSerializer Ldev/kord/common/entity/UserFlags$UserFlagsSerializer;
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun contains (Ldev/kord/common/entity/UserFlag;)Z
	public final fun copy (I)Ldev/kord/common/entity/UserFlags;
	public final fun copy (Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/UserFlags;
	public static synthetic fun copy$default (Ldev/kord/common/entity/UserFlags;IILjava/lang/Object;)Ldev/kord/common/entity/UserFlags;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun getFlags ()Ljava/util/List;
	public fun hashCode ()I
	public final fun minus (Ldev/kord/common/entity/UserFlag;)Ldev/kord/common/entity/UserFlags;
	public final fun plus (Ldev/kord/common/entity/UserFlags;)Ldev/kord/common/entity/UserFlags;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/UserFlags$UserFlagsBuilder {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun flags ()Ldev/kord/common/entity/UserFlags;
	public final fun unaryMinus (Ldev/kord/common/entity/UserFlag;)V
	public final fun unaryPlus (Ldev/kord/common/entity/UserFlag;)V
}

public final class dev/kord/common/entity/UserFlags$UserFlagsSerializer : kotlinx/serialization/KSerializer {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/common/entity/UserFlags;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/common/entity/UserFlags;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/kord/common/entity/UserPremium {
	public static final field Companion Ldev/kord/common/entity/UserPremium$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/UserPremium$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/UserPremium$Nitro : dev/kord/common/entity/UserPremium {
	public static final field INSTANCE Ldev/kord/common/entity/UserPremium$Nitro;
}

public final class dev/kord/common/entity/UserPremium$NitroBasic : dev/kord/common/entity/UserPremium {
	public static final field INSTANCE Ldev/kord/common/entity/UserPremium$NitroBasic;
}

public final class dev/kord/common/entity/UserPremium$NitroClassic : dev/kord/common/entity/UserPremium {
	public static final field INSTANCE Ldev/kord/common/entity/UserPremium$NitroClassic;
}

public final class dev/kord/common/entity/UserPremium$None : dev/kord/common/entity/UserPremium {
	public static final field INSTANCE Ldev/kord/common/entity/UserPremium$None;
}

public final class dev/kord/common/entity/UserPremium$Unknown : dev/kord/common/entity/UserPremium {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/VerificationLevel {
	public static final field Companion Ldev/kord/common/entity/VerificationLevel$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/VerificationLevel$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/VerificationLevel$High : dev/kord/common/entity/VerificationLevel {
	public static final field INSTANCE Ldev/kord/common/entity/VerificationLevel$High;
}

public final class dev/kord/common/entity/VerificationLevel$Low : dev/kord/common/entity/VerificationLevel {
	public static final field INSTANCE Ldev/kord/common/entity/VerificationLevel$Low;
}

public final class dev/kord/common/entity/VerificationLevel$Medium : dev/kord/common/entity/VerificationLevel {
	public static final field INSTANCE Ldev/kord/common/entity/VerificationLevel$Medium;
}

public final class dev/kord/common/entity/VerificationLevel$None : dev/kord/common/entity/VerificationLevel {
	public static final field INSTANCE Ldev/kord/common/entity/VerificationLevel$None;
}

public final class dev/kord/common/entity/VerificationLevel$Unknown : dev/kord/common/entity/VerificationLevel {
	public fun <init> (I)V
}

public final class dev/kord/common/entity/VerificationLevel$VeryHigh : dev/kord/common/entity/VerificationLevel {
	public static final field INSTANCE Ldev/kord/common/entity/VerificationLevel$VeryHigh;
}

public abstract class dev/kord/common/entity/VideoQualityMode {
	public static final field Companion Ldev/kord/common/entity/VideoQualityMode$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/VideoQualityMode$Auto : dev/kord/common/entity/VideoQualityMode {
	public static final field INSTANCE Ldev/kord/common/entity/VideoQualityMode$Auto;
}

public final class dev/kord/common/entity/VideoQualityMode$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/VideoQualityMode$Full : dev/kord/common/entity/VideoQualityMode {
	public static final field INSTANCE Ldev/kord/common/entity/VideoQualityMode$Full;
}

public final class dev/kord/common/entity/VideoQualityMode$Unknown : dev/kord/common/entity/VideoQualityMode {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/WebhookType {
	public static final field Companion Ldev/kord/common/entity/WebhookType$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public final fun hashCode ()I
	public final fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/WebhookType$Application : dev/kord/common/entity/WebhookType {
	public static final field INSTANCE Ldev/kord/common/entity/WebhookType$Application;
}

public final class dev/kord/common/entity/WebhookType$ChannelFollower : dev/kord/common/entity/WebhookType {
	public static final field INSTANCE Ldev/kord/common/entity/WebhookType$ChannelFollower;
}

public final class dev/kord/common/entity/WebhookType$Companion {
	public final fun getEntries ()Ljava/util/List;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/WebhookType$Incoming : dev/kord/common/entity/WebhookType {
	public static final field INSTANCE Ldev/kord/common/entity/WebhookType$Incoming;
}

public final class dev/kord/common/entity/WebhookType$Unknown : dev/kord/common/entity/WebhookType {
	public fun <init> (I)V
}

public abstract class dev/kord/common/entity/optional/Optional {
	public static final field Companion Ldev/kord/common/entity/optional/Optional$Companion;
	public fun getValue ()Ljava/lang/Object;
}

public final class dev/kord/common/entity/optional/Optional$Companion {
	public final fun invoke ()Ldev/kord/common/entity/optional/Optional$Missing;
	public final fun invoke (Ljava/lang/Object;)Ldev/kord/common/entity/optional/Optional$Value;
	public final fun invokeNullable (Ljava/lang/Object;)Ldev/kord/common/entity/optional/Optional;
	public final fun missingOnEmpty (Ljava/util/Collection;)Ldev/kord/common/entity/optional/Optional;
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/optional/Optional$Missing : dev/kord/common/entity/optional/Optional {
	public static final field Companion Ldev/kord/common/entity/optional/Optional$Missing$Companion;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/Optional$Missing$Companion {
	public final fun invoke ()Ldev/kord/common/entity/optional/Optional$Missing;
}

public final class dev/kord/common/entity/optional/Optional$Null : dev/kord/common/entity/optional/Optional {
	public static final field Companion Ldev/kord/common/entity/optional/Optional$Null$Companion;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/Optional$Null$Companion {
	public final fun invoke ()Ldev/kord/common/entity/optional/Optional$Null;
}

public final class dev/kord/common/entity/optional/Optional$Value : dev/kord/common/entity/optional/Optional {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/common/entity/optional/OptionalBoolean {
	public static final field Companion Ldev/kord/common/entity/optional/OptionalBoolean$Companion;
	public final fun getAsNullable ()Ljava/lang/Boolean;
	public final fun getAsOptional ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDiscordBoolean ()Z
	public final fun not ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun orElse (Z)Z
}

public final class dev/kord/common/entity/optional/OptionalBoolean$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/optional/OptionalBoolean$Missing : dev/kord/common/entity/optional/OptionalBoolean {
	public static final field INSTANCE Ldev/kord/common/entity/optional/OptionalBoolean$Missing;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalBoolean$Value : dev/kord/common/entity/optional/OptionalBoolean {
	public fun <init> (Z)V
	public final fun component1 ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalBooleanKt {
	public static final fun getAsNullable (Ldev/kord/common/entity/optional/OptionalBoolean;)Ljava/lang/Boolean;
	public static final fun getValue (Ldev/kord/common/entity/optional/OptionalBoolean;)Ljava/lang/Boolean;
	public static final fun optional (Z)Ldev/kord/common/entity/optional/OptionalBoolean$Value;
	public static final fun orElse (Ldev/kord/common/entity/optional/OptionalBoolean;Z)Z
}

public abstract class dev/kord/common/entity/optional/OptionalInt {
	public static final field Companion Ldev/kord/common/entity/optional/OptionalInt$Companion;
	public final fun getAsNullable ()Ljava/lang/Integer;
	public final fun getAsOptional ()Ldev/kord/common/entity/optional/Optional;
	public final fun orElse (I)I
}

public final class dev/kord/common/entity/optional/OptionalInt$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/optional/OptionalInt$Missing : dev/kord/common/entity/optional/OptionalInt {
	public static final field INSTANCE Ldev/kord/common/entity/optional/OptionalInt$Missing;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalInt$Value : dev/kord/common/entity/optional/OptionalInt {
	public fun <init> (I)V
	public final fun component1 ()I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalIntKt {
	public static final fun getAsNullable (Ldev/kord/common/entity/optional/OptionalInt;)Ljava/lang/Integer;
	public static final fun getOrThrow (Ldev/kord/common/entity/optional/OptionalInt;)I
	public static final fun getValue (Ldev/kord/common/entity/optional/OptionalInt;)Ljava/lang/Integer;
	public static final fun map (Ldev/kord/common/entity/optional/OptionalInt;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/OptionalInt;
	public static final fun optionalInt (I)Ldev/kord/common/entity/optional/OptionalInt$Value;
	public static final fun orElse (Ldev/kord/common/entity/optional/OptionalInt;I)I
}

public final class dev/kord/common/entity/optional/OptionalKt {
	public static final fun coerceToMissing (Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/optional/Optional;
	public static final fun filterList (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun first (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun firstOrNull (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun flatMap (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun map (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun mapCopy (Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/optional/Optional;
	public static final fun mapCopyOfMap (Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/optional/Optional;
	public static final fun mapList (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun mapNotNull (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun mapNullable (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun mapNullableOptional (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun mapNullableSnowflake (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/OptionalSnowflake;
	public static final fun mapSnowflake (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/OptionalSnowflake;
	public static final fun mapValues (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun optional (Ljava/lang/Object;)Ldev/kord/common/entity/optional/Optional$Value;
	public static final fun optional (Ljava/lang/Object;)Ldev/kord/common/entity/optional/Optional;
	public static final fun orEmpty (Ldev/kord/common/entity/optional/Optional;)Ljava/util/List;
	public static final fun orEmpty (Ldev/kord/common/entity/optional/Optional;)Ljava/util/Set;
	public static final fun switchOnMissing (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/optional/Optional;
	public static final fun switchOnMissing (Ldev/kord/common/entity/optional/Optional;Ljava/lang/Object;)Ldev/kord/common/entity/optional/Optional;
	public static final fun toPrimitive (Ldev/kord/common/entity/optional/Optional;)Ldev/kord/common/entity/optional/OptionalBoolean;
	public static final fun unwrap (Ldev/kord/common/entity/optional/Optional;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract class dev/kord/common/entity/optional/OptionalLong {
	public static final field Companion Ldev/kord/common/entity/optional/OptionalLong$Companion;
	public final fun getAsNullable ()Ljava/lang/Long;
	public final fun getAsOptional ()Ldev/kord/common/entity/optional/Optional;
	public final fun orElse (J)J
}

public final class dev/kord/common/entity/optional/OptionalLong$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/optional/OptionalLong$Missing : dev/kord/common/entity/optional/OptionalLong {
	public static final field INSTANCE Ldev/kord/common/entity/optional/OptionalLong$Missing;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalLong$Value : dev/kord/common/entity/optional/OptionalLong {
	public fun <init> (J)V
	public final fun component1 ()J
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalLongKt {
	public static final fun getAsNullable (Ldev/kord/common/entity/optional/OptionalLong;)Ljava/lang/Long;
	public static final fun getValue (Ldev/kord/common/entity/optional/OptionalLong;)Ljava/lang/Long;
	public static final fun optional (Ljava/lang/Long;)Ldev/kord/common/entity/optional/OptionalLong;
	public static final fun orElse (Ldev/kord/common/entity/optional/OptionalLong;J)J
}

public abstract class dev/kord/common/entity/optional/OptionalSnowflake {
	public static final field Companion Ldev/kord/common/entity/optional/OptionalSnowflake$Companion;
	public final fun getAsOptional ()Ldev/kord/common/entity/optional/Optional;
	public fun getValue ()Ldev/kord/common/entity/Snowflake;
	public final fun orElse (Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/Snowflake;
}

public final class dev/kord/common/entity/optional/OptionalSnowflake$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/common/entity/optional/OptionalSnowflake$Missing : dev/kord/common/entity/optional/OptionalSnowflake {
	public static final field INSTANCE Ldev/kord/common/entity/optional/OptionalSnowflake$Missing;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalSnowflake$Value : dev/kord/common/entity/optional/OptionalSnowflake {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public fun equals (Ljava/lang/Object;)Z
	public fun getValue ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/common/entity/optional/OptionalSnowflakeKt {
	public static final fun getValue (Ldev/kord/common/entity/optional/OptionalSnowflake;)Ldev/kord/common/entity/Snowflake;
	public static final fun map (Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlin/jvm/functions/Function1;)Ldev/kord/common/entity/optional/Optional;
	public static final fun optionalNullable (Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/optional/OptionalSnowflake$Value;
	public static final fun optionalSnowflake (Ldev/kord/common/entity/Snowflake;)Ldev/kord/common/entity/optional/OptionalSnowflake$Value;
}

public final class dev/kord/common/entity/optional/delegate/OptionalBooleanDelegateKt {
	public static final fun delegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
	public static final fun provideNullableDelegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
}

public final class dev/kord/common/entity/optional/delegate/OptionalDelegateKt {
	public static final fun delegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
	public static final fun delegateList (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
	public static final fun provideNullableDelegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
}

public final class dev/kord/common/entity/optional/delegate/OptionalIntDelegateKt {
	public static final fun delegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
	public static final fun provideNullableDelegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
}

public final class dev/kord/common/entity/optional/delegate/OptionalLongDelegateKt {
	public static final fun delegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
	public static final fun provideNullableDelegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
}

public final class dev/kord/common/entity/optional/delegate/OptionalSnowflakeDelegateKt {
	public static final fun delegate (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
	public static final fun delegateOptional (Lkotlin/reflect/KMutableProperty0;)Lkotlin/properties/ReadWriteProperty;
}

public abstract class dev/kord/common/exception/RequestException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public abstract class dev/kord/common/ratelimit/AbstractIntervalRateLimiter : dev/kord/common/ratelimit/IntervalRateLimiter {
	public synthetic fun <init> (IJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun consume (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun consumeUnderLock (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInterval-UwyO8pc ()J
	public final fun getLimit ()I
	protected final fun getLimitIsExceeded ()Z
	protected final fun getRemainingConsumes ()I
	protected final fun setRemainingConsumes (I)V
}

public abstract interface class dev/kord/common/ratelimit/IntervalRateLimiter : dev/kord/common/ratelimit/RateLimiter {
	public abstract fun consume (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getInterval-UwyO8pc ()J
	public abstract fun getLimit ()I
}

public abstract interface class dev/kord/common/ratelimit/RateLimiter {
	public abstract fun consume (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/common/ratelimit/RateLimiterKt {
	public static final fun IntervalRateLimiter-8Mi8wO0 (IJLkotlin/time/TimeSource;)Ldev/kord/common/ratelimit/IntervalRateLimiter;
	public static final fun IntervalRateLimiter-8Mi8wO0 (IJLkotlinx/datetime/Clock;)Ldev/kord/common/ratelimit/IntervalRateLimiter;
	public static synthetic fun IntervalRateLimiter-8Mi8wO0$default (IJLkotlin/time/TimeSource;ILjava/lang/Object;)Ldev/kord/common/ratelimit/IntervalRateLimiter;
	public static final fun consume (Ldev/kord/common/ratelimit/RateLimiter;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class dev/kord/common/serialization/DurationAsLongSerializer : kotlinx/serialization/KSerializer {
	public synthetic fun <init> (Lkotlin/time/DurationUnit;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-5sfh64U (Lkotlinx/serialization/encoding/Decoder;)J
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun getUnit ()Lkotlin/time/DurationUnit;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-HG0u8IE (Lkotlinx/serialization/encoding/Encoder;J)V
}

public final class dev/kord/common/serialization/DurationInDaysSerializer : dev/kord/common/serialization/DurationAsLongSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInDaysSerializer;
}

public final class dev/kord/common/serialization/DurationInDoubleSecondsSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInDoubleSecondsSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-5sfh64U (Lkotlinx/serialization/encoding/Decoder;)J
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-HG0u8IE (Lkotlinx/serialization/encoding/Encoder;J)V
}

public final class dev/kord/common/serialization/DurationInHoursSerializer : dev/kord/common/serialization/DurationAsLongSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInHoursSerializer;
}

public final class dev/kord/common/serialization/DurationInMicrosecondsSerializer : dev/kord/common/serialization/DurationAsLongSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInMicrosecondsSerializer;
}

public final class dev/kord/common/serialization/DurationInMillisecondsSerializer : dev/kord/common/serialization/DurationAsLongSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInMillisecondsSerializer;
}

public final class dev/kord/common/serialization/DurationInMinutesSerializer : dev/kord/common/serialization/DurationAsLongSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInMinutesSerializer;
}

public final class dev/kord/common/serialization/DurationInNanosecondsSerializer : dev/kord/common/serialization/DurationAsLongSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInNanosecondsSerializer;
}

public final class dev/kord/common/serialization/DurationInSecondsSerializer : dev/kord/common/serialization/DurationAsLongSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/DurationInSecondsSerializer;
}

public final class dev/kord/common/serialization/InstantInEpochMillisecondsSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/InstantInEpochMillisecondsSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lkotlinx/datetime/Instant;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lkotlinx/datetime/Instant;)V
}

public final class dev/kord/common/serialization/InstantInEpochSecondsSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/kord/common/serialization/InstantInEpochSecondsSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lkotlinx/datetime/Instant;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lkotlinx/datetime/Instant;)V
}

