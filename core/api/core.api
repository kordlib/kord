public final class cache/data/MessageInteractionData {
	public static final field Companion Lcache/data/MessageInteractionData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/InteractionType;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;)Lcache/data/MessageInteractionData;
	public static synthetic fun copy$default (Lcache/data/MessageInteractionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Lcache/data/MessageInteractionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/InteractionType;
	public final fun getUser ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class cache/data/MessageInteractionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lcache/data/MessageInteractionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lcache/data/MessageInteractionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lcache/data/MessageInteractionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class cache/data/MessageInteractionData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordMessageInteraction;)Lcache/data/MessageInteractionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/ClientResources {
	public fun <init> (Ljava/lang/String;Ldev/kord/core/builder/kord/Shards;Lio/ktor/client/HttpClient;Ldev/kord/core/supplier/EntitySupplyStrategy;Ldev/kord/gateway/Intents;)V
	public final fun getDefaultStrategy ()Ldev/kord/core/supplier/EntitySupplyStrategy;
	public final fun getHttpClient ()Lio/ktor/client/HttpClient;
	public final fun getIntents ()Ldev/kord/gateway/Intents;
	public final fun getShards ()Ldev/kord/core/builder/kord/Shards;
	public final fun getToken ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/Kord : kotlinx/coroutines/CoroutineScope {
	public static final field Companion Ldev/kord/core/Kord$Companion;
	public fun <init> (Ldev/kord/core/ClientResources;Ldev/kord/cache/api/DataCache;Ldev/kord/core/gateway/MasterGateway;Ldev/kord/rest/service/RestClient;Ldev/kord/common/entity/Snowflake;Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun createGlobalApplicationCommand (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createGlobalApplicationCommand$default (Ldev/kord/core/Kord;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun createGlobalApplicationCommands (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun createGuild (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun createGuild (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun editPresence (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun editSelf (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationInfo (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCache ()Ldev/kord/cache/api/DataCache;
	public final fun getChannel (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getChannel$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getDefaultSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public final fun getGateway ()Ldev/kord/core/gateway/MasterGateway;
	public final fun getGlobalApplicationCommand (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGlobalCommands ()Lkotlinx/coroutines/flow/Flow;
	public final fun getGuild (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuild$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getGuildPreview (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildPreview$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getGuildPreviewOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildPreviewOrNull$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public final fun getInvite (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public final fun getResources ()Ldev/kord/core/ClientResources;
	public final fun getRest ()Ldev/kord/rest/service/RestClient;
	public final fun getSelf (Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getSelf$default (Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getSelfId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSlashCommands ()Ldev/kord/core/SlashCommands;
	public final fun getUnsafe ()Ldev/kord/core/Unsafe;
	public final fun getUser (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getUser$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhook (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhook$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhookOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhookOrNull$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhookWithToken (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getWebhookWithToken$default (Ldev/kord/core/Kord;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getWebhookWithTokenOrNull (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/supplier/EntitySupplyStrategy;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun login (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun login$default (Ldev/kord/core/Kord;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun logout (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun shutdown (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public final fun with (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/supplier/EntitySupplier;
}

public final class dev/kord/core/Kord$Companion {
	public final fun restOnly (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/Kord;
	public static synthetic fun restOnly$default (Ldev/kord/core/Kord$Companion;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/kord/core/Kord;
}

public final class dev/kord/core/KordKt {
	public static final fun Kord (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun Kord$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun getKordLogger ()Lmu/KLogger;
}

public abstract interface class dev/kord/core/KordObject {
	public abstract fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/SlashCommands {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/service/InteractionService;)V
	public final fun bulkEditApplicationCommandPermissions (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun createGlobalApplicationCommand (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createGlobalApplicationCommand$default (Ldev/kord/core/SlashCommands;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun createGlobalApplicationCommands (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun createGuildApplicationCommand (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createGuildApplicationCommand$default (Ldev/kord/core/SlashCommands;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun createGuildApplicationCommands (Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun editApplicationCommandPermissions (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getApplicationCommandPermissions (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGlobalApplicationCommand (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGlobalApplicationCommands ()Lkotlinx/coroutines/flow/Flow;
	public final fun getGuildApplicationCommand (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildApplicationCommandPermissions (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildApplicationCommands (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public final fun getService ()Ldev/kord/rest/service/InteractionService;
}

public final class dev/kord/core/SlashCommandsKt {
	public static final fun SlashCommands (Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/request/RequestHandler;)Ldev/kord/core/SlashCommands;
}

public final class dev/kord/core/Unsafe {
	public fun <init> (Ldev/kord/core/Kord;)V
	public final fun channel (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public final fun componentInteraction (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;
	public static synthetic fun componentInteraction$default (Ldev/kord/core/Unsafe;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;
	public final fun globalApplicationCommand (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/service/InteractionService;)Ldev/kord/core/behavior/GlobalApplicationCommandBehavior;
	public static synthetic fun globalApplicationCommand$default (Ldev/kord/core/Unsafe;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/service/InteractionService;ILjava/lang/Object;)Ldev/kord/core/behavior/GlobalApplicationCommandBehavior;
	public final fun guild (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/GuildBehavior;
	public final fun guildApplicationCommand (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/service/InteractionService;)Ldev/kord/core/behavior/GuildApplicationCommandBehavior;
	public static synthetic fun guildApplicationCommand$default (Ldev/kord/core/Unsafe;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/service/InteractionService;ILjava/lang/Object;)Ldev/kord/core/behavior/GuildApplicationCommandBehavior;
	public final fun guildChannel (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public final fun guildEmoji (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;)Ldev/kord/core/behavior/GuildEmojiBehavior;
	public final fun guildMessageChannel (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public final fun member (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/MemberBehavior;
	public final fun message (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/MessageBehavior;
	public final fun messageChannel (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun newsChannel (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/NewsChannelBehavior;
	public final fun role (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/RoleBehavior;
	public final fun stageInstance (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/StageInstanceBehavior;
	public final fun storeChannel (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/StoreChannelBehavior;
	public final fun textChannel (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/TextChannelBehavior;
	public fun toString ()Ljava/lang/String;
	public final fun user (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/UserBehavior;
	public final fun voiceChannel (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/channel/VoiceChannelBehavior;
	public final fun webhook (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/behavior/WebhookBehavior;
}

public final class dev/kord/core/UtilKt {
	public static final fun any (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun enableEvent (Ldev/kord/gateway/Intents$IntentsBuilder;Lkotlin/reflect/KClass;)V
	public static final fun enableEvents (Ldev/kord/gateway/Intents$IntentsBuilder;Ljava/lang/Iterable;)V
	public static final fun enableEvents (Ldev/kord/gateway/Intents$IntentsBuilder;[Lkotlin/reflect/KClass;)V
	public static final fun firstOrNull (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sorted (Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class dev/kord/core/behavior/ApplicationCommandBehavior : dev/kord/core/entity/Entity {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getService ()Ldev/kord/rest/service/InteractionService;
}

public final class dev/kord/core/behavior/ApplicationCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/ApplicationCommandBehavior;Ldev/kord/core/entity/Entity;)I
}

public abstract interface class dev/kord/core/behavior/GlobalApplicationCommandBehavior : dev/kord/core/behavior/ApplicationCommandBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun editPermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/behavior/GlobalApplicationCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/GlobalApplicationCommandBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/GlobalApplicationCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/kord/core/behavior/GlobalApplicationCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun editPermissions (Ldev/kord/core/behavior/GlobalApplicationCommandBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/behavior/GlobalApplicationCommandBehaviorKt {
	public static final fun GlobalApplicationCommandBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/service/InteractionService;)Ldev/kord/core/behavior/GlobalApplicationCommandBehavior;
	public static final fun GuildApplicationCommandBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/service/InteractionService;)Ldev/kord/core/behavior/GuildApplicationCommandBehavior;
}

public abstract interface class dev/kord/core/behavior/GuildApplicationCommandBehavior : dev/kord/core/behavior/ApplicationCommandBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun editPermissions (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
}

public final class dev/kord/core/behavior/GuildApplicationCommandBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/GuildApplicationCommandBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/GuildApplicationCommandBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun edit (Ldev/kord/core/behavior/GuildApplicationCommandBehavior;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun editPermissions (Ldev/kord/core/behavior/GuildApplicationCommandBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/GuildBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun asGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun editSelfNickname (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun editWelcomeScreen (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getApplicationCommand (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getBan (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getBanOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getBans ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getChannel (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getCommands ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getEmojis ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGateway ()Ldev/kord/gateway/Gateway;
	public abstract fun getIntegrations ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getInvite (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getInviteOrNull (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMember (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMemberOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMembers (Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPresences ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPreview (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPreviewOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPruneCount (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRole (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRoleOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplates ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getVanityUrl (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getWelcomeScreen (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWelcomeScreenOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWidget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWidgetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun kick (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun modifySelfNickname (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun prune (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun requestMembers (Ldev/kord/gateway/RequestGuildMembers;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun unban (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/GuildBehavior;
}

public final class dev/kord/core/behavior/GuildBehavior$DefaultImpls {
	public static fun asGuild (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asGuildOrNull (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun editSelfNickname (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun editSelfNickname$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun editWelcomeScreen (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getApplicationCommand (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getBan (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getBanOrNull (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getBans (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getChannel (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannels (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getCommands (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getEmojis (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGateway (Ldev/kord/core/behavior/GuildBehavior;)Ldev/kord/gateway/Gateway;
	public static fun getIntegrations (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getInvite (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInvite$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getInviteOrNull (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInviteOrNull$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMember (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMemberOrNull (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMembers (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMembers (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getMembers$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getPresences (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPreview (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPreviewOrNull (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPruneCount (Ldev/kord/core/behavior/GuildBehavior;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getPruneCount$default (Ldev/kord/core/behavior/GuildBehavior;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getRegions (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getRole (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRoleOrNull (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRoles (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getTemplate (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getTemplateOrNull (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getTemplates (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getVanityUrl (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWebhooks (Ldev/kord/core/behavior/GuildBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getWelcomeScreen (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWelcomeScreenOrNull (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWidget (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWidgetOrNull (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun kick (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun kick$default (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun leave (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun modifySelfNickname (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun modifySelfNickname$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun prune (Ldev/kord/core/behavior/GuildBehavior;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun prune$default (Ldev/kord/core/behavior/GuildBehavior;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun requestMembers (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/gateway/RequestGuildMembers;)Lkotlinx/coroutines/flow/Flow;
	public static fun unban (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/GuildBehavior;
}

public final class dev/kord/core/behavior/GuildBehaviorKt {
	public static final fun GuildBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/GuildBehavior;
	public static synthetic fun GuildBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/GuildBehavior;
	public static final fun addRole (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun addRole$default (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun ban (Ldev/kord/core/behavior/GuildBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun bulkEditSlashCommandPermissions (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createApplicationCommand (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createApplicationCommand$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createApplicationCommands (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createCategory (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createCategory (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createCategory$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createEmoji (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Ldev/kord/rest/Image;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createEmoji (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createEmoji$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Ldev/kord/rest/Image;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createNewsChannel (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createNewsChannel (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createNewsChannel$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createRole (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createRole$default (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createTextChannel (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createTextChannel (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createTextChannel$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createVoiceChannel (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createVoiceChannel (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createVoiceChannel$default (Ldev/kord/core/behavior/GuildBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun edit (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editWidget (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getAuditLogEntries (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getAuditLogEntries$default (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun requestMembers (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun requestMembers$default (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static final fun swapChannelPositions (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun swapRolePositions (Ldev/kord/core/behavior/GuildBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/GuildEmojiBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/GuildEmojiBehavior;
}

public final class dev/kord/core/behavior/GuildEmojiBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/GuildEmojiBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/GuildEmojiBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/GuildEmojiBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun withStrategy (Ldev/kord/core/behavior/GuildEmojiBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/GuildEmojiBehavior;
}

public final class dev/kord/core/behavior/GuildEmojiBehaviorKt {
	public static final fun edit (Ldev/kord/core/behavior/GuildEmojiBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/GuildInteractionBehavior : dev/kord/core/behavior/interaction/InteractionBehavior {
	public static final field Companion Ldev/kord/core/behavior/GuildInteractionBehavior$Companion;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/behavior/GuildInteractionBehavior$Companion {
}

public final class dev/kord/core/behavior/GuildInteractionBehavior$DefaultImpls {
	public static fun acknowledgeEphemeral (Ldev/kord/core/behavior/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublic (Ldev/kord/core/behavior/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/GuildInteractionBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun getChannel (Ldev/kord/core/behavior/GuildInteractionBehavior;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/kord/core/behavior/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/GuildInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/GuildInteractionBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
}

public abstract interface class dev/kord/core/behavior/MemberBehavior : dev/kord/core/behavior/UserBehavior, dev/kord/core/entity/KordEntity {
	public abstract fun addRole (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getNicknameMention ()Ljava/lang/String;
	public abstract fun getPresence (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getPresenceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getVoiceState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getVoiceStateOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun kick (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun removeRole (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MemberBehavior;
}

public final class dev/kord/core/behavior/MemberBehavior$DefaultImpls {
	public static fun addRole (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun addRole$default (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun asMember (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMember (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMemberOrNull (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMemberOrNull (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUser (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUserOrNull (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun getDmChannel (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannelOrNull (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/MemberBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/kord/core/behavior/MemberBehavior;)Ljava/lang/String;
	public static fun getNicknameMention (Ldev/kord/core/behavior/MemberBehavior;)Ljava/lang/String;
	public static fun getPresence (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getPresenceOrNull (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceState (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStateOrNull (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun kick (Ldev/kord/core/behavior/MemberBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun kick$default (Ldev/kord/core/behavior/MemberBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun removeRole (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun removeRole$default (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/MemberBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MemberBehavior;
}

public final class dev/kord/core/behavior/MemberBehaviorKt {
	public static final fun MemberBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MemberBehavior;
	public static synthetic fun MemberBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/MemberBehavior;
	public static final fun ban (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun ban$default (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun edit (Ldev/kord/core/behavior/MemberBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/MessageBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun addReaction (Ldev/kord/core/entity/GuildEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun addReaction (Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteAllReactions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteOwnReaction (Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteReaction (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteReaction (Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public abstract fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getReactors (Ldev/kord/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun pin (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun publish (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun unpin (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MessageBehavior;
}

public final class dev/kord/core/behavior/MessageBehavior$DefaultImpls {
	public static fun addReaction (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/core/entity/GuildEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun addReaction (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMessage (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMessageOrNull (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteAllReactions (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteOwnReaction (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteReaction (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteReaction (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/kord/core/behavior/MessageBehavior;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getReactors (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public static fun pin (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun publish (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun unpin (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MessageBehavior;
}

public final class dev/kord/core/behavior/MessageBehaviorKt {
	public static final fun MessageBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MessageBehavior;
	public static synthetic fun MessageBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/MessageBehavior;
	public static final fun edit (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editWebhookMessage (Ldev/kord/core/behavior/MessageBehavior;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun reply (Ldev/kord/core/behavior/MessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/RoleBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun changePosition (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/RoleBehavior;
}

public final class dev/kord/core/behavior/RoleBehavior$DefaultImpls {
	public static fun changePosition (Ldev/kord/core/behavior/RoleBehavior;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/RoleBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/RoleBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/RoleBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getMention (Ldev/kord/core/behavior/RoleBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/kord/core/behavior/RoleBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/RoleBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/RoleBehavior;
}

public final class dev/kord/core/behavior/RoleBehaviorKt {
	public static final fun RoleBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/RoleBehavior;
	public static synthetic fun RoleBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/RoleBehavior;
	public static final fun edit (Ldev/kord/core/behavior/RoleBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/StageInstanceBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun asStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun update (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/StageInstanceBehavior;
}

public final class dev/kord/core/behavior/StageInstanceBehavior$DefaultImpls {
	public static fun asStageInstance (Ldev/kord/core/behavior/StageInstanceBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/StageInstanceBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/StageInstanceBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun update (Ldev/kord/core/behavior/StageInstanceBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/StageInstanceBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/StageInstanceBehavior;
}

public abstract interface class dev/kord/core/behavior/TemplateBehavior : dev/kord/core/KordObject {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getCode ()Ljava/lang/String;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun sync (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/behavior/TemplateBehavior$DefaultImpls {
	public static fun delete (Ldev/kord/core/behavior/TemplateBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun sync (Ldev/kord/core/behavior/TemplateBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/behavior/TemplateBehaviorKt {
	public static final fun TemplateBehavior (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;)Ldev/kord/core/behavior/TemplateBehavior;
	public static final fun createGuild (Ldev/kord/core/behavior/TemplateBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun edit (Ldev/kord/core/behavior/TemplateBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/UserBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun asMember (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asMemberOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getDmChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getDmChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/UserBehavior;
}

public final class dev/kord/core/behavior/UserBehavior$DefaultImpls {
	public static fun asMember (Ldev/kord/core/behavior/UserBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asMemberOrNull (Ldev/kord/core/behavior/UserBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUser (Ldev/kord/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asUserOrNull (Ldev/kord/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/UserBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun getDmChannel (Ldev/kord/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getDmChannelOrNull (Ldev/kord/core/behavior/UserBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/kord/core/behavior/UserBehavior;)Ljava/lang/String;
	public static fun withStrategy (Ldev/kord/core/behavior/UserBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/UserBehavior;
}

public final class dev/kord/core/behavior/UserBehaviorKt {
	public static final fun UserBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/UserBehavior;
	public static synthetic fun UserBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/UserBehavior;
}

public abstract interface class dev/kord/core/behavior/WebhookBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun delete (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/WebhookBehavior;
}

public final class dev/kord/core/behavior/WebhookBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/WebhookBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/WebhookBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/kord/core/behavior/WebhookBehavior;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/kord/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/WebhookBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/WebhookBehavior;
}

public final class dev/kord/core/behavior/WebhookBehaviorKt {
	public static final fun edit (Ldev/kord/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun edit (Ldev/kord/core/behavior/WebhookBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun execute (Ldev/kord/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun executeIgnored (Ldev/kord/core/behavior/WebhookBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/BaseVoiceChannelBehavior : dev/kord/core/behavior/channel/GuildChannelBehavior {
	public abstract fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
}

public final class dev/kord/core/behavior/channel/BaseVoiceChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/BaseVoiceChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
}

public abstract interface class dev/kord/core/behavior/channel/CategoryBehavior : dev/kord/core/behavior/channel/GuildChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/CategoryBehavior;
}

public final class dev/kord/core/behavior/channel/CategoryBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/CategoryBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/CategoryBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannels (Ldev/kord/core/behavior/channel/CategoryBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuild (Ldev/kord/core/behavior/channel/CategoryBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/CategoryBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/CategoryBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/kord/core/behavior/channel/CategoryBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/CategoryBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/CategoryBehavior;
}

public final class dev/kord/core/behavior/channel/CategoryBehaviorKt {
	public static final fun CategoryBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/CategoryBehavior;
	public static synthetic fun CategoryBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/CategoryBehavior;
	public static final fun createNewsChannel (Ldev/kord/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createNewsChannel$default (Ldev/kord/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createTextChannel (Ldev/kord/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createTextChannel$default (Ldev/kord/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun createVoiceChannel (Ldev/kord/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createVoiceChannel$default (Ldev/kord/core/behavior/channel/CategoryBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun edit (Ldev/kord/core/behavior/channel/CategoryBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/ChannelBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
}

public final class dev/kord/core/behavior/channel/ChannelBehavior$DefaultImpls {
	public static fun asChannel (Ldev/kord/core/behavior/channel/ChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/ChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/ChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/channel/ChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/kord/core/behavior/channel/ChannelBehavior;)Ljava/lang/String;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/ChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
}

public final class dev/kord/core/behavior/channel/ChannelBehaviorKt {
	public static final fun ChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public static synthetic fun ChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/ChannelBehavior;
}

public abstract interface class dev/kord/core/behavior/channel/GuildChannelBehavior : dev/kord/core/behavior/channel/ChannelBehavior, dev/kord/core/entity/Strategizable {
	public abstract fun addOverwrite (Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun compareTo (Ldev/kord/core/entity/Entity;)I
	public abstract fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public abstract fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
}

public final class dev/kord/core/behavior/channel/GuildChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/GuildChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/GuildChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/GuildChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
}

public final class dev/kord/core/behavior/channel/GuildChannelBehaviorKt {
	public static final fun GuildChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public static synthetic fun GuildChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public static final fun editMemberPermission (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editRolePermission (Ldev/kord/core/behavior/channel/GuildChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/GuildMessageChannelBehavior : dev/kord/core/behavior/channel/GuildChannelBehavior, dev/kord/core/behavior/channel/MessageChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun bulkDelete (Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
}

public final class dev/kord/core/behavior/channel/GuildMessageChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun createMessage (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhooks (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
}

public final class dev/kord/core/behavior/channel/GuildMessageChannelBehaviorKt {
	public static final fun createWebhook (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createWebhook (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createWebhook$default (Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/MessageChannelBehavior : dev/kord/core/behavior/channel/ChannelBehavior, dev/kord/core/entity/Strategizable {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun deleteMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessageOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesAfter (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesAround (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesBefore (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
}

public final class dev/kord/core/behavior/channel/MessageChannelBehavior$DefaultImpls {
	public static fun asChannel (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun createMessage (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMention (Ldev/kord/core/behavior/channel/MessageChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/kord/core/behavior/channel/MessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesAfter$default (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesAround$default (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesBefore$default (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/kord/core/behavior/channel/MessageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
}

public final class dev/kord/core/behavior/channel/MessageChannelBehaviorKt {
	public static final fun MessageChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static synthetic fun MessageChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static final fun createEmbed (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun createMessage (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun withTyping (Ldev/kord/core/behavior/channel/MessageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/NewsChannelBehavior : dev/kord/core/behavior/channel/GuildMessageChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun follow (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/NewsChannelBehavior;
}

public final class dev/kord/core/behavior/channel/NewsChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun createMessage (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun follow (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/NewsChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/NewsChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/kord/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/kord/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhooks (Ldev/kord/core/behavior/channel/NewsChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/NewsChannelBehavior;
}

public final class dev/kord/core/behavior/channel/NewsChannelBehaviorKt {
	public static final fun NewsChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/NewsChannelBehavior;
	public static synthetic fun NewsChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/NewsChannelBehavior;
	public static final fun edit (Ldev/kord/core/behavior/channel/NewsChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/StageChannelBehavior : dev/kord/core/behavior/channel/BaseVoiceChannelBehavior {
	public abstract fun createStageInstance (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/StageChannelBehavior;
}

public final class dev/kord/core/behavior/channel/StageChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/StageChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/StageChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun createStageInstance (Ldev/kord/core/behavior/channel/StageChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/StageChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/StageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/StageChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStageInstance (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStageInstanceOrNull (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/kord/core/behavior/channel/StageChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/StageChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/StageChannelBehavior;
}

public final class dev/kord/core/behavior/channel/StageChannelBehaviorKt {
	public static final fun StageChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/behavior/channel/StageChannelBehavior;
	public static synthetic fun StageChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/StageChannelBehavior;
	public static final fun edit (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editCurrentVoiceState (Ldev/kord/core/behavior/channel/StageChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun editVoiceState (Ldev/kord/core/behavior/channel/StageChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/StoreChannelBehavior : dev/kord/core/behavior/channel/GuildChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/StoreChannelBehavior;
}

public final class dev/kord/core/behavior/channel/StoreChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/StoreChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/StoreChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/StoreChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/StoreChannelBehavior;
}

public final class dev/kord/core/behavior/channel/StoreChannelBehaviorKt {
	public static final fun StoreChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/StoreChannelBehavior;
	public static synthetic fun StoreChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/StoreChannelBehavior;
	public static final fun edit (Ldev/kord/core/behavior/channel/StoreChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/TextChannelBehavior : dev/kord/core/behavior/channel/GuildMessageChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/TextChannelBehavior;
}

public final class dev/kord/core/behavior/channel/TextChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun createMessage (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/TextChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/TextChannelBehavior;)Ljava/lang/String;
	public static fun getMessage (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/kord/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/kord/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhooks (Ldev/kord/core/behavior/channel/TextChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/TextChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/TextChannelBehavior;
}

public final class dev/kord/core/behavior/channel/TextChannelBehaviorKt {
	public static final fun TextChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/TextChannelBehavior;
	public static synthetic fun TextChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/TextChannelBehavior;
	public static final fun edit (Ldev/kord/core/behavior/channel/TextChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/channel/VoiceChannelBehavior : dev/kord/core/behavior/channel/BaseVoiceChannelBehavior {
	public abstract fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/VoiceChannelBehavior;
}

public final class dev/kord/core/behavior/channel/VoiceChannelBehavior$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildOrNull (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getInvites (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;)Ljava/lang/String;
	public static fun getPosition (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getVoiceStates (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;)Lkotlinx/coroutines/flow/Flow;
	public static fun withStrategy (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/VoiceChannelBehavior;
}

public final class dev/kord/core/behavior/channel/VoiceChannelBehaviorKt {
	public static final fun VoiceChannelBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/VoiceChannelBehavior;
	public static synthetic fun VoiceChannelBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/channel/VoiceChannelBehavior;
	public static final fun edit (Ldev/kord/core/behavior/channel/VoiceChannelBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/interaction/ComponentInteractionBehavior : dev/kord/core/behavior/interaction/InteractionBehavior {
	public abstract fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;
}

public final class dev/kord/core/behavior/interaction/ComponentInteractionBehavior$DefaultImpls {
	public static fun acknowledgeEphemeral (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgeEphemeralDeferredMessageUpdate (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublic (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublicDeferredMessageUpdate (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun getChannel (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;
}

public final class dev/kord/core/behavior/interaction/ComponentInteractionBehaviorKt {
	public static final fun ComponentInteractionBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;
	public static synthetic fun ComponentInteractionBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;
	public static final fun acknowledgeEphemeralUpdateMessage (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun acknowledgePublicUpdateMessage (Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior : dev/kord/core/behavior/interaction/FollowupMessageBehavior {
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;
}

public final class dev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun getChannel (Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;
}

public final class dev/kord/core/behavior/interaction/EphemeralFollowupMessageBehaviorKt {
	public static final fun EphemeralFollowupMessageBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;
	public static final fun edit (Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/interaction/EphemeralInteractionResponseBehavior : dev/kord/core/behavior/interaction/InteractionResponseBehavior {
}

public final class dev/kord/core/behavior/interaction/EphemeralInteractionResponseBehaviorKt {
	public static final fun EphemeralInteractionResponseBehavior (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;)Ldev/kord/core/behavior/interaction/EphemeralInteractionResponseBehavior;
	public static final fun edit (Ldev/kord/core/behavior/interaction/EphemeralInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun followUp (Ldev/kord/core/behavior/interaction/EphemeralInteractionResponseBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun followUp (Ldev/kord/core/behavior/interaction/EphemeralInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun followUp$default (Ldev/kord/core/behavior/interaction/EphemeralInteractionResponseBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/interaction/FollowupMessageBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public abstract fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getToken ()Ljava/lang/String;
}

public final class dev/kord/core/behavior/interaction/FollowupMessageBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/interaction/FollowupMessageBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun getChannel (Ldev/kord/core/behavior/interaction/FollowupMessageBehavior;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/kord/core/behavior/interaction/FollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/interaction/FollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/interaction/InteractionBehavior : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public abstract fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public abstract fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getToken ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
}

public final class dev/kord/core/behavior/interaction/InteractionBehavior$DefaultImpls {
	public static fun acknowledgeEphemeral (Ldev/kord/core/behavior/interaction/InteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun acknowledgePublic (Ldev/kord/core/behavior/interaction/InteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/behavior/interaction/InteractionBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun getChannel (Ldev/kord/core/behavior/interaction/InteractionBehavior;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/kord/core/behavior/interaction/InteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/interaction/InteractionBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/interaction/InteractionBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
}

public final class dev/kord/core/behavior/interaction/InteractionBehaviorKt {
	public static final fun InteractionBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
	public static synthetic fun InteractionBehavior$default (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
	public static final fun respondEphemeral (Ldev/kord/core/behavior/interaction/InteractionBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondEphemeral$default (Ldev/kord/core/behavior/interaction/InteractionBehavior;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondPublic (Ldev/kord/core/behavior/interaction/InteractionBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/interaction/InteractionResponseBehavior : dev/kord/core/KordObject {
	public abstract fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getToken ()Ljava/lang/String;
}

public abstract interface class dev/kord/core/behavior/interaction/PublicFollowupMessageBehavior : dev/kord/core/behavior/interaction/FollowupMessageBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;
}

public final class dev/kord/core/behavior/interaction/PublicFollowupMessageBehavior$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannel (Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public static fun getChannel (Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getChannelOrNull (Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun withStrategy (Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;
}

public final class dev/kord/core/behavior/interaction/PublicFollowupMessageBehaviorKt {
	public static final fun PublicFollowupMessageBehavior (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;
	public static final fun edit (Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/behavior/interaction/PublicInteractionResponseBehavior : dev/kord/core/behavior/interaction/InteractionResponseBehavior {
	public abstract fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/behavior/interaction/PublicInteractionResponseBehavior$DefaultImpls {
	public static fun delete (Ldev/kord/core/behavior/interaction/PublicInteractionResponseBehavior;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/behavior/interaction/PublicInteractionResponseBehaviorKt {
	public static final fun PublicInteractionResponseBehavior (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;)Ldev/kord/core/behavior/interaction/PublicInteractionResponseBehavior;
	public static final fun edit (Ldev/kord/core/behavior/interaction/PublicInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun followUp (Ldev/kord/core/behavior/interaction/PublicInteractionResponseBehavior;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/builder/components/ButtonBuilderExtensionsKt {
	public static final fun emoji (Ldev/kord/rest/builder/component/ButtonBuilder;Ldev/kord/core/entity/GuildEmoji;)V
	public static final fun emoji (Ldev/kord/rest/builder/component/ButtonBuilder;Ldev/kord/core/entity/ReactionEmoji;)V
}

public final class dev/kord/core/builder/kord/KordBuilder {
	public fun <init> (Ljava/lang/String;)V
	public final fun build (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun cache (Lkotlin/jvm/functions/Function2;)V
	public final fun gateways (Lkotlin/jvm/functions/Function2;)V
	public final fun getDefaultDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getDefaultStrategy ()Ldev/kord/core/supplier/EntitySupplyStrategy;
	public final fun getEnableShutdownHook ()Z
	public final fun getEventFlow ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getHttpClient ()Lio/ktor/client/HttpClient;
	public final fun getIntents ()Ldev/kord/gateway/Intents;
	public final fun getToken ()Ljava/lang/String;
	public final fun requestHandler (Lkotlin/jvm/functions/Function1;)V
	public final fun setDefaultDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun setDefaultStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)V
	public final fun setEnableShutdownHook (Z)V
	public final fun setEventFlow (Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public final fun setHttpClient (Lio/ktor/client/HttpClient;)V
	public final fun setIntents (Ldev/kord/gateway/Intents;)V
	public final fun sharding (Lkotlin/jvm/functions/Function1;)V
}

public final class dev/kord/core/builder/kord/KordBuilderKt {
	public static final fun invoke (Ldev/kord/gateway/DefaultGateway$Companion;Ldev/kord/core/ClientResources;Ldev/kord/gateway/retry/Retry;)Ldev/kord/gateway/DefaultGateway;
	public static synthetic fun invoke$default (Ldev/kord/gateway/DefaultGateway$Companion;Ldev/kord/core/ClientResources;Ldev/kord/gateway/retry/Retry;ILjava/lang/Object;)Ldev/kord/gateway/DefaultGateway;
}

public final class dev/kord/core/builder/kord/KordRestOnlyBuilder {
	public fun <init> (Ljava/lang/String;)V
	public final fun build ()Ldev/kord/core/Kord;
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDefaultDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getHttpClient ()Lio/ktor/client/HttpClient;
	public final fun getToken ()Ljava/lang/String;
	public final fun requestHandler (Lkotlin/jvm/functions/Function1;)V
	public final fun setApplicationId (Ldev/kord/common/entity/Snowflake;)V
	public final fun setDefaultDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun setHttpClient (Lio/ktor/client/HttpClient;)V
}

public final class dev/kord/core/builder/kord/Shards {
	public fun <init> (ILjava/lang/Iterable;)V
	public synthetic fun <init> (ILjava/lang/Iterable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/Iterable;
	public final fun copy (ILjava/lang/Iterable;)Ldev/kord/core/builder/kord/Shards;
	public static synthetic fun copy$default (Ldev/kord/core/builder/kord/Shards;ILjava/lang/Iterable;ILjava/lang/Object;)Ldev/kord/core/builder/kord/Shards;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIndices ()Ljava/lang/Iterable;
	public final fun getTotalShards ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/CachingGateway : dev/kord/cache/api/DataCache, dev/kord/gateway/Gateway, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Ldev/kord/cache/api/DataCache;Ldev/kord/gateway/Gateway;Lkotlinx/coroutines/CoroutineDispatcher;)V
	public synthetic fun <init> (Ldev/kord/cache/api/DataCache;Ldev/kord/gateway/Gateway;Lkotlinx/coroutines/CoroutineDispatcher;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun detach (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getEntry (Lkotlin/reflect/KType;)Ldev/kord/cache/api/DataEntryCache;
	public fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public fun getPing ()Lkotlinx/coroutines/flow/StateFlow;
	public fun register (Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register (Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register ([Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun send (Ldev/kord/gateway/Command;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun start (Ldev/kord/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/DataCacheExtensionsKt {
	public static final fun createView (Ldev/kord/cache/api/DataCache;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/cache/DataCacheView : dev/kord/cache/api/DataCache {
	public fun <init> (Ldev/kord/cache/api/DataCache;)V
	public fun getEntry (Lkotlin/reflect/KType;)Ldev/kord/cache/api/DataEntryCache;
	public fun register (Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register (Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun register ([Ldev/kord/cache/api/data/DataDescription;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/KordCacheBuilder {
	public fun <init> ()V
	public final fun build ()Ldev/kord/cache/api/DataCache;
	public final fun channels (Lkotlin/jvm/functions/Function2;)V
	public final fun disableAll ()V
	public final fun emojis (Lkotlin/jvm/functions/Function2;)V
	public final fun forDescription (Ldev/kord/cache/api/data/DataDescription;Lkotlin/jvm/functions/Function2;)V
	public final fun getDefaultGenerator ()Lkotlin/jvm/functions/Function2;
	public final fun guilds (Lkotlin/jvm/functions/Function2;)V
	public final fun lruCache (I)Lkotlin/jvm/functions/Function2;
	public static synthetic fun lruCache$default (Ldev/kord/core/cache/KordCacheBuilder;IILjava/lang/Object;)Lkotlin/jvm/functions/Function2;
	public final fun members (Lkotlin/jvm/functions/Function2;)V
	public final fun messages (Lkotlin/jvm/functions/Function2;)V
	public final fun none ()Lkotlin/jvm/functions/Function2;
	public final fun presences (Lkotlin/jvm/functions/Function2;)V
	public final fun roles (Lkotlin/jvm/functions/Function2;)V
	public final fun setDefaultGenerator (Lkotlin/jvm/functions/Function2;)V
	public final fun users (Lkotlin/jvm/functions/Function2;)V
	public final fun voiceState (Lkotlin/jvm/functions/Function2;)V
	public final fun webhooks (Lkotlin/jvm/functions/Function2;)V
}

public final class dev/kord/core/cache/QueryKt {
	public static final fun booleanEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ljava/lang/Boolean;)V
	public static final fun idEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/kord/common/entity/Snowflake;)V
	public static final fun idEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ljava/lang/String;)V
	public static final fun idGt (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/kord/common/entity/Snowflake;)V
	public static final fun optionalIdEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ldev/kord/common/entity/Snowflake;)V
	public static final fun stringEq (Ldev/kord/cache/api/QueryBuilder;Lkotlin/reflect/KProperty1;Ljava/lang/String;)V
}

public final class dev/kord/core/cache/ViewKeys {
	public fun <init> ()V
	public fun <init> (Ljava/util/Set;)V
	public synthetic fun <init> (Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun add (Ljava/lang/Object;)V
	public final fun getKeys ()Ljava/util/Set;
}

public final class dev/kord/core/cache/data/ActivityData {
	public static final field Companion Ldev/kord/core/cache/data/ActivityData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;JLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;JLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;JLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/ActivityType;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()J
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;JLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ActivityData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ActivityData;Ljava/lang/String;Ldev/kord/common/entity/ActivityType;Ldev/kord/common/entity/optional/Optional;JLdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ActivityData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getAssets ()Ldev/kord/common/entity/optional/Optional;
	public final fun getButtons ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCreatedAt ()J
	public final fun getDetails ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmoji ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getInstance ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getParty ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSecrets ()Ldev/kord/common/entity/optional/Optional;
	public final fun getState ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamps ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/ActivityType;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ActivityData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ActivityData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ActivityData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ActivityData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ActivityData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordActivity;)Ldev/kord/core/cache/data/ActivityData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationCommandData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ApplicationCommandData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ApplicationCommandData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ApplicationCommandData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ApplicationCommandData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ApplicationCommandData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ApplicationCommandData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ApplicationCommandData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordApplicationCommand;)Ldev/kord/core/cache/data/ApplicationCommandData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandDataKt {
	public static final fun ApplicationCommandGroupData (Ldev/kord/core/cache/data/ApplicationCommandOptionData;)Ldev/kord/core/cache/data/ApplicationCommandGroupData;
	public static final fun ApplicationCommandParameterData (Ldev/kord/core/cache/data/ApplicationCommandOptionData;)Ldev/kord/core/cache/data/ApplicationCommandParameterData;
	public static final fun ApplicationCommandSubCommandData (Ldev/kord/core/cache/data/ApplicationCommandOptionData;)Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;
}

public final class dev/kord/core/cache/data/ApplicationCommandGroupData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationCommandGroupData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getSubCommands ()Ljava/util/List;
}

public final class dev/kord/core/cache/data/ApplicationCommandGroupData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ApplicationCommandGroupData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ApplicationCommandGroupData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ApplicationCommandGroupData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandGroupData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandOptionChoiceData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ApplicationCommandOptionChoiceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandOptionChoiceData$Companion {
	public final fun from (Ldev/kord/common/entity/Choice;)Ldev/kord/core/cache/data/ApplicationCommandOptionChoiceData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandOptionData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationCommandOptionData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ApplicationCommandOptionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ApplicationCommandOptionData;Ldev/kord/common/entity/ApplicationCommandOptionType;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ApplicationCommandOptionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChoices ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefault ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRequired ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getType ()Ldev/kord/common/entity/ApplicationCommandOptionType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ApplicationCommandOptionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ApplicationCommandOptionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ApplicationCommandOptionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ApplicationCommandOptionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandOptionData$Companion {
	public final fun from (Ldev/kord/common/entity/ApplicationCommandOption;)Ldev/kord/core/cache/data/ApplicationCommandOptionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandParameterData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationCommandParameterData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ApplicationCommandParameterData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ApplicationCommandParameterData;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ApplicationCommandParameterData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChoices ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getRequired ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ApplicationCommandParameterData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ApplicationCommandParameterData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ApplicationCommandParameterData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ApplicationCommandParameterData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandParameterData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandSubcommandData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationCommandSubcommandData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getParameters ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public final fun isDefault ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ApplicationCommandSubcommandData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ApplicationCommandSubcommandData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationCommandSubcommandData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationInfoData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationInfoData$Companion;
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ldev/kord/common/entity/DiscordTeam;
	public final fun component12 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Ldev/kord/common/entity/Snowflake;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ApplicationInfoData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ApplicationInfoData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ZZLdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/DiscordTeam;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ApplicationInfoData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBotPublic ()Z
	public final fun getBotRequireCodeGrant ()Z
	public final fun getCoverImage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getOwnerId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPrimarySkuId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getRpcOrigins ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSlug ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSummary ()Ljava/lang/String;
	public final fun getTeam ()Ldev/kord/common/entity/DiscordTeam;
	public final fun getVerifyKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ApplicationInfoData$Companion {
	public final fun from (Ldev/kord/rest/json/response/ApplicationInfoResponse;)Ldev/kord/core/cache/data/ApplicationInfoData;
}

public final class dev/kord/core/cache/data/ApplicationInteractionData {
	public static final field Companion Ldev/kord/core/cache/data/ApplicationInteractionData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ApplicationInteractionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ApplicationInteractionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComponentType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCustomId ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getOptions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getResolvedObjectsData ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ApplicationInteractionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ApplicationInteractionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ApplicationInteractionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ApplicationInteractionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ApplicationInteractionData$Companion {
	public final fun from (Ldev/kord/common/entity/InteractionCallbackData;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/ApplicationInteractionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/AttachmentData {
	public static final field Companion Ldev/kord/core/cache/data/AttachmentData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/core/cache/data/AttachmentData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/AttachmentData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/core/cache/data/AttachmentData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFilename ()Ljava/lang/String;
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getSize ()I
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/AttachmentData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/AttachmentData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/AttachmentData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/AttachmentData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/AttachmentData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordAttachment;)Ldev/kord/core/cache/data/AttachmentData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/BanData {
	public static final field Companion Ldev/kord/core/cache/data/BanData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/BanData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/BanData;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/core/cache/data/BanData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getReason ()Ljava/lang/String;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/BanData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/BanData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/BanData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/BanData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/BanData$Companion {
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/json/response/BanResponse;)Ldev/kord/core/cache/data/BanData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ChannelData {
	public static final field Companion Ldev/kord/core/cache/data/ChannelData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component11 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component12 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component14 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component15 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component16 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component17 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component18 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component19 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/ChannelType;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ChannelData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/ChannelType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ChannelData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getBitrate ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getIcon ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getLastMessageId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getLastPinTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getNsfw ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getOwnerId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getParentId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getPermissionOverwrites ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPosition ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getRateLimitPerUser ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getRecipients ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTopic ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/ChannelType;
	public final fun getUserLimit ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ChannelData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ChannelData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ChannelData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ChannelData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ChannelData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordChannel;)Ldev/kord/core/cache/data/ChannelData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ChannelDataKt {
	public static final fun toData (Ldev/kord/common/entity/DiscordChannel;)Ldev/kord/core/cache/data/ChannelData;
}

public final class dev/kord/core/cache/data/ClientStatusData {
	public static final field Companion Ldev/kord/core/cache/data/ClientStatusData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ClientStatusData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ClientStatusData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ClientStatusData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDesktop ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMobile ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWeb ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ClientStatusData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ClientStatusData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ClientStatusData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ClientStatusData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ClientStatusData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordClientStatus;)Ldev/kord/core/cache/data/ClientStatusData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ComponentData {
	public static final field Companion Ldev/kord/core/cache/data/ComponentData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/ComponentType;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ComponentData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ComponentData;Ldev/kord/common/entity/ComponentType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ComponentData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComponents ()Ldev/kord/common/entity/optional/Optional;
	public final fun getCustomId ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDisabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getEmoji ()Ldev/kord/common/entity/optional/Optional;
	public final fun getLabel ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStyle ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/ComponentType;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ComponentData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ComponentData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ComponentData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ComponentData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ComponentData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordComponent;)Ldev/kord/core/cache/data/ComponentData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedAuthorData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedAuthorData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/EmbedAuthorData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedAuthorData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedAuthorData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getProxyIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedAuthorData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedAuthorData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedAuthorData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedAuthorData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedAuthorData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed$Author;)Ldev/kord/core/cache/data/EmbedAuthorData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/EmbedData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthor ()Ldev/kord/common/entity/optional/Optional;
	public final fun getColor ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getDescription ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFields ()Ldev/kord/common/entity/optional/Optional;
	public final fun getFooter ()Ldev/kord/common/entity/optional/Optional;
	public final fun getImage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getProvider ()Ldev/kord/common/entity/optional/Optional;
	public final fun getThumbnail ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTitle ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getVideo ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed;)Ldev/kord/core/cache/data/EmbedData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedFieldData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedFieldData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/core/cache/data/EmbedFieldData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedFieldData;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedFieldData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInline ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedFieldData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedFieldData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedFieldData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedFieldData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedFieldData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed$Field;)Ldev/kord/core/cache/data/EmbedFieldData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedFooterData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedFooterData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/EmbedFooterData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedFooterData;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedFooterData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getProxyIconUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedFooterData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedFooterData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedFooterData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedFooterData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedFooterData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed$Footer;)Ldev/kord/core/cache/data/EmbedFooterData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedImageData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedImageData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/core/cache/data/EmbedImageData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedImageData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedImageData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getProxyUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedImageData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedImageData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedImageData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedImageData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedImageData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed$Image;)Ldev/kord/core/cache/data/EmbedImageData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedProviderData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedProviderData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/EmbedProviderData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedProviderData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedProviderData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedProviderData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedProviderData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedProviderData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedProviderData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedProviderData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed$Provider;)Ldev/kord/core/cache/data/EmbedProviderData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedThumbnailData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedThumbnailData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/core/cache/data/EmbedThumbnailData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedThumbnailData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedThumbnailData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getProxyUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedThumbnailData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedThumbnailData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedThumbnailData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedThumbnailData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedThumbnailData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed$Thumbnail;)Ldev/kord/core/cache/data/EmbedThumbnailData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedVideoData {
	public static final field Companion Ldev/kord/core/cache/data/EmbedVideoData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/core/cache/data/EmbedVideoData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmbedVideoData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmbedVideoData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeight ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getUrl ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidth ()Ldev/kord/common/entity/optional/OptionalInt;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmbedVideoData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmbedVideoData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmbedVideoData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmbedVideoData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmbedVideoData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordEmbed$Video;)Ldev/kord/core/cache/data/EmbedVideoData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmojiData {
	public static final field Companion Ldev/kord/core/cache/data/EmojiData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/core/cache/data/EmojiData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/EmojiData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/core/cache/data/EmojiData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAnimated ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getAvailable ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getManaged ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getName ()Ljava/lang/String;
	public final fun getRequireColons ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getRoles ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUserId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/EmojiData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/EmojiData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/EmojiData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/EmojiData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/EmojiData$Companion {
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordEmoji;)Ldev/kord/core/cache/data/EmojiData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/GuildApplicationCommandPermissionData {
	public static final field Companion Ldev/kord/core/cache/data/GuildApplicationCommandPermissionData$Companion;
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$Type;Z)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$Type;
	public final fun component3 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$Type;Z)Ldev/kord/core/cache/data/GuildApplicationCommandPermissionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/GuildApplicationCommandPermissionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$Type;ZILjava/lang/Object;)Ldev/kord/core/cache/data/GuildApplicationCommandPermissionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermission ()Z
	public final fun getType ()Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/GuildApplicationCommandPermissionData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission;)Ldev/kord/core/cache/data/GuildApplicationCommandPermissionData;
}

public final class dev/kord/core/cache/data/GuildApplicationCommandPermissionsData {
	public static final field Companion Ldev/kord/core/cache/data/GuildApplicationCommandPermissionsData$Companion;
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/util/List;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/util/List;)Ldev/kord/core/cache/data/GuildApplicationCommandPermissionsData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/GuildApplicationCommandPermissionsData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/core/cache/data/GuildApplicationCommandPermissionsData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermissions ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/GuildApplicationCommandPermissionsData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordGuildApplicationCommandPermissions;)Ldev/kord/core/cache/data/GuildApplicationCommandPermissionsData;
}

public final class dev/kord/core/cache/data/GuildData {
	public static final field Companion Ldev/kord/core/cache/data/GuildData$Companion;
	public synthetic fun <init> (IILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Z)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;ZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/Snowflake;
	public final fun component11 ()I
	public final fun component12 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component13 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component14 ()Ldev/kord/common/entity/VerificationLevel;
	public final fun component15 ()Ldev/kord/common/entity/DefaultMessageNotificationLevel;
	public final fun component16 ()Ldev/kord/common/entity/ExplicitContentFilter;
	public final fun component17 ()Ljava/util/List;
	public final fun component18 ()Ljava/util/List;
	public final fun component19 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Ldev/kord/common/entity/MFALevel;
	public final fun component21 ()Ldev/kord/common/entity/Snowflake;
	public final fun component22 ()Ldev/kord/common/entity/Snowflake;
	public final fun component23 ()Ldev/kord/common/entity/SystemChannelFlags;
	public final fun component24 ()Ldev/kord/common/entity/Snowflake;
	public final fun component25 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component26 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component27 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component28 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component29 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component3 ()Ljava/lang/String;
	public final fun component30 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component31 ()Ljava/lang/String;
	public final fun component32 ()Ljava/lang/String;
	public final fun component33 ()Ljava/lang/String;
	public final fun component34 ()Ldev/kord/common/entity/PremiumTier;
	public final fun component35 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component36 ()Ljava/lang/String;
	public final fun component37 ()Ldev/kord/common/entity/Snowflake;
	public final fun component38 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component39 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component40 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component41 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component42 ()Z
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/Snowflake;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Z)Ldev/kord/core/cache/data/GuildData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/GuildData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;ILdev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/VerificationLevel;Ldev/kord/common/entity/DefaultMessageNotificationLevel;Ldev/kord/common/entity/ExplicitContentFilter;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/MFALevel;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/SystemChannelFlags;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/PremiumTier;Ldev/kord/common/entity/optional/OptionalInt;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/Optional;ZIILjava/lang/Object;)Ldev/kord/core/cache/data/GuildData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAfkChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getAfkTimeout ()I
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getApproximateMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getApproximatePresenceCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getBanner ()Ljava/lang/String;
	public final fun getChannels ()Ldev/kord/common/entity/optional/Optional;
	public final fun getDefaultMessageNotifications ()Ldev/kord/common/entity/DefaultMessageNotificationLevel;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ldev/kord/common/entity/optional/Optional;
	public final fun getEmojis ()Ljava/util/List;
	public final fun getExplicitContentFilter ()Ldev/kord/common/entity/ExplicitContentFilter;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getIconHash ()Ldev/kord/common/entity/optional/Optional;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getJoinedAt ()Ldev/kord/common/entity/optional/Optional;
	public final fun getLarge ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getMaxMembers ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMaxPresences ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMaxVideoChannelUsers ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getMfaLevel ()Ldev/kord/common/entity/MFALevel;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfw ()Z
	public final fun getOwnerId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPreferredLocale ()Ljava/lang/String;
	public final fun getPremiumSubscriptionCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getPremiumTier ()Ldev/kord/common/entity/PremiumTier;
	public final fun getPublicUpdatesChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getRegion ()Ljava/lang/String;
	public final fun getRoles ()Ljava/util/List;
	public final fun getRulesChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSplash ()Ldev/kord/common/entity/optional/Optional;
	public final fun getSystemChannelFlags ()Ldev/kord/common/entity/SystemChannelFlags;
	public final fun getSystemChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getVanityUrlCode ()Ljava/lang/String;
	public final fun getVerificationLevel ()Ldev/kord/common/entity/VerificationLevel;
	public final fun getWelcomeScreen ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWidgetChannelId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getWidgetEnabled ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/GuildData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/GuildData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/GuildData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/GuildData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/GuildData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordGuild;)Ldev/kord/core/cache/data/GuildData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/GuildDataKt {
	public static final fun toData (Ldev/kord/common/entity/DiscordGuild;)Ldev/kord/core/cache/data/GuildData;
}

public final class dev/kord/core/cache/data/GuildPreviewData {
	public static final field Companion Ldev/kord/core/cache/data/GuildPreviewData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;IILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getApproximateMemberCount ()I
	public final fun getApproximatePresenceCount ()I
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ljava/lang/String;
	public final fun getEmojis ()Ljava/util/List;
	public final fun getFeatures ()Ljava/util/List;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getSplash ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/GuildPreviewData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/GuildPreviewData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/GuildPreviewData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/GuildPreviewData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/GuildPreviewData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordGuildPreview;)Ldev/kord/core/cache/data/GuildPreviewData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/GuildWidgetData {
	public static final field Companion Ldev/kord/core/cache/data/GuildWidgetData$Companion;
	public synthetic fun <init> (IZLdev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (ZLdev/kord/common/entity/Snowflake;)V
	public final fun component1 ()Z
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (ZLdev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/GuildWidgetData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/GuildWidgetData;ZLdev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/core/cache/data/GuildWidgetData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEnabled ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/GuildWidgetData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/GuildWidgetData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/GuildWidgetData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/GuildWidgetData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/GuildWidgetData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordGuildWidget;)Ldev/kord/core/cache/data/GuildWidgetData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/IntegrationData {
	public static final field Companion Ldev/kord/core/cache/data/IntegrationData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/IntegrationExpireBehavior;ILdev/kord/common/entity/DiscordUser;Ldev/kord/core/cache/data/IntegrationsAccountData;Ljava/lang/String;IZLdev/kord/common/entity/IntegrationApplication;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/IntegrationExpireBehavior;ILdev/kord/common/entity/DiscordUser;Ldev/kord/core/cache/data/IntegrationsAccountData;Ljava/lang/String;IZLdev/kord/common/entity/IntegrationApplication;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/IntegrationExpireBehavior;ILdev/kord/common/entity/DiscordUser;Ldev/kord/core/cache/data/IntegrationsAccountData;Ljava/lang/String;IZLdev/kord/common/entity/IntegrationApplication;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()I
	public final fun component11 ()Ldev/kord/common/entity/DiscordUser;
	public final fun component12 ()Ldev/kord/core/cache/data/IntegrationsAccountData;
	public final fun component13 ()Ljava/lang/String;
	public final fun component14 ()I
	public final fun component15 ()Z
	public final fun component16 ()Ldev/kord/common/entity/IntegrationApplication;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Ldev/kord/common/entity/Snowflake;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component9 ()Ldev/kord/common/entity/IntegrationExpireBehavior;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/IntegrationExpireBehavior;ILdev/kord/common/entity/DiscordUser;Ldev/kord/core/cache/data/IntegrationsAccountData;Ljava/lang/String;IZLdev/kord/common/entity/IntegrationApplication;)Ldev/kord/core/cache/data/IntegrationData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/IntegrationData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ZZLdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/IntegrationExpireBehavior;ILdev/kord/common/entity/DiscordUser;Ldev/kord/core/cache/data/IntegrationsAccountData;Ljava/lang/String;IZLdev/kord/common/entity/IntegrationApplication;ILjava/lang/Object;)Ldev/kord/core/cache/data/IntegrationData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAccount ()Ldev/kord/core/cache/data/IntegrationsAccountData;
	public final fun getApplication ()Ldev/kord/common/entity/IntegrationApplication;
	public final fun getEnableEmoticons ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getEnabled ()Z
	public final fun getExpireBehavior ()Ldev/kord/common/entity/IntegrationExpireBehavior;
	public final fun getExpireGracePeriod ()I
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getRevoked ()Z
	public final fun getRoleId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSubscriberCount ()I
	public final fun getSyncedAt ()Ljava/lang/String;
	public final fun getSyncing ()Z
	public final fun getType ()Ljava/lang/String;
	public final fun getUser ()Ldev/kord/common/entity/DiscordUser;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/IntegrationData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/IntegrationData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/IntegrationData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/IntegrationData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/IntegrationData$Companion {
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordIntegration;)Ldev/kord/core/cache/data/IntegrationData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/IntegrationsAccountData {
	public static final field Companion Ldev/kord/core/cache/data/IntegrationsAccountData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/kord/core/cache/data/IntegrationsAccountData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/IntegrationsAccountData;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/cache/data/IntegrationsAccountData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/IntegrationsAccountData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/IntegrationsAccountData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/IntegrationsAccountData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/IntegrationsAccountData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/IntegrationsAccountData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordIntegrationsAccount;)Ldev/kord/core/cache/data/IntegrationsAccountData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/InteractionData {
	public static final field Companion Ldev/kord/core/cache/data/InteractionData$Companion;
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component11 ()I
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/InteractionType;
	public final fun component4 ()Ldev/kord/core/cache/data/ApplicationInteractionData;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ldev/kord/common/entity/Snowflake;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/InteractionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/InteractionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/InteractionType;Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;ILdev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/InteractionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationInteractionData;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMessage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getToken ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/InteractionType;
	public final fun getUser ()Ldev/kord/common/entity/optional/Optional;
	public final fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/InteractionData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordInteraction;)Ldev/kord/core/cache/data/InteractionData;
}

public final class dev/kord/core/cache/data/InviteCreateData {
	public static final field Companion Ldev/kord/core/cache/data/InviteCreateData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;IILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;ZILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;IILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;ZI)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;IILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;ZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Z
	public final fun component11 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()I
	public final fun component7 ()I
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component9 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;IILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;ZI)Ldev/kord/core/cache/data/InviteCreateData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/InviteCreateData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;IILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;ZIILjava/lang/Object;)Ldev/kord/core/cache/data/InviteCreateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Ljava/lang/String;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getInviterId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMaxAge ()I
	public final fun getMaxUses ()I
	public final fun getTargetUserId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getTargetUserType ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTemporary ()Z
	public final fun getUses ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/InviteCreateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/InviteCreateData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/InviteCreateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/InviteCreateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/InviteCreateData$Companion {
	public final fun from (Ldev/kord/gateway/DiscordCreatedInvite;)Ldev/kord/core/cache/data/InviteCreateData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/InviteData {
	public static final field Companion Ldev/kord/core/cache/data/InviteData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun component8 ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;)Ldev/kord/core/cache/data/InviteData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/InviteData;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalInt;Ldev/kord/common/entity/optional/OptionalInt;ILjava/lang/Object;)Ldev/kord/core/cache/data/InviteData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApproximateMemberCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getApproximatePresenceCount ()Ldev/kord/common/entity/optional/OptionalInt;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getCode ()Ljava/lang/String;
	public final fun getGuild ()Ldev/kord/common/entity/optional/Optional;
	public final fun getInviterId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getTargetUserId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getTargetUserType ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/InviteData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/InviteData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/InviteData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/InviteData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/InviteData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordInvite;)Ldev/kord/core/cache/data/InviteData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/InviteDeleteData {
	public static final field Companion Ldev/kord/core/cache/data/InviteDeleteData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/core/cache/data/InviteDeleteData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/InviteDeleteData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/cache/data/InviteDeleteData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getCode ()Ljava/lang/String;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/InviteDeleteData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/InviteDeleteData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/InviteDeleteData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/InviteDeleteData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/InviteDeleteData$Companion {
	public final fun from (Ldev/kord/gateway/DiscordDeletedInvite;)Ldev/kord/core/cache/data/InviteDeleteData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MemberData {
	public static final field Companion Ldev/kord/core/cache/data/MemberData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;)Ldev/kord/core/cache/data/MemberData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/MemberData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalBoolean;ILjava/lang/Object;)Ldev/kord/core/cache/data/MemberData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getJoinedAt ()Ljava/lang/String;
	public final fun getNick ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPending ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPremiumSince ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoles ()Ljava/util/List;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/MemberData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/MemberData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/MemberData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/MemberData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MemberData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordUpdatedGuildMember;)Ldev/kord/core/cache/data/MemberData;
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordAddedGuildMember;)Ldev/kord/core/cache/data/MemberData;
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordGuildMember;)Ldev/kord/core/cache/data/MemberData;
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordInteractionGuildMember;)Ldev/kord/core/cache/data/MemberData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MemberDataKt {
	public static final fun toData (Ldev/kord/common/entity/DiscordGuildMember;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/MemberData;
	public static final fun toData (Ldev/kord/common/entity/DiscordInteractionGuildMember;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/MemberData;
}

public final class dev/kord/core/cache/data/MembersChunkData {
	public static final field Companion Ldev/kord/core/cache/data/MembersChunkData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/util/Set;
	public final fun component4 ()I
	public final fun component5 ()I
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/MembersChunkData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/MembersChunkData;Ldev/kord/common/entity/Snowflake;Ljava/util/Set;Ljava/util/Set;IILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/MembersChunkData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChunkCount ()I
	public final fun getChunkIndex ()I
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/Set;
	public final fun getNonce ()Ldev/kord/common/entity/optional/Optional;
	public final fun getNotFound ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPresences ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUsers ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/MembersChunkData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/MembersChunkData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/MembersChunkData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/MembersChunkData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MembersChunkData$Companion {
	public final fun from (Ldev/kord/gateway/GuildMembersChunkData;)Ldev/kord/core/cache/data/MembersChunkData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MessageData {
	public static final field Companion Ldev/kord/core/cache/data/MessageData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ljava/util/List;
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()Ljava/util/List;
	public final fun component15 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component16 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component17 ()Z
	public final fun component18 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component19 ()Ldev/kord/common/entity/MessageType;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component20 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component21 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component22 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component23 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component24 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component25 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component26 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component27 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component28 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/kord/core/cache/data/UserData;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/MessageData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/MessageData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ZLdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/MessageType;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/MessageData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivity ()Ldev/kord/common/entity/optional/Optional;
	public final fun getApplication ()Ldev/kord/common/entity/optional/Optional;
	public final fun getApplicationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getAttachments ()Ljava/util/List;
	public final fun getAuthor ()Ldev/kord/core/cache/data/UserData;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getComponents ()Ldev/kord/common/entity/optional/Optional;
	public final fun getContent ()Ljava/lang/String;
	public final fun getEditedTimestamp ()Ljava/lang/String;
	public final fun getEmbeds ()Ljava/util/List;
	public final fun getFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getInteraction ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentionEveryone ()Z
	public final fun getMentionRoles ()Ljava/util/List;
	public final fun getMentionedChannels ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMentions ()Ljava/util/List;
	public final fun getMessageReference ()Ldev/kord/common/entity/optional/Optional;
	public final fun getNonce ()Ldev/kord/common/entity/optional/Optional;
	public final fun getPinned ()Z
	public final fun getReactions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getReferencedMessage ()Ldev/kord/common/entity/optional/Optional;
	public final fun getStickers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamp ()Ljava/lang/String;
	public final fun getTts ()Z
	public final fun getType ()Ldev/kord/common/entity/MessageType;
	public final fun getWebhookId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public final fun plus (Ldev/kord/common/entity/DiscordPartialMessage;)Ldev/kord/core/cache/data/MessageData;
	public final fun plus (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/MessageReactionAddData;)Ldev/kord/core/cache/data/MessageData;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/MessageData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/MessageData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/MessageData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/MessageData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MessageData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordMessage;)Ldev/kord/core/cache/data/MessageData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MessageDataKt {
	public static final fun toData (Ldev/kord/common/entity/DiscordMessage;)Ldev/kord/core/cache/data/MessageData;
}

public final class dev/kord/core/cache/data/MessageReferenceData {
	public static final field Companion Ldev/kord/core/cache/data/MessageReferenceData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;)Ldev/kord/core/cache/data/MessageReferenceData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/MessageReferenceData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ILjava/lang/Object;)Ldev/kord/core/cache/data/MessageReferenceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/MessageReferenceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/MessageReferenceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/MessageReferenceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/MessageReferenceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MessageReferenceData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordMessageReference;)Ldev/kord/core/cache/data/MessageReferenceData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MessageStickerData {
	public static final field Companion Ldev/kord/core/cache/data/MessageStickerData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component8 ()Ldev/kord/common/entity/MessageStickerType;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;)Ldev/kord/core/cache/data/MessageStickerData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/MessageStickerData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/MessageStickerType;ILjava/lang/Object;)Ldev/kord/core/cache/data/MessageStickerData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAsset ()Ljava/lang/String;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFormatType ()Ldev/kord/common/entity/MessageStickerType;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getPackId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPreviewAsset ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/MessageStickerData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/MessageStickerData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/MessageStickerData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/MessageStickerData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/MessageStickerData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordMessageSticker;)Ldev/kord/core/cache/data/MessageStickerData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/NotSerializable : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/NotSerializable;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Void;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/kord/core/cache/data/OptionData {
	public static final field Companion Ldev/kord/core/cache/data/OptionData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/OptionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/OptionData;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/OptionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getSubCommands ()Ldev/kord/common/entity/optional/Optional;
	public final fun getValue ()Ldev/kord/common/entity/optional/Optional;
	public final fun getValues ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/OptionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/OptionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/OptionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/OptionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/OptionData$Companion {
	public final fun from (Ldev/kord/common/entity/Option;)Ldev/kord/core/cache/data/OptionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/PartialGuildData {
	public static final field Companion Ldev/kord/core/cache/data/PartialGuildData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Ljava/util/List;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getFeatures ()Ljava/util/List;
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getOwner ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getPermissions ()Ldev/kord/common/entity/optional/Optional;
	public final fun getWelcomeScreen ()Ldev/kord/common/entity/optional/Optional;
}

public final class dev/kord/core/cache/data/PartialGuildData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/PartialGuildData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/PartialGuildData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/PartialGuildData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/PartialGuildData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordPartialGuild;)Ldev/kord/core/cache/data/PartialGuildData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/PermissionOverwriteData {
	public static final field Companion Ldev/kord/core/cache/data/PermissionOverwriteData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/OverwriteType;
	public final fun component3 ()Ldev/kord/common/entity/Permissions;
	public final fun component4 ()Ldev/kord/common/entity/Permissions;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;)Ldev/kord/core/cache/data/PermissionOverwriteData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/PermissionOverwriteData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/OverwriteType;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;ILjava/lang/Object;)Ldev/kord/core/cache/data/PermissionOverwriteData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowed ()Ldev/kord/common/entity/Permissions;
	public final fun getDenied ()Ldev/kord/common/entity/Permissions;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getType ()Ldev/kord/common/entity/OverwriteType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/PermissionOverwriteData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/PermissionOverwriteData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/PermissionOverwriteData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/PermissionOverwriteData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/PermissionOverwriteData$Companion {
	public final fun from (Ldev/kord/common/entity/Overwrite;)Ldev/kord/core/cache/data/PermissionOverwriteData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/PresenceData {
	public static final field Companion Ldev/kord/core/cache/data/PresenceData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/core/cache/data/ClientStatusData;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/core/cache/data/ClientStatusData;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/PresenceStatus;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ldev/kord/core/cache/data/ClientStatusData;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/core/cache/data/ClientStatusData;)Ldev/kord/core/cache/data/PresenceData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/PresenceData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/PresenceStatus;Ljava/util/List;Ldev/kord/core/cache/data/ClientStatusData;ILjava/lang/Object;)Ldev/kord/core/cache/data/PresenceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActivities ()Ljava/util/List;
	public final fun getClientStatus ()Ldev/kord/core/cache/data/ClientStatusData;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getStatus ()Ldev/kord/common/entity/PresenceStatus;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/PresenceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/PresenceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/PresenceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/PresenceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/PresenceData$Companion {
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordPresenceUpdate;)Ldev/kord/core/cache/data/PresenceData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/PresenceDataKt {
	public static final fun getId (Ldev/kord/core/cache/data/PresenceData;)Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ReactionData {
	public static final field Companion Ldev/kord/core/cache/data/ReactionData$Companion;
	public synthetic fun <init> (IIZLdev/kord/common/entity/Snowflake;Ljava/lang/String;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (IZLdev/kord/common/entity/Snowflake;Ljava/lang/String;Z)V
	public synthetic fun <init> (IZLdev/kord/common/entity/Snowflake;Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()Z
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Z
	public final fun copy (IZLdev/kord/common/entity/Snowflake;Ljava/lang/String;Z)Ldev/kord/core/cache/data/ReactionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ReactionData;IZLdev/kord/common/entity/Snowflake;Ljava/lang/String;ZILjava/lang/Object;)Ldev/kord/core/cache/data/ReactionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()I
	public final fun getEmojiAnimated ()Z
	public final fun getEmojiId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public final fun getMe ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ReactionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ReactionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ReactionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ReactionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ReactionData$Companion {
	public final fun from (IZLdev/kord/common/entity/DiscordPartialEmoji;)Ldev/kord/core/cache/data/ReactionData;
	public final fun from (Ldev/kord/common/entity/Reaction;)Ldev/kord/core/cache/data/ReactionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ReactionRemoveEmojiData {
	public static final field Companion Ldev/kord/core/cache/data/ReactionRemoveEmojiData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/RemovedReactionData;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/RemovedReactionData;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/core/cache/data/RemovedReactionData;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/RemovedReactionData;)Ldev/kord/core/cache/data/ReactionRemoveEmojiData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ReactionRemoveEmojiData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/RemovedReactionData;ILjava/lang/Object;)Ldev/kord/core/cache/data/ReactionRemoveEmojiData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmoji ()Ldev/kord/core/cache/data/RemovedReactionData;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ReactionRemoveEmojiData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ReactionRemoveEmojiData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ReactionRemoveEmojiData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ReactionRemoveEmojiData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ReactionRemoveEmojiData$Companion {
	public final fun from (Ldev/kord/gateway/DiscordRemovedEmoji;)Ldev/kord/core/cache/data/ReactionRemoveEmojiData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RegionData {
	public static final field Companion Ldev/kord/core/cache/data/RegionData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZ)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun copy (Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZ)Ldev/kord/core/cache/data/RegionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/RegionData;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZILjava/lang/Object;)Ldev/kord/core/cache/data/RegionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustom ()Z
	public final fun getDeprecated ()Z
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptimal ()Z
	public final fun getVip ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/RegionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/RegionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/RegionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/RegionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RegionData$Companion {
	public final fun from (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/DiscordVoiceRegion;)Ldev/kord/core/cache/data/RegionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RemovedReactionData {
	public static final field Companion Ldev/kord/core/cache/data/RemovedReactionData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/core/cache/data/RemovedReactionData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/RemovedReactionData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/cache/data/RemovedReactionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/RemovedReactionData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/RemovedReactionData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/RemovedReactionData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/RemovedReactionData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RemovedReactionData$Companion {
	public final fun from (Ldev/kord/gateway/DiscordRemovedReactionEmoji;)Ldev/kord/core/cache/data/RemovedReactionData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ResolvedObjectsData {
	public static final field Companion Ldev/kord/core/cache/data/ResolvedObjectsData$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILdev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component4 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/ResolvedObjectsData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/ResolvedObjectsData;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/ResolvedObjectsData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannels ()Ldev/kord/common/entity/optional/Optional;
	public final fun getMembers ()Ldev/kord/common/entity/optional/Optional;
	public final fun getRoles ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUsers ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/ResolvedObjectsData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/ResolvedObjectsData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/ResolvedObjectsData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/ResolvedObjectsData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/ResolvedObjectsData$Companion {
	public final fun from (Ldev/kord/common/entity/ResolvedObjects;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/ResolvedObjectsData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RoleData {
	public static final field Companion Ldev/kord/core/cache/data/RoleData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun component5 ()Z
	public final fun component6 ()I
	public final fun component7 ()Ldev/kord/common/entity/Permissions;
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/RoleData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/RoleData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;IZILdev/kord/common/entity/Permissions;ZZLdev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/RoleData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()I
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getHoisted ()Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getManaged ()Z
	public final fun getMentionable ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getPosition ()I
	public final fun getTags ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/RoleData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/RoleData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/RoleData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/RoleData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RoleData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordGuildRole;)Ldev/kord/core/cache/data/RoleData;
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordRole;)Ldev/kord/core/cache/data/RoleData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RoleTagsData {
	public static final field Companion Ldev/kord/core/cache/data/RoleTagsData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ZLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Z)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Z
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Z)Ldev/kord/core/cache/data/RoleTagsData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/RoleTagsData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;ZILjava/lang/Object;)Ldev/kord/core/cache/data/RoleTagsData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBotId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getIntegrationId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getPremiumSubscriber ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/RoleTagsData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/RoleTagsData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/RoleTagsData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/RoleTagsData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/RoleTagsData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordRoleTags;)Ldev/kord/core/cache/data/RoleTagsData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/StageInstanceData {
	public static final field Companion Ldev/kord/core/cache/data/StageInstanceData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/core/cache/data/StageInstanceData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/StageInstanceData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/cache/data/StageInstanceData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getTopic ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/StageInstanceData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/StageInstanceData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/StageInstanceData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/StageInstanceData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/StageInstanceData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordStageInstance;)Ldev/kord/core/cache/data/StageInstanceData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/TeamData {
	public static final field Companion Ldev/kord/core/cache/data/TeamData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/kord/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/kord/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/TeamData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/TeamData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/util/List;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/core/cache/data/TeamData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIcon ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMembers ()Ljava/util/List;
	public final fun getOwnerUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/TeamData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/TeamData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/TeamData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/TeamData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/TeamData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordTeam;)Ldev/kord/core/cache/data/TeamData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/TeamMemberData {
	public static final field Companion Ldev/kord/core/cache/data/TeamMemberData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/TeamMembershipState;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/TeamMembershipState;Ljava/util/List;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)V
	public final fun getMembershipState ()Ldev/kord/common/entity/TeamMembershipState;
	public final fun getPermissions ()Ljava/util/List;
	public final fun getTeamId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
}

public final class dev/kord/core/cache/data/TeamMemberData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/TeamMemberData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/TeamMemberData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/TeamMemberData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/TeamMemberData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordTeamMember;)Ldev/kord/core/cache/data/TeamMemberData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/TemplateData {
	public static final field Companion Ldev/kord/core/cache/data/TemplateData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/PartialGuildData;Ljava/lang/Boolean;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/PartialGuildData;Ljava/lang/Boolean;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ldev/kord/core/cache/data/PartialGuildData;
	public final fun component11 ()Ljava/lang/Boolean;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()I
	public final fun component5 ()Ldev/kord/common/entity/Snowflake;
	public final fun component6 ()Ldev/kord/core/cache/data/UserData;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/PartialGuildData;Ljava/lang/Boolean;)Ldev/kord/core/cache/data/TemplateData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/TemplateData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILdev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/UserData;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/PartialGuildData;Ljava/lang/Boolean;ILjava/lang/Object;)Ldev/kord/core/cache/data/TemplateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Ljava/lang/String;
	public final fun getCreator ()Ldev/kord/core/cache/data/UserData;
	public final fun getCreatorId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getSerializedSourceGuild ()Ldev/kord/core/cache/data/PartialGuildData;
	public final fun getSourceGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUpdatedAt ()Ljava/lang/String;
	public final fun getUsageCount ()I
	public fun hashCode ()I
	public final fun isDirty ()Ljava/lang/Boolean;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/TemplateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/TemplateData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/TemplateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/TemplateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/TemplateData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordTemplate;)Ldev/kord/core/cache/data/TemplateData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/TemplateDataKt {
	public static final fun toData (Ldev/kord/common/entity/DiscordTemplate;)Ldev/kord/core/cache/data/TemplateData;
}

public final class dev/kord/core/cache/data/UserData {
	public static final field Companion Ldev/kord/core/cache/data/UserData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component6 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/cache/data/UserData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/UserData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/OptionalBoolean;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/cache/data/UserData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getBot ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getDiscriminator ()Ljava/lang/String;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPublicFlags ()Ldev/kord/common/entity/optional/Optional;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/UserData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/UserData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/UserData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/UserData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/UserData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordOptionallyMemberUser;)Ldev/kord/core/cache/data/UserData;
	public final fun from (Ldev/kord/common/entity/DiscordUser;)Ldev/kord/core/cache/data/UserData;
	public final fun from (Ldev/kord/gateway/DiscordInviteUser;)Ldev/kord/core/cache/data/UserData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/UserDataKt {
	public static final fun toData (Ldev/kord/common/entity/DiscordUser;)Ldev/kord/core/cache/data/UserData;
}

public final class dev/kord/core/cache/data/VoiceStateData {
	public static final field Companion Ldev/kord/core/cache/data/VoiceStateData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLjava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLjava/lang/String;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component10 ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun component11 ()Z
	public final fun component12 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLjava/lang/String;)Ldev/kord/core/cache/data/VoiceStateData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/VoiceStateData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;ZZZZLdev/kord/common/entity/optional/OptionalBoolean;ZLjava/lang/String;ILjava/lang/Object;)Ldev/kord/core/cache/data/VoiceStateData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDeaf ()Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMemberId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMute ()Z
	public final fun getRequestToSpeakTimestamp ()Ljava/lang/String;
	public final fun getSelfDeaf ()Z
	public final fun getSelfMute ()Z
	public final fun getSelfStream ()Ldev/kord/common/entity/optional/OptionalBoolean;
	public final fun getSessionId ()Ljava/lang/String;
	public final fun getSuppress ()Z
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/VoiceStateData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/VoiceStateData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/VoiceStateData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/VoiceStateData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/VoiceStateData$Companion {
	public final fun from (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordVoiceState;)Ldev/kord/core/cache/data/VoiceStateData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/VoiceStateDataKt {
	public static final fun getId (Ldev/kord/core/cache/data/VoiceStateData;)Ljava/lang/String;
}

public final class dev/kord/core/cache/data/WebhookData {
	public static final field Companion Ldev/kord/core/cache/data/WebhookData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/WebhookType;
	public final fun component3 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component4 ()Ldev/kord/common/entity/Snowflake;
	public final fun component5 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ldev/kord/common/entity/optional/Optional;
	public final fun component9 ()Ldev/kord/common/entity/Snowflake;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/cache/data/WebhookData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/WebhookData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/WebhookType;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ljava/lang/String;Ljava/lang/String;Ldev/kord/common/entity/optional/Optional;Ldev/kord/common/entity/Snowflake;ILjava/lang/Object;)Ldev/kord/core/cache/data/WebhookData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getAvatar ()Ljava/lang/String;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public final fun getToken ()Ldev/kord/common/entity/optional/Optional;
	public final fun getType ()Ldev/kord/common/entity/WebhookType;
	public final fun getUserId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/WebhookData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/WebhookData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/WebhookData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/WebhookData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/WebhookData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordWebhook;)Ldev/kord/core/cache/data/WebhookData;
	public final fun getDescription ()Ldev/kord/cache/api/data/DataDescription;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/WelcomeScreenChannelData {
	public static final field Companion Ldev/kord/core/cache/data/WelcomeScreenChannelData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/core/cache/data/WelcomeScreenChannelData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/WelcomeScreenChannelData;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/cache/data/WelcomeScreenChannelData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEmojiId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/WelcomeScreenChannelData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/WelcomeScreenChannelData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/WelcomeScreenChannelData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/WelcomeScreenChannelData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/WelcomeScreenChannelData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordWelcomeScreenChannel;)Ldev/kord/core/cache/data/WelcomeScreenChannelData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/WelcomeScreenData {
	public static final field Companion Ldev/kord/core/cache/data/WelcomeScreenData$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Ldev/kord/core/cache/data/WelcomeScreenData;
	public static synthetic fun copy$default (Ldev/kord/core/cache/data/WelcomeScreenData;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/core/cache/data/WelcomeScreenData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getWelcomeChannels ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/cache/data/WelcomeScreenData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/cache/data/WelcomeScreenData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/cache/data/WelcomeScreenData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/cache/data/WelcomeScreenData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/cache/data/WelcomeScreenData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordWelcomeScreen;)Ldev/kord/core/cache/data/WelcomeScreenData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/entity/Activity {
	public fun <init> (Ldev/kord/core/cache/data/ActivityData;)V
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getAssets ()Ldev/kord/core/entity/Activity$Assets;
	public final fun getButtons ()Ljava/util/List;
	public final fun getData ()Ldev/kord/core/cache/data/ActivityData;
	public final fun getDetails ()Ljava/lang/String;
	public final fun getEmoji ()Ldev/kord/common/entity/DiscordActivityEmoji;
	public final fun getEnd ()Lkotlinx/datetime/Instant;
	public final fun getFlags ()Ldev/kord/common/entity/ActivityFlags;
	public final fun getName ()Ljava/lang/String;
	public final fun getParty ()Ldev/kord/core/entity/Activity$Party;
	public final fun getSecrets ()Ldev/kord/core/entity/Activity$Secrets;
	public final fun getStart ()Lkotlinx/datetime/Instant;
	public final fun getState ()Ljava/lang/String;
	public final fun getStop ()Lkotlinx/datetime/Instant;
	public final fun getType ()Ldev/kord/common/entity/ActivityType;
	public final fun getUrl ()Ljava/lang/String;
	public final fun isInstance ()Ljava/lang/Boolean;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Activity$Assets {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ldev/kord/core/entity/Activity$Assets;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Activity$Assets;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/entity/Activity$Assets;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLargeImage ()Ljava/lang/String;
	public final fun getLargeText ()Ljava/lang/String;
	public final fun getSmallImage ()Ljava/lang/String;
	public final fun getSmallText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Activity$Party {
	public fun <init> (Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun component3 ()Ljava/lang/Integer;
	public final fun copy (Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ldev/kord/core/entity/Activity$Party;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Activity$Party;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;ILjava/lang/Object;)Ldev/kord/core/entity/Activity$Party;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCurrentSize ()Ljava/lang/Integer;
	public final fun getId ()Ljava/lang/String;
	public final fun getMaxSize ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Activity$Secrets {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ldev/kord/core/entity/Activity$Secrets;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Activity$Secrets;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/entity/Activity$Secrets;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getJoin ()Ljava/lang/String;
	public final fun getMatch ()Ljava/lang/String;
	public final fun getSpectate ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/ApplicationInfo : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationInfoData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ApplicationInfoData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCoverImageHash ()Ljava/lang/String;
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationInfoData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getOwner ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getOwner (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOwnerId ()Ldev/kord/common/entity/Snowflake;
	public final fun getOwnerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPrimarySkuId ()Ldev/kord/common/entity/Snowflake;
	public final fun getRequireCodeGrant ()Z
	public final fun getRpcOrigins ()Ljava/util/List;
	public final fun getSlug ()Ljava/lang/String;
	public final fun getSummary ()Ljava/lang/String;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getTeam ()Ldev/kord/core/entity/Team;
	public final fun getTeamId ()Ldev/kord/common/entity/Snowflake;
	public final fun getVerifyKey ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isPublic ()Z
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/ApplicationInfo;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/Attachment : dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/cache/data/AttachmentData;Ldev/kord/core/Kord;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/kord/core/cache/data/AttachmentData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/AttachmentData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Attachment;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Attachment;Ldev/kord/core/cache/data/AttachmentData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Attachment;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/AttachmentData;
	public final fun getFilename ()Ljava/lang/String;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getSize ()I
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public final fun isImage ()Z
	public final fun isSpoiler ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/AuditLog : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/common/entity/DiscordAuditLog;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;)V
	public final fun getData ()Ldev/kord/common/entity/DiscordAuditLog;
	public final fun getEntries ()Ljava/util/List;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getIntegrations ()Ljava/util/List;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getUsers ()Ljava/util/List;
	public final fun getWebhooks ()Ljava/util/List;
}

public final class dev/kord/core/entity/AuditLogEntry : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/common/entity/DiscordAuditLogEntry;Ldev/kord/core/Kord;)V
	public final fun get (Ldev/kord/common/entity/AuditLogChangeKey;)Ldev/kord/common/entity/AuditLogChange;
	public final fun getActionType ()Ldev/kord/common/entity/AuditLogEvent;
	public final fun getChanges ()Ljava/util/List;
	public final fun getData ()Ldev/kord/common/entity/DiscordAuditLogEntry;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getOptions ()Ldev/kord/common/entity/AuditLogEntryOptionalInfo;
	public final fun getReason ()Ljava/lang/String;
	public final fun getTargetId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
}

public final class dev/kord/core/entity/Ban : dev/kord/core/KordObject, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/BanData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/BanData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getData ()Ldev/kord/core/cache/data/BanData;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getReason ()Ljava/lang/String;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Ban;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/ClientStatus {
	public fun <init> (Ldev/kord/core/cache/data/ClientStatusData;)V
	public final fun getData ()Ldev/kord/core/cache/data/ClientStatusData;
	public final fun getDesktop ()Ldev/kord/core/entity/ClientStatus$Client$Desktop;
	public final fun getMobile ()Ldev/kord/core/entity/ClientStatus$Client$Mobile;
	public final fun getWeb ()Ldev/kord/core/entity/ClientStatus$Client$Web;
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/core/entity/ClientStatus$Client {
	public synthetic fun <init> (Ldev/kord/common/entity/PresenceStatus;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getStatus ()Ldev/kord/common/entity/PresenceStatus;
}

public final class dev/kord/core/entity/ClientStatus$Client$Desktop : dev/kord/core/entity/ClientStatus$Client {
	public fun <init> (Ldev/kord/common/entity/PresenceStatus;)V
}

public final class dev/kord/core/entity/ClientStatus$Client$Mobile : dev/kord/core/entity/ClientStatus$Client {
	public fun <init> (Ldev/kord/common/entity/PresenceStatus;)V
}

public final class dev/kord/core/entity/ClientStatus$Client$Web : dev/kord/core/entity/ClientStatus$Client {
	public fun <init> (Ldev/kord/common/entity/PresenceStatus;)V
}

public final class dev/kord/core/entity/Embed : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedData;Ldev/kord/core/Kord;)V
	public final fun apply (Ldev/kord/rest/builder/message/EmbedBuilder;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed;Ldev/kord/core/cache/data/EmbedData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthor ()Ldev/kord/core/entity/Embed$Author;
	public final fun getColor ()Ldev/kord/common/Color;
	public final fun getData ()Ldev/kord/core/cache/data/EmbedData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFields ()Ljava/util/List;
	public final fun getFooter ()Ldev/kord/core/entity/Embed$Footer;
	public final fun getImage ()Ldev/kord/core/entity/Embed$Image;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getProvider ()Ldev/kord/core/entity/Embed$Provider;
	public final fun getThumbnail ()Ldev/kord/core/entity/Embed$Thumbnail;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getTitle ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/EmbedType;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getVideo ()Ldev/kord/core/entity/Embed$Video;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Embed$Author : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedAuthorData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedAuthorData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedAuthorData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed$Author;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed$Author;Ldev/kord/core/cache/data/EmbedAuthorData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed$Author;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmbedAuthorData;
	public final fun getIconUrl ()Ljava/lang/String;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getProxyIconUrl ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Embed$Field : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedFieldData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedFieldData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedFieldData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed$Field;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed$Field;Ldev/kord/core/cache/data/EmbedFieldData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed$Field;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmbedFieldData;
	public final fun getInline ()Ljava/lang/Boolean;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Embed$Footer : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedFooterData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedFooterData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedFooterData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed$Footer;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed$Footer;Ldev/kord/core/cache/data/EmbedFooterData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed$Footer;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmbedFooterData;
	public final fun getIconUrl ()Ljava/lang/String;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getProxyIconUrl ()Ljava/lang/String;
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Embed$Image : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedImageData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedImageData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedImageData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed$Image;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed$Image;Ldev/kord/core/cache/data/EmbedImageData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed$Image;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmbedImageData;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Embed$Provider : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedProviderData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedProviderData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedProviderData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed$Provider;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed$Provider;Ldev/kord/core/cache/data/EmbedProviderData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed$Provider;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmbedProviderData;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Embed$Thumbnail : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedThumbnailData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedThumbnailData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedThumbnailData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed$Thumbnail;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed$Thumbnail;Ldev/kord/core/cache/data/EmbedThumbnailData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed$Thumbnail;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmbedThumbnailData;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getProxyUrl ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Embed$Video : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/EmbedVideoData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/EmbedVideoData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/EmbedVideoData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/Embed$Video;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Embed$Video;Ldev/kord/core/cache/data/EmbedVideoData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/Embed$Video;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmbedVideoData;
	public final fun getHeight ()Ljava/lang/Integer;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getWidth ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/kord/core/entity/Entity : java/lang/Comparable {
	public static final field Companion Ldev/kord/core/entity/Entity$Companion;
	public abstract fun compareTo (Ldev/kord/core/entity/Entity;)I
	public abstract fun getId ()Ldev/kord/common/entity/Snowflake;
}

public final class dev/kord/core/entity/Entity$Companion {
	public final fun getComparator ()Ljava/util/Comparator;
}

public final class dev/kord/core/entity/Entity$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/entity/Entity;Ldev/kord/core/entity/Entity;)I
}

public final class dev/kord/core/entity/Guild : dev/kord/core/behavior/GuildBehavior {
	public fun <init> (Ldev/kord/core/cache/data/GuildData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/GuildData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editSelfNickname (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editWelcomeScreen (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAfkChannel ()Ldev/kord/core/behavior/channel/VoiceChannelBehavior;
	public final fun getAfkChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAfkChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getAfkTimeout ()I
	public fun getApplicationCommand (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getApproximateMemberCount ()Ljava/lang/Integer;
	public final fun getApproximatePresenceCount ()Ljava/lang/Integer;
	public fun getBan (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getBanOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBanner (Ldev/kord/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBannerHash ()Ljava/lang/String;
	public final fun getBannerUrl (Ldev/kord/rest/Image$Format;)Ljava/lang/String;
	public fun getBans ()Lkotlinx/coroutines/flow/Flow;
	public fun getChannel (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelBehaviors ()Ljava/util/Set;
	public final fun getChannelIds ()Ljava/util/Set;
	public fun getChannelOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public fun getCommands ()Lkotlinx/coroutines/flow/Flow;
	public final fun getContentFilter ()Ldev/kord/common/entity/ExplicitContentFilter;
	public final fun getData ()Ldev/kord/core/cache/data/GuildData;
	public final fun getDefaultMessageNotificationLevel ()Ldev/kord/common/entity/DefaultMessageNotificationLevel;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash (Ldev/kord/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDiscoverySplashHash ()Ljava/lang/String;
	public final fun getDiscoverySplashUrl (Ldev/kord/rest/Image$Format;)Ljava/lang/String;
	public final fun getEmbedChannel ()Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public final fun getEmbedChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getEmbedChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmoji (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getEmojiIds ()Ljava/util/Set;
	public final fun getEmojiOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojis ()Lkotlinx/coroutines/flow/Flow;
	public final fun getEveryoneRole ()Ldev/kord/core/behavior/RoleBehavior;
	public final fun getEveryoneRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getEveryoneRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getFeatures ()Ljava/util/Set;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getIcon (Ldev/kord/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIconHash ()Ljava/lang/String;
	public final fun getIconUrl (Ldev/kord/rest/Image$Format;)Ljava/lang/String;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getIntegrations ()Lkotlinx/coroutines/flow/Flow;
	public fun getInvite (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getInviteOrNull (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public final fun getJoinedTime ()Lkotlinx/datetime/Instant;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMaxMembers ()Ljava/lang/Integer;
	public final fun getMaxPresences ()I
	public final fun getMaxVideoChannelUsers ()Ljava/lang/Integer;
	public fun getMember (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMemberCount ()Ljava/lang/Integer;
	public fun getMemberOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMembers (Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMfaLevel ()Ldev/kord/common/entity/MFALevel;
	public final fun getName ()Ljava/lang/String;
	public final fun getNsfw ()Z
	public final fun getOwner ()Ldev/kord/core/behavior/MemberBehavior;
	public final fun getOwner (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOwnerId ()Ldev/kord/common/entity/Snowflake;
	public final fun getOwnerOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getPreferredLocale ()Ljava/util/Locale;
	public final fun getPremiumSubscriptionCount ()Ljava/lang/Integer;
	public final fun getPremiumTier ()Ldev/kord/common/entity/PremiumTier;
	public fun getPresences ()Lkotlinx/coroutines/flow/Flow;
	public fun getPreview (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPreviewOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPruneCount (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPublicUpdatesChannel ()Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public final fun getPublicUpdatesChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPublicUpdatesChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getRegion (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRegionId ()Ljava/lang/String;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoleBehaviors ()Ljava/util/Set;
	public final fun getRoleIds ()Ljava/util/Set;
	public fun getRoleOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public final fun getRulesChannel ()Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public final fun getRulesChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRulesChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSplash (Ldev/kord/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSplashHash ()Ljava/lang/String;
	public final fun getSplashUrl (Ldev/kord/rest/Image$Format;)Ljava/lang/String;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getSystemChannel ()Ldev/kord/core/behavior/channel/TextChannelBehavior;
	public final fun getSystemChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSystemChannelFlags ()Ldev/kord/common/entity/SystemChannelFlags;
	public final fun getSystemChannelId ()Ldev/kord/common/entity/Snowflake;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates ()Lkotlinx/coroutines/flow/Flow;
	public final fun getVanityCode ()Ljava/lang/String;
	public final fun getVanityUrl ()Ljava/lang/String;
	public fun getVanityUrl (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getVerificationLevel ()Ldev/kord/common/entity/VerificationLevel;
	public fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public final fun getWelcomeScreen ()Ldev/kord/core/entity/WelcomeScreen;
	public fun getWelcomeScreen (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWelcomeScreenOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWidget (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getWidgetChannel ()Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public final fun getWidgetChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getWidgetChannelId ()Ldev/kord/common/entity/Snowflake;
	public fun getWidgetOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public final fun isLarge ()Ljava/lang/Boolean;
	public final fun isOwner ()Z
	public final fun isWidgetEnabled ()Z
	public fun kick (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun modifySelfNickname (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun prune (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun requestMembers (Ldev/kord/gateway/RequestGuildMembers;)Lkotlinx/coroutines/flow/Flow;
	public fun toString ()Ljava/lang/String;
	public fun unban (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/GuildBehavior;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Guild;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/GuildEmoji : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/EmojiData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/EmojiData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/kord/core/entity/GuildEmoji;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun edit (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/EmojiData;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember ()Ldev/kord/core/behavior/MemberBehavior;
	public final fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMention ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getRequiresColons ()Z
	public final fun getRoleBehaviors ()Ljava/util/Set;
	public final fun getRoleIds ()Ljava/util/Set;
	public final fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public final fun isAnimated ()Z
	public final fun isAvailable ()Z
	public final fun isManaged ()Z
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/GuildEmoji;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/GuildPreview : dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/cache/data/GuildPreviewData;Ldev/kord/core/Kord;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getApproximateMemberCount ()I
	public final fun getApproximatePresenceCount ()I
	public final fun getData ()Ldev/kord/core/cache/data/GuildPreviewData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDiscoverySplash ()Ljava/lang/String;
	public final fun getEmojis ()Ljava/util/Set;
	public final fun getFeatures ()Ljava/util/Set;
	public final fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getSplash ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/GuildWidget : dev/kord/core/KordObject, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/GuildWidgetData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/GuildWidgetData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun edit (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannel ()Ldev/kord/core/behavior/channel/ChannelBehavior;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getData ()Ldev/kord/core/cache/data/GuildWidgetData;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun isEnabled ()Z
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/GuildWidget;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/Integration : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/IntegrationData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/IntegrationData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/IntegrationData;
	public final fun getEnablesEmoticons ()Z
	public final fun getExpireBehavior ()Ldev/kord/common/entity/IntegrationExpireBehavior;
	public final fun getExpireGracePeriod-UwyO8pc ()J
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getRole ()Ldev/kord/core/behavior/RoleBehavior;
	public final fun getRole (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoleId ()Ldev/kord/common/entity/Snowflake;
	public final fun getRoleOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getSyncedAt ()Lkotlinx/datetime/Instant;
	public final fun getType ()Ljava/lang/String;
	public final fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public final fun isEnabled ()Z
	public final fun isSyncing ()Z
	public final fun sync (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Integration;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/IntegrationKt {
	public static final fun edit (Ldev/kord/core/entity/Integration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/entity/Invite : dev/kord/core/KordObject, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/InviteData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/InviteData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/core/cache/data/InviteData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun component3 ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun copy (Ldev/kord/core/cache/data/InviteData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/entity/Invite;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Invite;Ldev/kord/core/cache/data/InviteData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/kord/core/entity/Invite;
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/kord/core/entity/Invite;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApproximateMemberCount ()Ljava/lang/Integer;
	public final fun getApproximatePresenceCount ()Ljava/lang/Integer;
	public final fun getChannel ()Ldev/kord/core/behavior/channel/ChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCode ()Ljava/lang/String;
	public final fun getData ()Ldev/kord/core/cache/data/InviteData;
	public final fun getInviter ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getInviter (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviterId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getPartialGuild ()Ldev/kord/core/entity/PartialGuild;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getTargetUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getTargetUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getTargetUserId ()Ldev/kord/common/entity/Snowflake;
	public final fun getTargetUserType ()Ldev/kord/common/entity/TargetUserType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Invite;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public abstract interface class dev/kord/core/entity/KordEntity : dev/kord/core/KordObject, dev/kord/core/entity/Entity {
}

public final class dev/kord/core/entity/KordEntity$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/entity/KordEntity;Ldev/kord/core/entity/Entity;)I
}

public final class dev/kord/core/entity/Member : dev/kord/core/entity/User, dev/kord/core/behavior/MemberBehavior {
	public fun <init> (Ldev/kord/core/cache/data/MemberData;Ldev/kord/core/cache/data/UserData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/MemberData;Ldev/kord/core/cache/data/UserData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addRole (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDisplayName ()Ljava/lang/String;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getJoinedAt ()Lkotlinx/datetime/Instant;
	public final fun getMemberData ()Ldev/kord/core/cache/data/MemberData;
	public final fun getNickname ()Ljava/lang/String;
	public fun getNicknameMention ()Ljava/lang/String;
	public final fun getPermissions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPremiumSince ()Lkotlinx/datetime/Instant;
	public fun getPresence (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPresenceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoleBehaviors ()Ljava/util/Set;
	public final fun getRoleIds ()Ljava/util/Set;
	public final fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public fun getVoiceState (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getVoiceStateOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun hashCode ()I
	public final fun isOwner (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun isPending ()Z
	public fun kick (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun removeRole (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MemberBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/UserBehavior;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Member;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/User;
}

public final class dev/kord/core/entity/Message : dev/kord/core/behavior/MessageBehavior {
	public fun <init> (Ldev/kord/core/cache/data/MessageData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/MessageData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addReaction (Ldev/kord/core/entity/GuildEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun addReaction (Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteAllReactions (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteOwnReaction (Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteReaction (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteReaction (Ldev/kord/core/entity/ReactionEmoji;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getAttachments ()Ljava/util/Set;
	public final fun getAuthor ()Ldev/kord/core/entity/User;
	public final fun getAuthorAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getComponents ()Ljava/util/List;
	public final fun getContent ()Ljava/lang/String;
	public final fun getData ()Ldev/kord/core/cache/data/MessageData;
	public final fun getEditedTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getEmbeds ()Ljava/util/List;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getInteraction ()Ldev/kord/core/entity/interaction/MessageInteraction;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMentionedChannelBehaviors ()Ljava/util/Set;
	public final fun getMentionedChannelIds ()Ljava/util/Set;
	public final fun getMentionedChannels ()Lkotlinx/coroutines/flow/Flow;
	public final fun getMentionedRoleIds ()Ljava/util/Set;
	public final fun getMentionedRoles ()Lkotlinx/coroutines/flow/Flow;
	public final fun getMentionedUserBehaviors ()Ljava/util/Set;
	public final fun getMentionedUserIds ()Ljava/util/Set;
	public final fun getMentionedUsers ()Lkotlinx/coroutines/flow/Flow;
	public final fun getMentionsEveryone ()Z
	public final fun getMessageReference ()Ldev/kord/core/entity/MessageReference;
	public final fun getReactions ()Ljava/util/Set;
	public fun getReactors (Ldev/kord/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public final fun getReferencedMessage ()Ldev/kord/core/entity/Message;
	public final fun getStickers ()Ljava/util/List;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getTimestamp ()Lkotlinx/datetime/Instant;
	public final fun getTts ()Z
	public final fun getType ()Ldev/kord/common/entity/MessageType;
	public final fun getWebhookId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public final fun isPinned ()Z
	public fun pin (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun publish (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun unpin (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/MessageBehavior;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Message;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/MessageReference : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/MessageReferenceData;Ldev/kord/core/Kord;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getData ()Ldev/kord/core/cache/data/MessageReferenceData;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/behavior/MessageBehavior;
}

public final class dev/kord/core/entity/MessageSticker : dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/cache/data/MessageStickerData;Ldev/kord/core/Kord;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getAsset ()Ljava/lang/String;
	public final fun getData ()Ldev/kord/core/cache/data/MessageStickerData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getFormatType ()Ldev/kord/common/entity/MessageStickerType;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getPackId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPreviewAsset ()Ljava/lang/String;
	public final fun getTags ()Ljava/util/List;
}

public final class dev/kord/core/entity/PartialGuild : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/PartialGuildData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/PartialGuildData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/PartialGuildData;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIcon (Ldev/kord/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIconHash ()Ljava/lang/String;
	public final fun getIconUrl (Ldev/kord/rest/Image$Format;)Ljava/lang/String;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getOwner ()Ljava/lang/Boolean;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getWelcomeScreen ()Ldev/kord/core/entity/WelcomeScreen;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/PartialGuild;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public class dev/kord/core/entity/PermissionOverwrite {
	public static final field Companion Ldev/kord/core/entity/PermissionOverwrite$Companion;
	public fun <init> (Ldev/kord/core/cache/data/PermissionOverwriteData;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllowed ()Ldev/kord/common/entity/Permissions;
	public final fun getData ()Ldev/kord/core/cache/data/PermissionOverwriteData;
	public final fun getDenied ()Ldev/kord/common/entity/Permissions;
	public final fun getTarget ()Ldev/kord/common/entity/Snowflake;
	public final fun getType ()Ldev/kord/common/entity/OverwriteType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/PermissionOverwrite$Companion {
	public final fun forEveryone (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;)Ldev/kord/core/entity/PermissionOverwrite;
	public static synthetic fun forEveryone$default (Ldev/kord/core/entity/PermissionOverwrite$Companion;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;ILjava/lang/Object;)Ldev/kord/core/entity/PermissionOverwrite;
	public final fun forMember (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;)Ldev/kord/core/entity/PermissionOverwrite;
	public static synthetic fun forMember$default (Ldev/kord/core/entity/PermissionOverwrite$Companion;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;ILjava/lang/Object;)Ldev/kord/core/entity/PermissionOverwrite;
	public final fun forRole (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;)Ldev/kord/core/entity/PermissionOverwrite;
	public static synthetic fun forRole$default (Ldev/kord/core/entity/PermissionOverwrite$Companion;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Permissions;Ldev/kord/common/entity/Permissions;ILjava/lang/Object;)Ldev/kord/core/entity/PermissionOverwrite;
}

public final class dev/kord/core/entity/PermissionOverwriteEntity : dev/kord/core/entity/PermissionOverwrite, dev/kord/core/KordObject, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/PermissionOverwriteData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/cache/data/PermissionOverwriteData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun delete$default (Ldev/kord/core/entity/PermissionOverwriteEntity;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getChannel ()Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/Presence : dev/kord/core/KordObject, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/PresenceData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/PresenceData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getActivities ()Ljava/util/List;
	public final fun getClientStatus ()Ldev/kord/core/entity/ClientStatus;
	public final fun getData ()Ldev/kord/core/cache/data/PresenceData;
	public final fun getGame ()Ldev/kord/core/entity/Activity;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getRoleIds ()Ljava/util/Set;
	public final fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public final fun getStatus ()Ldev/kord/common/entity/PresenceStatus;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Presence;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/Reaction : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/ReactionData;Ldev/kord/core/Kord;)V
	public final fun getCount ()I
	public final fun getData ()Ldev/kord/core/cache/data/ReactionData;
	public final fun getEmoji ()Ldev/kord/core/entity/ReactionEmoji;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getSelfReacted ()Z
	public final fun isAnimated ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/core/entity/ReactionEmoji {
	public static final field Companion Ldev/kord/core/entity/ReactionEmoji$Companion;
	public abstract fun getMention ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getUrlFormat ()Ljava/lang/String;
}

public final class dev/kord/core/entity/ReactionEmoji$Companion {
	public final fun from (Ldev/kord/core/cache/data/RemovedReactionData;)Ldev/kord/core/entity/ReactionEmoji;
	public final fun from (Ldev/kord/core/entity/GuildEmoji;)Ldev/kord/core/entity/ReactionEmoji$Custom;
}

public final class dev/kord/core/entity/ReactionEmoji$Custom : dev/kord/core/entity/ReactionEmoji {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Z)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Z)Ldev/kord/core/entity/ReactionEmoji$Custom;
	public static synthetic fun copy$default (Ldev/kord/core/entity/ReactionEmoji$Custom;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ZILjava/lang/Object;)Ldev/kord/core/entity/ReactionEmoji$Custom;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getUrlFormat ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isAnimated ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/ReactionEmoji$Unicode : dev/kord/core/entity/ReactionEmoji {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Ldev/kord/core/entity/ReactionEmoji$Unicode;
	public static synthetic fun copy$default (Ldev/kord/core/entity/ReactionEmoji$Unicode;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/core/entity/ReactionEmoji$Unicode;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getUrlFormat ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Region : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/RegionData;Ldev/kord/core/Kord;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/RegionData;
	public final fun getId ()Ljava/lang/String;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isCustom ()Z
	public final fun isDeprecated ()Z
	public final fun isOptimal ()Z
	public final fun isVip ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Role : dev/kord/core/behavior/RoleBehavior {
	public fun <init> (Ldev/kord/core/cache/data/RoleData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/RoleData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun changePosition (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/kord/core/cache/data/RoleData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun component3 ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun copy (Ldev/kord/core/cache/data/RoleData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/entity/Role;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Role;Ldev/kord/core/cache/data/RoleData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/kord/core/entity/Role;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColor ()Ldev/kord/common/Color;
	public final fun getData ()Ldev/kord/core/cache/data/RoleData;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getHoisted ()Z
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getManaged ()Z
	public fun getMention ()Ljava/lang/String;
	public final fun getMentionable ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRawPosition ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getTags ()Ldev/kord/core/entity/RoleTags;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/RoleBehavior;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Role;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/RoleTags : dev/kord/core/KordObject, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/RoleTagsData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/RoleTagsData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBot (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBotId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/core/cache/data/RoleTagsData;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIntegration (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getIntegrationId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun isPremiumRole ()Z
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/StageInstance : dev/kord/core/behavior/StageInstanceBehavior {
	public fun <init> (Ldev/kord/core/cache/data/StageInstanceData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public fun asStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/core/cache/data/StageInstanceData;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getTopic ()Ljava/lang/String;
	public fun update (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/StageInstanceBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public abstract interface class dev/kord/core/entity/Strategizable {
	public abstract fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/Team : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/TeamData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/TeamData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getData ()Ldev/kord/core/cache/data/TeamData;
	public final fun getIcon ()Ljava/lang/String;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMembers ()Ljava/util/List;
	public final fun getOwnerUserId ()Ldev/kord/common/entity/Snowflake;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserOrNUll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Team;
}

public final class dev/kord/core/entity/TeamMember {
	public fun <init> (Ldev/kord/core/cache/data/TeamMemberData;Ldev/kord/core/Kord;)V
	public final fun getData ()Ldev/kord/core/cache/data/TeamMemberData;
	public final fun getKord ()Ldev/kord/core/Kord;
	public final fun getMembershipState ()Ldev/kord/common/entity/TeamMembershipState;
	public final fun getPermissions ()Ljava/util/List;
	public final fun getTeamId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/Template : dev/kord/core/KordObject, dev/kord/core/behavior/TemplateBehavior {
	public fun <init> (Ldev/kord/core/cache/data/TemplateData;Ldev/kord/core/Kord;)V
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCode ()Ljava/lang/String;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getCreator ()Ldev/kord/core/entity/User;
	public final fun getCreatorId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/core/cache/data/TemplateData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDirty ()Ljava/lang/Boolean;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public final fun getPartialGuild ()Ldev/kord/core/entity/PartialGuild;
	public final fun getUpdatedAt ()Lkotlinx/datetime/Instant;
	public final fun getUsageCount ()I
	public fun sync (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class dev/kord/core/entity/User : dev/kord/core/behavior/UserBehavior {
	public fun <init> (Ldev/kord/core/cache/data/UserData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/UserData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asMember (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asMemberOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAvatar ()Ldev/kord/core/entity/User$Avatar;
	public final fun getData ()Ldev/kord/core/cache/data/UserData;
	public final fun getDiscriminator ()Ljava/lang/String;
	public fun getDmChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getDmChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getFlags ()Ldev/kord/common/entity/UserFlags;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public final fun getPremiumType ()Ldev/kord/common/entity/UserPremium;
	public final fun getPublicFlags ()Ldev/kord/common/entity/UserFlags;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getTag ()Ljava/lang/String;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isBot ()Z
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/UserBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/User;
}

public final class dev/kord/core/entity/User$Avatar : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/UserData;Ldev/kord/core/Kord;)V
	public final fun component1 ()Ldev/kord/core/cache/data/UserData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun copy (Ldev/kord/core/cache/data/UserData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/User$Avatar;
	public static synthetic fun copy$default (Ldev/kord/core/entity/User$Avatar;Ldev/kord/core/cache/data/UserData;Ldev/kord/core/Kord;ILjava/lang/Object;)Ldev/kord/core/entity/User$Avatar;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/core/cache/data/UserData;
	public final fun getDefaultImage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getDefaultUrl ()Ljava/lang/String;
	public final fun getImage (Ldev/kord/rest/Image$Format;Ldev/kord/rest/Image$Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Ldev/kord/rest/Image$Format;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Ldev/kord/rest/Image$Size;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getImage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getSupportedFormat ()Ldev/kord/rest/Image$Format;
	public final fun getUrl ()Ljava/lang/String;
	public final fun getUrl (Ldev/kord/rest/Image$Format;)Ljava/lang/String;
	public final fun getUrl (Ldev/kord/rest/Image$Format;Ldev/kord/rest/Image$Size;)Ljava/lang/String;
	public final fun getUrl (Ldev/kord/rest/Image$Size;)Ljava/lang/String;
	public fun hashCode ()I
	public final fun isAnimated ()Z
	public final fun isCustom ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/VoiceState : dev/kord/core/KordObject, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/VoiceStateData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/VoiceStateData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getData ()Ldev/kord/core/cache/data/VoiceStateData;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRequestToSpeakTimestamp ()Ljava/lang/String;
	public final fun getSessionId ()Ljava/lang/String;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public final fun isDeafened ()Z
	public final fun isMuted ()Z
	public final fun isSelfDeafened ()Z
	public final fun isSelfMuted ()Z
	public final fun isSelfSteaming ()Z
	public final fun isSuppressed ()Z
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/VoiceState;
}

public final class dev/kord/core/entity/Webhook : dev/kord/core/behavior/WebhookBehavior, dev/kord/core/entity/Strategizable {
	public fun <init> (Ldev/kord/core/cache/data/WebhookData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/WebhookData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/kord/core/cache/data/WebhookData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun component3 ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun copy (Ldev/kord/core/cache/data/WebhookData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/entity/Webhook;
	public static synthetic fun copy$default (Ldev/kord/core/entity/Webhook;Ldev/kord/core/cache/data/WebhookData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/kord/core/entity/Webhook;
	public fun delete (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCreatorId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/core/cache/data/WebhookData;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getToken ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/WebhookType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/WebhookBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Webhook;
}

public final class dev/kord/core/entity/WelcomeScreen : dev/kord/core/KordObject {
	public fun <init> (Ldev/kord/core/cache/data/WelcomeScreenData;Ldev/kord/core/Kord;)V
	public final fun getData ()Ldev/kord/core/cache/data/WelcomeScreenData;
	public final fun getDescription ()Ljava/lang/String;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getWelcomeScreenChannels ()Ljava/util/List;
}

public abstract interface class dev/kord/core/entity/channel/CategorizableChannel : dev/kord/core/entity/channel/GuildChannel {
	public abstract fun getCategory ()Ldev/kord/core/behavior/channel/CategoryBehavior;
	public abstract fun getCategoryId ()Ldev/kord/common/entity/Snowflake;
}

public final class dev/kord/core/entity/channel/CategorizableChannel$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/entity/channel/CategorizableChannel;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/entity/channel/CategorizableChannel;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getCategory (Ldev/kord/core/entity/channel/CategorizableChannel;)Ldev/kord/core/behavior/channel/CategoryBehavior;
	public static fun getCategoryId (Ldev/kord/core/entity/channel/CategorizableChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getEffectivePermissions (Ldev/kord/core/entity/channel/CategorizableChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/entity/channel/CategorizableChannel;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/kord/core/entity/channel/CategorizableChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/kord/core/entity/channel/CategorizableChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getInvites (Ldev/kord/core/entity/channel/CategorizableChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/entity/channel/CategorizableChannel;)Ljava/lang/String;
	public static fun getName (Ldev/kord/core/entity/channel/CategorizableChannel;)Ljava/lang/String;
	public static fun getPermissionOverwrites (Ldev/kord/core/entity/channel/CategorizableChannel;)Ljava/util/Set;
	public static fun getPermissionOverwritesForMember (Ldev/kord/core/entity/channel/CategorizableChannel;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public static fun getPermissionOverwritesForRole (Ldev/kord/core/entity/channel/CategorizableChannel;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public static fun getPosition (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRawPosition (Ldev/kord/core/entity/channel/CategorizableChannel;)I
	public static fun getType (Ldev/kord/core/entity/channel/CategorizableChannel;)Ldev/kord/common/entity/ChannelType;
}

public final class dev/kord/core/entity/channel/CategorizableChannelKt {
	public static final fun createInvite (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun createInvite$default (Ldev/kord/core/entity/channel/CategorizableChannel;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class dev/kord/core/entity/channel/Category : dev/kord/core/behavior/channel/CategoryBehavior, dev/kord/core/entity/channel/GuildChannel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/CategoryBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Category;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildChannel;
}

public abstract interface class dev/kord/core/entity/channel/Channel : dev/kord/core/behavior/channel/ChannelBehavior {
	public static final field Companion Ldev/kord/core/entity/channel/Channel$Companion;
	public abstract fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public abstract fun getId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getType ()Ldev/kord/common/entity/ChannelType;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
}

public final class dev/kord/core/entity/channel/Channel$Companion {
	public final fun from (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public static synthetic fun from$default (Ldev/kord/core/entity/channel/Channel$Companion;Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/entity/channel/Channel;
}

public final class dev/kord/core/entity/channel/Channel$DefaultImpls {
	public static fun asChannel (Ldev/kord/core/entity/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/entity/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/entity/channel/Channel;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/entity/channel/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/kord/core/entity/channel/Channel;)Ldev/kord/common/entity/Snowflake;
	public static fun getMention (Ldev/kord/core/entity/channel/Channel;)Ljava/lang/String;
	public static fun getType (Ldev/kord/core/entity/channel/Channel;)Ldev/kord/common/entity/ChannelType;
	public static fun withStrategy (Ldev/kord/core/entity/channel/Channel;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
}

public final class dev/kord/core/entity/channel/DmChannel : dev/kord/core/entity/channel/MessageChannel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/kord/core/cache/data/ChannelData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun component3 ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun copy (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/entity/channel/DmChannel;
	public static synthetic fun copy$default (Ldev/kord/core/entity/channel/DmChannel;Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/kord/core/entity/channel/DmChannel;
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getLastMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/kord/common/entity/Snowflake;
	public fun getLastPintTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public final fun getRecipientBehaviors ()Ljava/util/Set;
	public final fun getRecipientIds ()Ljava/util/Set;
	public final fun getRecipients ()Lkotlinx/coroutines/flow/Flow;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/DmChannel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/MessageChannel;
}

public abstract interface class dev/kord/core/entity/channel/GuildChannel : dev/kord/core/behavior/channel/GuildChannelBehavior, dev/kord/core/entity/channel/Channel {
	public abstract fun getEffectivePermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPermissionOverwrites ()Ljava/util/Set;
	public abstract fun getPermissionOverwritesForMember (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public abstract fun getPermissionOverwritesForRole (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public abstract fun getRawPosition ()I
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildChannel;
}

public final class dev/kord/core/entity/channel/GuildChannel$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/entity/channel/GuildChannel;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/entity/channel/GuildChannel;Ldev/kord/core/entity/Entity;)I
	public static fun delete (Ldev/kord/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getEffectivePermissions (Ldev/kord/core/entity/channel/GuildChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/entity/channel/GuildChannel;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/kord/core/entity/channel/GuildChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/kord/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/kord/core/entity/channel/GuildChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getInvites (Ldev/kord/core/entity/channel/GuildChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMention (Ldev/kord/core/entity/channel/GuildChannel;)Ljava/lang/String;
	public static fun getName (Ldev/kord/core/entity/channel/GuildChannel;)Ljava/lang/String;
	public static fun getPermissionOverwrites (Ldev/kord/core/entity/channel/GuildChannel;)Ljava/util/Set;
	public static fun getPermissionOverwritesForMember (Ldev/kord/core/entity/channel/GuildChannel;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public static fun getPermissionOverwritesForRole (Ldev/kord/core/entity/channel/GuildChannel;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public static fun getPosition (Ldev/kord/core/entity/channel/GuildChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRawPosition (Ldev/kord/core/entity/channel/GuildChannel;)I
	public static fun getType (Ldev/kord/core/entity/channel/GuildChannel;)Ldev/kord/common/entity/ChannelType;
}

public abstract interface class dev/kord/core/entity/channel/GuildMessageChannel : dev/kord/core/behavior/channel/GuildMessageChannelBehavior, dev/kord/core/entity/channel/CategorizableChannel, dev/kord/core/entity/channel/MessageChannel {
	public abstract fun getTopic ()Ljava/lang/String;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildMessageChannel;
}

public final class dev/kord/core/entity/channel/GuildMessageChannel$DefaultImpls {
	public static fun addOverwrite (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannel (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun bulkDelete (Ldev/kord/core/entity/channel/GuildMessageChannel;Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/core/entity/Entity;)I
	public static fun createMessage (Ldev/kord/core/entity/channel/GuildMessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getCategory (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/core/behavior/channel/CategoryBehavior;
	public static fun getCategoryId (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getEffectivePermissions (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/core/behavior/GuildBehavior;
	public static fun getGuild (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildId (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getGuildOrNull (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getInvites (Ldev/kord/core/entity/channel/GuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getLastMessage (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/core/behavior/MessageBehavior;
	public static fun getLastMessage (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getLastMessageId (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getLastPintTimeStamp (Ldev/kord/core/entity/channel/GuildMessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getMention (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ljava/lang/String;
	public static fun getMessage (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/kord/core/entity/channel/GuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getName (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ljava/lang/String;
	public static fun getPermissionOverwrites (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ljava/util/Set;
	public static fun getPermissionOverwritesForMember (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public static fun getPermissionOverwritesForRole (Ldev/kord/core/entity/channel/GuildMessageChannel;Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public static fun getPinnedMessages (Ldev/kord/core/entity/channel/GuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getPosition (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRawPosition (Ldev/kord/core/entity/channel/GuildMessageChannel;)I
	public static fun getTopic (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ljava/lang/String;
	public static fun getType (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/common/entity/ChannelType;
	public static fun getWebhooks (Ldev/kord/core/entity/channel/GuildMessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun type (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/entity/channel/MessageChannel : dev/kord/core/behavior/channel/MessageChannelBehavior, dev/kord/core/entity/channel/Channel {
	public abstract fun getLastMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public abstract fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getLastMessageId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getLastPintTimeStamp ()Lkotlinx/datetime/Instant;
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/MessageChannel;
}

public final class dev/kord/core/entity/channel/MessageChannel$DefaultImpls {
	public static fun asChannel (Ldev/kord/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun asChannelOrNull (Ldev/kord/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun compareTo (Ldev/kord/core/entity/channel/MessageChannel;Ldev/kord/core/entity/Entity;)I
	public static fun createMessage (Ldev/kord/core/entity/channel/MessageChannel;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun delete (Ldev/kord/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun deleteMessage (Ldev/kord/core/entity/channel/MessageChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getId (Ldev/kord/core/entity/channel/MessageChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getLastMessage (Ldev/kord/core/entity/channel/MessageChannel;)Ldev/kord/core/behavior/MessageBehavior;
	public static fun getLastMessage (Ldev/kord/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getLastMessageId (Ldev/kord/core/entity/channel/MessageChannel;)Ldev/kord/common/entity/Snowflake;
	public static fun getLastPintTimeStamp (Ldev/kord/core/entity/channel/MessageChannel;)Lkotlinx/datetime/Instant;
	public static fun getMention (Ldev/kord/core/entity/channel/MessageChannel;)Ljava/lang/String;
	public static fun getMessage (Ldev/kord/core/entity/channel/MessageChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessageOrNull (Ldev/kord/core/entity/channel/MessageChannel;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessages (Ldev/kord/core/entity/channel/MessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAfter (Ldev/kord/core/entity/channel/MessageChannel;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesAround (Ldev/kord/core/entity/channel/MessageChannel;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getMessagesBefore (Ldev/kord/core/entity/channel/MessageChannel;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public static fun getPinnedMessages (Ldev/kord/core/entity/channel/MessageChannel;)Lkotlinx/coroutines/flow/Flow;
	public static fun getType (Ldev/kord/core/entity/channel/MessageChannel;)Ldev/kord/common/entity/ChannelType;
	public static fun type (Ldev/kord/core/entity/channel/MessageChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/entity/channel/MessageChannel;Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun typeUntil (Ldev/kord/core/entity/channel/MessageChannel;Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/entity/channel/NewsChannel : dev/kord/core/behavior/channel/NewsChannelBehavior, dev/kord/core/entity/channel/CategorizableChannel, dev/kord/core/entity/channel/GuildMessageChannel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun bulkDelete (Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/kord/core/cache/data/ChannelData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun component3 ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun copy (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/entity/channel/NewsChannel;
	public static synthetic fun copy$default (Ldev/kord/core/entity/channel/NewsChannel;Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/kord/core/entity/channel/NewsChannel;
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun follow (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCategory ()Ldev/kord/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/kord/common/entity/Snowflake;
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getLastMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/kord/common/entity/Snowflake;
	public fun getLastPintTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getTopic ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/NewsChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildMessageChannel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/MessageChannel;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/NewsChannel;
}

public final class dev/kord/core/entity/channel/ResolvedChannel : dev/kord/core/entity/channel/Channel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public final fun getStrategy ()Ldev/kord/core/supplier/EntitySupplyStrategy;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
}

public final class dev/kord/core/entity/channel/StageChannel : dev/kord/core/behavior/channel/StageChannelBehavior, dev/kord/core/entity/channel/CategorizableChannel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createStageInstance (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBitrate ()I
	public fun getCategory ()Ldev/kord/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/kord/common/entity/Snowflake;
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getStageInstance (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstanceOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public final fun getUserLimit ()I
	public fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/StageChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildChannel;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/StageChannel;
}

public final class dev/kord/core/entity/channel/StoreChannel : dev/kord/core/behavior/channel/StoreChannelBehavior, dev/kord/core/entity/channel/CategorizableChannel, dev/kord/core/entity/channel/GuildChannel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ldev/kord/core/cache/data/ChannelData;
	public final fun component2 ()Ldev/kord/core/Kord;
	public final fun component3 ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun copy (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/entity/channel/StoreChannel;
	public static synthetic fun copy$default (Ldev/kord/core/entity/channel/StoreChannel;Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILjava/lang/Object;)Ldev/kord/core/entity/channel/StoreChannel;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCategory ()Ldev/kord/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/kord/common/entity/Snowflake;
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/StoreChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildChannel;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/StoreChannel;
}

public final class dev/kord/core/entity/channel/TextChannel : dev/kord/core/behavior/channel/TextChannelBehavior, dev/kord/core/entity/channel/GuildMessageChannel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun bulkDelete (Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun createMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCategory ()Ldev/kord/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/kord/common/entity/Snowflake;
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getLastMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public fun getLastMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLastMessageId ()Ldev/kord/common/entity/Snowflake;
	public fun getLastPintTimeStamp ()Lkotlinx/datetime/Instant;
	public fun getMention ()Ljava/lang/String;
	public fun getMessage (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAfter (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPinnedMessages ()Lkotlinx/coroutines/flow/Flow;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getTopic ()Ljava/lang/String;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public final fun getUserRateLimit ()I
	public fun getWebhooks ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public final fun isNsfw ()Z
	public fun toString ()Ljava/lang/String;
	public fun type (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlin/time/TimeMark;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun typeUntil (Lkotlinx/datetime/Instant;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/TextChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildChannel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildMessageChannel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/MessageChannel;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/TextChannel;
}

public final class dev/kord/core/entity/channel/VoiceChannel : dev/kord/core/behavior/channel/VoiceChannelBehavior, dev/kord/core/entity/channel/CategorizableChannel {
	public fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun addOverwrite (Ldev/kord/core/entity/PermissionOverwrite;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBitrate ()I
	public fun getCategory ()Ldev/kord/core/behavior/channel/CategoryBehavior;
	public fun getCategoryId ()Ldev/kord/common/entity/Snowflake;
	public fun getData ()Ldev/kord/core/cache/data/ChannelData;
	public fun getEffectivePermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getInvites ()Lkotlinx/coroutines/flow/Flow;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getPermissionOverwrites ()Ljava/util/Set;
	public fun getPermissionOverwritesForMember (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPermissionOverwritesForRole (Ldev/kord/common/entity/Snowflake;)Ldev/kord/core/entity/PermissionOverwriteEntity;
	public fun getPosition (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRawPosition ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getType ()Ldev/kord/common/entity/ChannelType;
	public final fun getUserLimit ()I
	public fun getVoiceStates ()Lkotlinx/coroutines/flow/Flow;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/VoiceChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/Channel;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/GuildChannel;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/channel/VoiceChannel;
}

public final class dev/kord/core/entity/channel/WelcomeScreenChannel : dev/kord/core/behavior/channel/ChannelBehavior {
	public fun <init> (Ldev/kord/core/cache/data/WelcomeScreenChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/WelcomeScreenChannelData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun asChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getData ()Ldev/kord/core/cache/data/WelcomeScreenChannelData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getEmojiId ()Ldev/kord/common/entity/Snowflake;
	public final fun getEmojiName ()Ljava/lang/String;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getMention ()Ljava/lang/String;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/channel/ChannelBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/entity/component/ActionRowComponent : dev/kord/core/entity/component/Component {
	public fun <init> (Ldev/kord/core/cache/data/ComponentData;)V
	public final fun getButtons ()Ljava/util/List;
	public fun getData ()Ldev/kord/core/cache/data/ComponentData;
	public fun getType ()Ldev/kord/common/entity/ComponentType;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/component/ButtonComponent : dev/kord/core/entity/component/Component {
	public fun <init> (Ldev/kord/core/cache/data/ComponentData;)V
	public final fun getCustomId ()Ljava/lang/String;
	public fun getData ()Ldev/kord/core/cache/data/ComponentData;
	public final fun getDisabled ()Z
	public final fun getEmoji ()Ldev/kord/core/entity/ReactionEmoji;
	public final fun getLabel ()Ljava/lang/String;
	public final fun getStyle ()Ldev/kord/common/entity/ButtonStyle;
	public fun getType ()Ldev/kord/common/entity/ComponentType;
	public final fun getUrl ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/kord/core/entity/component/Component {
	public abstract fun getData ()Ldev/kord/core/cache/data/ComponentData;
	public abstract fun getType ()Ldev/kord/common/entity/ComponentType;
}

public final class dev/kord/core/entity/component/Component$DefaultImpls {
	public static fun getType (Ldev/kord/core/entity/component/Component;)Ldev/kord/common/entity/ComponentType;
}

public final class dev/kord/core/entity/component/ComponentKt {
	public static final fun Component (Ldev/kord/core/cache/data/ComponentData;)Ldev/kord/core/entity/component/Component;
}

public final class dev/kord/core/entity/component/UnknownComponent : dev/kord/core/entity/component/Component {
	public fun <init> (Ldev/kord/core/cache/data/ComponentData;)V
	public fun getData ()Ldev/kord/core/cache/data/ComponentData;
	public fun getType ()Ldev/kord/common/entity/ComponentType;
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/core/entity/interaction/ApplicationCommand : dev/kord/core/behavior/ApplicationCommandBehavior {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationCommandData;Ldev/kord/rest/service/InteractionService;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationCommandData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getGroups ()Ljava/util/Map;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getName ()Ljava/lang/String;
	public fun getService ()Ldev/kord/rest/service/InteractionService;
	public final fun getSubCommands ()Ljava/util/Map;
	public final fun isDefault ()Z
}

public final class dev/kord/core/entity/interaction/ApplicationCommandGroup {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationCommandGroupData;)V
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationCommandGroupData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getSubcommands ()Ljava/util/Map;
}

public final class dev/kord/core/entity/interaction/ApplicationCommandParameter {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationCommandParameterData;)V
	public final fun getChoices ()Ljava/util/Map;
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationCommandParameterData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun isRequired ()Z
}

public final class dev/kord/core/entity/interaction/ApplicationCommandPermissions {
	public fun <init> (Ldev/kord/core/cache/data/GuildApplicationCommandPermissionsData;)V
	public final fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getData ()Ldev/kord/core/cache/data/GuildApplicationCommandPermissionsData;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermissions ()Lkotlinx/coroutines/flow/Flow;
}

public final class dev/kord/core/entity/interaction/ApplicationCommandSubCommand {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;)V
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationCommandSubcommandData;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getParameters ()Ljava/util/Map;
	public final fun isDefault ()Z
}

public abstract class dev/kord/core/entity/interaction/CommandInteraction : dev/kord/core/entity/interaction/Interaction {
	public final fun getCommand ()Ldev/kord/core/entity/interaction/InteractionCommand;
}

public final class dev/kord/core/entity/interaction/ComponentInteraction : dev/kord/core/entity/interaction/Interaction, dev/kord/core/behavior/interaction/ComponentInteractionBehavior {
	public fun <init> (Ldev/kord/core/cache/data/InteractionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public fun acknowledgeEphemeralDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublicDeferredMessageUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public final fun getComponent ()Ldev/kord/core/entity/component/ButtonComponent;
	public final fun getComponentId ()Ljava/lang/String;
	public fun getData ()Ldev/kord/core/cache/data/InteractionData;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/entity/Message;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/ComponentInteractionBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/ComponentInteraction;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/Interaction;
}

public final class dev/kord/core/entity/interaction/DmInteraction : dev/kord/core/entity/interaction/CommandInteraction {
	public fun <init> (Ldev/kord/core/cache/data/InteractionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/InteractionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public fun getData ()Ldev/kord/core/cache/data/InteractionData;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public synthetic fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public fun getUser ()Ldev/kord/core/entity/User;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/DmInteraction;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/Interaction;
}

public final class dev/kord/core/entity/interaction/EphemeralFollowupMessage : dev/kord/core/entity/interaction/InteractionFollowup, dev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior {
	public fun <init> (Ldev/kord/core/entity/Message;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/Message;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/EphemeralFollowupMessageBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/EphemeralFollowupMessage;
}

public final class dev/kord/core/entity/interaction/GlobalApplicationCommand : dev/kord/core/entity/interaction/ApplicationCommand, dev/kord/core/behavior/GlobalApplicationCommandBehavior {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationCommandData;Ldev/kord/rest/service/InteractionService;)V
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editPermissions (Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/entity/interaction/GroupCommand : dev/kord/core/entity/interaction/InteractionCommand {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/core/Kord;)V
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationInteractionData;
	public final fun getGroupName ()Ljava/lang/String;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public fun getOptions ()Ljava/util/Map;
	public fun getResolved ()Ldev/kord/core/entity/interaction/ResolvedObjects;
	public fun getRootId ()Ldev/kord/common/entity/Snowflake;
	public fun getRootName ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/GuildApplicationCommand : dev/kord/core/entity/interaction/ApplicationCommand, dev/kord/core/behavior/GuildApplicationCommandBehavior {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationCommandData;Ldev/kord/rest/service/InteractionService;Ldev/kord/common/entity/Snowflake;)V
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun edit (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun editPermissions (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
}

public final class dev/kord/core/entity/interaction/GuildApplicationCommandPermission {
	public fun <init> (Ldev/kord/core/cache/data/GuildApplicationCommandPermissionData;)V
	public final fun getData ()Ldev/kord/core/cache/data/GuildApplicationCommandPermissionData;
	public final fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getPermission ()Z
	public final fun getType ()Ldev/kord/common/entity/DiscordGuildApplicationCommandPermission$Type;
}

public final class dev/kord/core/entity/interaction/GuildInteraction : dev/kord/core/entity/interaction/CommandInteraction, dev/kord/core/behavior/GuildInteractionBehavior {
	public fun <init> (Ldev/kord/core/cache/data/InteractionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public fun getChannel ()Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public synthetic fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public fun getData ()Ldev/kord/core/cache/data/InteractionData;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember ()Ldev/kord/core/entity/Member;
	public final fun getPermissions ()Ldev/kord/common/entity/Permissions;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/InteractionBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/GuildInteraction;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/Interaction;
}

public abstract class dev/kord/core/entity/interaction/Interaction : dev/kord/core/behavior/interaction/InteractionBehavior {
	public static final field Companion Ldev/kord/core/entity/interaction/Interaction$Companion;
	public fun acknowledgeEphemeral (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acknowledgePublic (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getData ()Ldev/kord/core/cache/data/InteractionData;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getToken ()Ljava/lang/String;
	public final fun getType ()Ldev/kord/common/entity/InteractionType;
	public abstract fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getVersion ()I
	public abstract fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/Interaction;
}

public final class dev/kord/core/entity/interaction/Interaction$Companion {
	public final fun from (Ldev/kord/core/cache/data/InteractionData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/Interaction;
	public static synthetic fun from$default (Ldev/kord/core/entity/interaction/Interaction$Companion;Ldev/kord/core/cache/data/InteractionData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILjava/lang/Object;)Ldev/kord/core/entity/interaction/Interaction;
}

public abstract class dev/kord/core/entity/interaction/InteractionCommand : dev/kord/core/KordObject {
	public abstract fun getOptions ()Ljava/util/Map;
	public abstract fun getResolved ()Ldev/kord/core/entity/interaction/ResolvedObjects;
	public abstract fun getRootId ()Ldev/kord/common/entity/Snowflake;
	public abstract fun getRootName ()Ljava/lang/String;
}

public abstract class dev/kord/core/entity/interaction/InteractionFollowup : dev/kord/core/behavior/interaction/FollowupMessageBehavior {
	public synthetic fun <init> (Ldev/kord/core/entity/Message;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMessage ()Ldev/kord/core/entity/Message;
}

public final class dev/kord/core/entity/interaction/InteractionKt {
	public static final fun InteractionCommand (Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/core/Kord;)Ldev/kord/core/entity/interaction/InteractionCommand;
	public static final fun OptionValue (Ldev/kord/common/entity/CommandArgument;Ldev/kord/core/entity/interaction/ResolvedObjects;)Ldev/kord/core/entity/interaction/OptionValue;
	public static final fun boolean (Ldev/kord/core/entity/interaction/OptionValue;)Z
	public static final fun channel (Ldev/kord/core/entity/interaction/OptionValue;)Ldev/kord/core/entity/channel/ResolvedChannel;
	public static final fun int (Ldev/kord/core/entity/interaction/OptionValue;)I
	public static final fun member (Ldev/kord/core/entity/interaction/OptionValue;)Ldev/kord/core/entity/Member;
	public static final fun role (Ldev/kord/core/entity/interaction/OptionValue;)Ldev/kord/core/entity/Role;
	public static final fun string (Ldev/kord/core/entity/interaction/OptionValue;)Ljava/lang/String;
	public static final fun user (Ldev/kord/core/entity/interaction/OptionValue;)Ldev/kord/core/entity/User;
}

public final class dev/kord/core/entity/interaction/MessageInteraction : dev/kord/core/entity/KordEntity, dev/kord/core/entity/Strategizable {
	public fun <init> (Lcache/data/MessageInteractionData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Lcache/data/MessageInteractionData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getData ()Lcache/data/MessageInteractionData;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getType ()Ldev/kord/common/entity/InteractionType;
	public final fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/MessageInteraction;
}

public abstract class dev/kord/core/entity/interaction/OptionValue {
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getValue ()Ljava/lang/Object;
}

public final class dev/kord/core/entity/interaction/OptionValue$BooleanOptionValue : dev/kord/core/entity/interaction/OptionValue {
	public fun <init> (Z)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/OptionValue$ChannelOptionValue : dev/kord/core/entity/interaction/OptionValue {
	public fun <init> (Ldev/kord/core/entity/channel/ResolvedChannel;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/OptionValue$IntOptionValue : dev/kord/core/entity/interaction/OptionValue {
	public fun <init> (I)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/OptionValue$MemberOptionValue : dev/kord/core/entity/interaction/OptionValue$UserOptionValue {
	public fun <init> (Ldev/kord/core/entity/Member;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/OptionValue$MentionableOptionValue : dev/kord/core/entity/interaction/OptionValue {
	public fun <init> (Ldev/kord/core/entity/Entity;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/OptionValue$RoleOptionValue : dev/kord/core/entity/interaction/OptionValue {
	public fun <init> (Ldev/kord/core/entity/Role;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/OptionValue$StringOptionValue : dev/kord/core/entity/interaction/OptionValue {
	public fun <init> (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public class dev/kord/core/entity/interaction/OptionValue$UserOptionValue : dev/kord/core/entity/interaction/OptionValue {
	public fun <init> (Ldev/kord/core/entity/User;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/PublicFollowupMessage : dev/kord/core/entity/interaction/InteractionFollowup, dev/kord/core/behavior/interaction/PublicFollowupMessageBehavior {
	public fun <init> (Ldev/kord/core/entity/Message;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/Message;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun delete (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getApplicationId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/behavior/interaction/PublicFollowupMessageBehavior;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/interaction/PublicFollowupMessage;
}

public final class dev/kord/core/entity/interaction/ResolvedObjects {
	public fun <init> (Ldev/kord/core/cache/data/ResolvedObjectsData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ResolvedObjectsData;Ldev/kord/core/Kord;Ldev/kord/core/supplier/EntitySupplyStrategy;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannels ()Ljava/util/Map;
	public final fun getData ()Ldev/kord/core/cache/data/ResolvedObjectsData;
	public final fun getKord ()Ldev/kord/core/Kord;
	public final fun getMembers ()Ljava/util/Map;
	public final fun getRoles ()Ljava/util/Map;
	public final fun getStrategy ()Ldev/kord/core/supplier/EntitySupplyStrategy;
	public final fun getUsers ()Ljava/util/Map;
}

public final class dev/kord/core/entity/interaction/RootCommand : dev/kord/core/entity/interaction/InteractionCommand {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/core/Kord;)V
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationInteractionData;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getOptions ()Ljava/util/Map;
	public fun getResolved ()Ldev/kord/core/entity/interaction/ResolvedObjects;
	public fun getRootId ()Ldev/kord/common/entity/Snowflake;
	public fun getRootName ()Ljava/lang/String;
}

public final class dev/kord/core/entity/interaction/SubCommand : dev/kord/core/entity/interaction/InteractionCommand {
	public fun <init> (Ldev/kord/core/cache/data/ApplicationInteractionData;Ldev/kord/core/Kord;)V
	public final fun getData ()Ldev/kord/core/cache/data/ApplicationInteractionData;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getName ()Ljava/lang/String;
	public fun getOptions ()Ljava/util/Map;
	public fun getResolved ()Ldev/kord/core/entity/interaction/ResolvedObjects;
	public fun getRootId ()Ldev/kord/common/entity/Snowflake;
	public fun getRootName ()Ljava/lang/String;
}

public abstract interface class dev/kord/core/event/Event : kotlinx/coroutines/CoroutineScope {
	public abstract fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public abstract fun getGateway ()Ldev/kord/gateway/Gateway;
	public abstract fun getKord ()Ldev/kord/core/Kord;
	public abstract fun getShard ()I
}

public final class dev/kord/core/event/Event$DefaultImpls {
	public static fun getCoroutineContext (Ldev/kord/core/event/Event;)Lkotlin/coroutines/CoroutineContext;
	public static fun getGateway (Ldev/kord/core/event/Event;)Ldev/kord/gateway/Gateway;
}

public final class dev/kord/core/event/channel/CategoryCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/Category;I)V
	public fun getChannel ()Ldev/kord/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/CategoryDeleteEvent : dev/kord/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/kord/core/entity/channel/Category;I)V
	public fun getChannel ()Ldev/kord/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/CategoryUpdateEvent : dev/kord/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/Category;I)V
	public fun getChannel ()Ldev/kord/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/kord/core/event/channel/ChannelCreateEvent : dev/kord/core/event/Event {
	public abstract fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public abstract fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/event/channel/ChannelCreateEvent$DefaultImpls {
	public static fun getCoroutineContext (Ldev/kord/core/event/channel/ChannelCreateEvent;)Lkotlin/coroutines/CoroutineContext;
	public static fun getGateway (Ldev/kord/core/event/channel/ChannelCreateEvent;)Ldev/kord/gateway/Gateway;
	public static fun getKord (Ldev/kord/core/event/channel/ChannelCreateEvent;)Ldev/kord/core/Kord;
}

public abstract interface class dev/kord/core/event/channel/ChannelDeleteEvent : dev/kord/core/event/Event {
	public abstract fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public abstract fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/event/channel/ChannelDeleteEvent$DefaultImpls {
	public static fun getCoroutineContext (Ldev/kord/core/event/channel/ChannelDeleteEvent;)Lkotlin/coroutines/CoroutineContext;
	public static fun getGateway (Ldev/kord/core/event/channel/ChannelDeleteEvent;)Ldev/kord/gateway/Gateway;
	public static fun getKord (Ldev/kord/core/event/channel/ChannelDeleteEvent;)Ldev/kord/core/Kord;
}

public final class dev/kord/core/event/channel/ChannelPinsUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getData ()Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getLastPinTimestamp ()Lkotlinx/datetime/Instant;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/channel/ChannelPinsUpdateEvent;
}

public abstract interface class dev/kord/core/event/channel/ChannelUpdateEvent : dev/kord/core/event/Event {
	public abstract fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public abstract fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/event/channel/ChannelUpdateEvent$DefaultImpls {
	public static fun getCoroutineContext (Ldev/kord/core/event/channel/ChannelUpdateEvent;)Lkotlin/coroutines/CoroutineContext;
	public static fun getGateway (Ldev/kord/core/event/channel/ChannelUpdateEvent;)Ldev/kord/gateway/Gateway;
	public static fun getKord (Ldev/kord/core/event/channel/ChannelUpdateEvent;)Ldev/kord/core/Kord;
}

public final class dev/kord/core/event/channel/DMChannelCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/DmChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/DmChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/DMChannelDeleteEvent : dev/kord/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/kord/core/entity/channel/DmChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/DmChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/DMChannelUpdateEvent : dev/kord/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/DmChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/DmChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/NewsChannelCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/NewsChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/NewsChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/NewsChannelDeleteEvent : dev/kord/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/kord/core/entity/channel/NewsChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/NewsChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/NewsChannelUpdateEvent : dev/kord/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/NewsChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/NewsChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/StageChannelCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/StageChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/StageChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/StageChannelDeleteEvent : dev/kord/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/kord/core/entity/channel/StageChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/StageChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/StageChannelUpdateEvent : dev/kord/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/StageChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/StageChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/StoreChannelCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/StoreChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/StoreChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/StoreChannelDeleteEvent : dev/kord/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/kord/core/entity/channel/StoreChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/StoreChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/StoreChannelUpdateEvent : dev/kord/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/StoreChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/StoreChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/TextChannelCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/TextChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/TextChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/TextChannelDeleteEvent : dev/kord/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/kord/core/entity/channel/TextChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/TextChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/TextChannelUpdateEvent : dev/kord/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/TextChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/TextChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/TypingStartEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/event/channel/data/TypingStartEventData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/event/channel/data/TypingStartEventData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getData ()Ldev/kord/core/event/channel/data/TypingStartEventData;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public final fun getStarted ()Lkotlinx/datetime/Instant;
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
}

public final class dev/kord/core/event/channel/UnknownChannelCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/Channel;I)V
	public fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/UnknownChannelDeleteEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/Channel;I)V
	public fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/UnknownChannelUpdateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/Channel;I)V
	public fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/VoiceChannelCreateEvent : dev/kord/core/event/channel/ChannelCreateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/VoiceChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/VoiceChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/VoiceChannelDeleteEvent : dev/kord/core/event/channel/ChannelDeleteEvent {
	public fun <init> (Ldev/kord/core/entity/channel/VoiceChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/VoiceChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/VoiceChannelUpdateEvent : dev/kord/core/event/channel/ChannelUpdateEvent {
	public fun <init> (Ldev/kord/core/entity/channel/VoiceChannel;I)V
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/VoiceChannel;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/data/ChannelPinsUpdateEventData {
	public static final field Companion Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;)Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;
	public static synthetic fun copy$default (Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getLastPinTimestamp ()Ldev/kord/common/entity/optional/Optional;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/data/ChannelPinsUpdateEventData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/event/channel/data/ChannelPinsUpdateEventData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordPinsUpdateData;)Ldev/kord/core/event/channel/data/ChannelPinsUpdateEventData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/event/channel/data/TypingStartEventData {
	public static final field Companion Ldev/kord/core/event/channel/data/TypingStartEventData$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/Optional;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/Optional;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun component3 ()Ldev/kord/common/entity/Snowflake;
	public final fun component4 ()J
	public final fun component5 ()Ldev/kord/common/entity/optional/Optional;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/Optional;)Ldev/kord/core/event/channel/data/TypingStartEventData;
	public static synthetic fun copy$default (Ldev/kord/core/event/channel/data/TypingStartEventData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/optional/OptionalSnowflake;Ldev/kord/common/entity/Snowflake;JLdev/kord/common/entity/optional/Optional;ILjava/lang/Object;)Ldev/kord/core/event/channel/data/TypingStartEventData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildId ()Ldev/kord/common/entity/optional/OptionalSnowflake;
	public final fun getMember ()Ldev/kord/common/entity/optional/Optional;
	public final fun getTimestamp ()J
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/channel/data/TypingStartEventData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/core/event/channel/data/TypingStartEventData$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/core/event/channel/data/TypingStartEventData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/core/event/channel/data/TypingStartEventData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/event/channel/data/TypingStartEventData$Companion {
	public final fun from (Ldev/kord/common/entity/DiscordTyping;)Ldev/kord/core/event/channel/data/TypingStartEventData;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/core/event/gateway/ConnectEvent : dev/kord/core/event/gateway/GatewayEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
}

public abstract class dev/kord/core/event/gateway/DisconnectEvent : dev/kord/core/event/gateway/GatewayEvent {
}

public final class dev/kord/core/event/gateway/DisconnectEvent$DetachEvent : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/gateway/DisconnectEvent$DiscordCloseEvent : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;ILdev/kord/gateway/GatewayCloseCode;Z)V
	public final fun getCloseCode ()Ldev/kord/gateway/GatewayCloseCode;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getRecoverable ()Z
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/gateway/DisconnectEvent$ReconnectingEvent : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/gateway/DisconnectEvent$RetryLimitReachedEvent : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/gateway/DisconnectEvent$SessionReset : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/gateway/DisconnectEvent$TimeoutEvent : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/gateway/DisconnectEvent$UserCloseEvent : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/gateway/DisconnectEvent$ZombieConnectionEvent : dev/kord/core/event/gateway/DisconnectEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/core/event/gateway/GatewayEvent : dev/kord/core/event/Event {
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
}

public final class dev/kord/core/event/gateway/ReadyEvent : dev/kord/core/event/gateway/GatewayEvent, dev/kord/core/entity/Strategizable {
	public fun <init> (ILjava/util/Set;Ldev/kord/core/entity/User;Ljava/lang/String;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (ILjava/util/Set;Ldev/kord/core/entity/User;Ljava/lang/String;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGatewayVersion ()I
	public final fun getGuildIds ()Ljava/util/Set;
	public final fun getGuilds ()Ljava/util/Set;
	public final fun getGuilds (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getSelf ()Ldev/kord/core/entity/User;
	public final fun getSessionId ()Ljava/lang/String;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/gateway/ReadyEvent;
}

public final class dev/kord/core/event/gateway/ResumedEvent : dev/kord/core/event/gateway/GatewayEvent {
	public fun <init> (Ldev/kord/core/Kord;I)V
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/guild/BanAddEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/User;Ldev/kord/common/entity/Snowflake;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/User;Ldev/kord/common/entity/Snowflake;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBan (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getBanOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/entity/User;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/BanAddEvent;
}

public final class dev/kord/core/event/guild/BanRemoveEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/User;Ldev/kord/common/entity/Snowflake;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/User;Ldev/kord/common/entity/Snowflake;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/entity/User;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/BanRemoveEvent;
}

public final class dev/kord/core/event/guild/EmojisUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/Set;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/util/Set;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getEmojis ()Ljava/util/Set;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/EmojisUpdateEvent;
}

public final class dev/kord/core/event/guild/GuildCreateEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/Guild;I)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/entity/Guild;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/guild/GuildDeleteEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;ZLdev/kord/core/entity/Guild;Ldev/kord/core/Kord;I)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/entity/Guild;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public final fun getUnavailable ()Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/guild/GuildUpdateEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/Guild;I)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/entity/Guild;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/guild/IntegrationsUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/IntegrationsUpdateEvent;
}

public final class dev/kord/core/event/guild/InviteCreateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/cache/data/InviteCreateData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/InviteCreateData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/ChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNUll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCode ()Ljava/lang/String;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getCreatedAt ()Lkotlinx/datetime/Instant;
	public final fun getData ()Ldev/kord/core/cache/data/InviteCreateData;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviter ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getInviter (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviterAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviterAsMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInviterId ()Ldev/kord/common/entity/Snowflake;
	public final fun getInviterMember ()Ldev/kord/core/behavior/MemberBehavior;
	public final fun getInviterOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMaxAge-UwyO8pc ()J
	public final fun getMaxUses ()I
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUses ()I
	public final fun isTemporary ()Z
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/InviteCreateEvent;
}

public final class dev/kord/core/event/guild/InviteDeleteEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/cache/data/InviteDeleteData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/InviteDeleteData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/GuildChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCode ()Ljava/lang/String;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getData ()Ldev/kord/core/cache/data/InviteDeleteData;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/InviteDeleteEvent;
}

public final class dev/kord/core/event/guild/MemberJoinEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/Member;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/Member;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember ()Ldev/kord/core/entity/Member;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/MemberJoinEvent;
}

public final class dev/kord/core/event/guild/MemberLeaveEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/User;Ldev/kord/common/entity/Snowflake;I)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public final fun getUser ()Ldev/kord/core/entity/User;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/guild/MemberUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/Member;Ldev/kord/core/entity/Member;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/Member;Ldev/kord/core/entity/Member;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getCurrentNickName ()Ljava/lang/String;
	public final fun getCurrentRoleIds ()Ljava/util/Set;
	public final fun getCurrentRoles ()Lkotlinx/coroutines/flow/Flow;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember ()Ldev/kord/core/entity/Member;
	public final fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMemberId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOld ()Ldev/kord/core/entity/Member;
	public final fun getPremiumSince ()Lkotlinx/datetime/Instant;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/entity/User;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/MemberUpdateEvent;
}

public final class dev/kord/core/event/guild/MembersChunkEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/cache/data/MembersChunkData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/MembersChunkData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChunkCount ()I
	public final fun getChunkIndex ()I
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getData ()Ldev/kord/core/cache/data/MembersChunkData;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getInvalidIds ()Ljava/util/Set;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMembers ()Ljava/util/Set;
	public final fun getNonce ()Ljava/lang/String;
	public final fun getPresences ()Ljava/util/List;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/MembersChunkEvent;
}

public final class dev/kord/core/event/guild/VoiceServerUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getEndpoint ()Ljava/lang/String;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getToken ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/VoiceServerUpdateEvent;
}

public final class dev/kord/core/event/guild/WebhookUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/guild/WebhookUpdateEvent;
}

public final class dev/kord/core/event/interaction/ApplicationCommandCreateEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/interaction/GuildApplicationCommand;Ldev/kord/core/Kord;I)V
	public final fun getCommand ()Ldev/kord/core/entity/interaction/GuildApplicationCommand;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
}

public final class dev/kord/core/event/interaction/ApplicationCommandDeleteEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/interaction/GuildApplicationCommand;Ldev/kord/core/Kord;I)V
	public final fun getCommand ()Ldev/kord/core/entity/interaction/GuildApplicationCommand;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
}

public final class dev/kord/core/event/interaction/ApplicationCommandUpdateEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/interaction/GuildApplicationCommand;Ldev/kord/core/Kord;I)V
	public final fun getCommand ()Ldev/kord/core/entity/interaction/GuildApplicationCommand;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
}

public final class dev/kord/core/event/interaction/InteractionCreateEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/interaction/Interaction;Ldev/kord/core/Kord;I)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getInteraction ()Ldev/kord/core/entity/interaction/Interaction;
	public fun getKord ()Ldev/kord/core/Kord;
	public fun getShard ()I
}

public final class dev/kord/core/event/message/MessageBulkDeleteEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ljava/util/Set;Ljava/util/Set;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ljava/util/Set;Ljava/util/Set;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessageIds ()Ljava/util/Set;
	public final fun getMessages ()Ljava/util/Set;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/MessageBulkDeleteEvent;
}

public final class dev/kord/core/event/message/MessageCreateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/Message;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Member;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/Message;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Member;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember ()Ldev/kord/core/entity/Member;
	public final fun getMessage ()Ldev/kord/core/entity/Message;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/MessageCreateEvent;
}

public final class dev/kord/core/event/message/MessageDeleteEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Message;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Message;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/entity/Message;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/MessageDeleteEvent;
}

public final class dev/kord/core/event/message/MessageUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordPartialMessage;Ldev/kord/core/entity/Message;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/DiscordPartialMessage;Ldev/kord/core/entity/Message;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getNew ()Ldev/kord/common/entity/DiscordPartialMessage;
	public final fun getOld ()Ldev/kord/core/entity/Message;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/MessageUpdateEvent;
}

public final class dev/kord/core/event/message/ReactionAddEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getEmoji ()Ldev/kord/core/entity/ReactionEmoji;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserAsMember ()Ldev/kord/core/behavior/MemberBehavior;
	public final fun getUserAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/ReactionAddEvent;
}

public final class dev/kord/core/event/message/ReactionRemoveAllEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/ReactionRemoveAllEvent;
}

public final class dev/kord/core/event/message/ReactionRemoveEmojiEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/cache/data/ReactionRemoveEmojiData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/cache/data/ReactionRemoveEmojiData;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/GuildMessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getData ()Ldev/kord/core/cache/data/ReactionRemoveEmojiData;
	public final fun getEmoji ()Ldev/kord/core/entity/ReactionEmoji;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/ReactionRemoveAllEvent;
}

public final class dev/kord/core/event/message/ReactionRemoveEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getChannel ()Ldev/kord/core/behavior/channel/MessageChannelBehavior;
	public final fun getChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getChannelOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getEmoji ()Ldev/kord/core/entity/ReactionEmoji;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/behavior/MessageBehavior;
	public final fun getMessage (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMessageId ()Ldev/kord/common/entity/Snowflake;
	public final fun getMessageOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/core/behavior/UserBehavior;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserAsMember ()Ldev/kord/core/behavior/MemberBehavior;
	public final fun getUserAsMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/message/ReactionRemoveEvent;
}

public final class dev/kord/core/event/role/RoleCreateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/Role;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/Role;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getRole ()Ldev/kord/core/entity/Role;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/role/RoleCreateEvent;
}

public final class dev/kord/core/event/role/RoleDeleteEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Role;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Role;Ldev/kord/core/Kord;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getRole ()Ldev/kord/core/entity/Role;
	public final fun getRoleId ()Ldev/kord/common/entity/Snowflake;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/role/RoleDeleteEvent;
}

public final class dev/kord/core/event/role/RoleUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/Role;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/Role;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getRole ()Ldev/kord/core/entity/Role;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/role/RoleUpdateEvent;
}

public final class dev/kord/core/event/user/PresenceUpdateEvent : dev/kord/core/entity/Strategizable, dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/User;Ldev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Presence;Ldev/kord/core/entity/Presence;ILdev/kord/core/supplier/EntitySupplier;)V
	public synthetic fun <init> (Ldev/kord/core/entity/User;Ldev/kord/common/entity/DiscordPresenceUser;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/Presence;Ldev/kord/core/entity/Presence;ILdev/kord/core/supplier/EntitySupplier;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuild ()Ldev/kord/core/behavior/GuildBehavior;
	public final fun getGuild (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getGuildOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember ()Ldev/kord/core/behavior/MemberBehavior;
	public final fun getMember (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMemberOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOld ()Ldev/kord/core/entity/Presence;
	public final fun getOldUser ()Ldev/kord/core/entity/User;
	public final fun getPresence ()Ldev/kord/core/entity/Presence;
	public fun getShard ()I
	public fun getSupplier ()Ldev/kord/core/supplier/EntitySupplier;
	public final fun getUser ()Ldev/kord/common/entity/DiscordPresenceUser;
	public final fun getUser (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUserOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public synthetic fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/entity/Strategizable;
	public fun withStrategy (Ldev/kord/core/supplier/EntitySupplyStrategy;)Ldev/kord/core/event/user/PresenceUpdateEvent;
}

public final class dev/kord/core/event/user/UserUpdateEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/User;Ldev/kord/core/entity/User;I)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getOld ()Ldev/kord/core/entity/User;
	public fun getShard ()I
	public final fun getUser ()Ldev/kord/core/entity/User;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/event/user/VoiceStateUpdateEvent : dev/kord/core/event/Event {
	public fun <init> (Ldev/kord/core/entity/VoiceState;Ldev/kord/core/entity/VoiceState;I)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getGateway ()Ldev/kord/gateway/Gateway;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getOld ()Ldev/kord/core/entity/VoiceState;
	public fun getShard ()I
	public final fun getState ()Ldev/kord/core/entity/VoiceState;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/exception/EntityNotFoundException : java/lang/Exception {
	public static final field Companion Ldev/kord/core/exception/EntityNotFoundException$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class dev/kord/core/exception/EntityNotFoundException$Companion {
	public final fun banNotFound (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun emojiNotFound (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun entityNotFound (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun guildEntityNotFound (Ljava/lang/String;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun guildNotFound (Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun inviteNotFound (Ljava/lang/String;)Ljava/lang/Void;
	public final fun memberNotFound (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun messageNotFound (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun roleNotFound (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun selfNotFound ()Ljava/lang/Void;
	public final fun stageInstanceNotFound (Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun templateNotFound (Ljava/lang/String;)Ljava/lang/Void;
	public final fun userNotFound (Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun webhookNotFound (Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun welcomeScreenNotFound (Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
	public final fun widgetNotFound (Ldev/kord/common/entity/Snowflake;)Ljava/lang/Void;
}

public final class dev/kord/core/exception/KordInitializationException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class dev/kord/core/gateway/MasterGateway {
	public fun <init> (Ljava/util/Map;)V
	public final fun detachAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAveragePing-FghU774 ()Lkotlin/time/Duration;
	public final fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public final fun getGateways ()Ljava/util/Map;
	public final fun sendAll (Ldev/kord/gateway/Command;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun start (Ldev/kord/gateway/GatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun start (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun start$default (Ldev/kord/core/gateway/MasterGateway;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun stopAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/core/gateway/ShardEvent {
	public fun <init> (Ldev/kord/gateway/Event;Ldev/kord/gateway/Gateway;I)V
	public final fun component1 ()Ldev/kord/gateway/Event;
	public final fun component2 ()Ldev/kord/gateway/Gateway;
	public final fun component3 ()I
	public final fun copy (Ldev/kord/gateway/Event;Ldev/kord/gateway/Gateway;I)Ldev/kord/core/gateway/ShardEvent;
	public static synthetic fun copy$default (Ldev/kord/core/gateway/ShardEvent;Ldev/kord/gateway/Event;Ldev/kord/gateway/Gateway;IILjava/lang/Object;)Ldev/kord/core/gateway/ShardEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEvent ()Ldev/kord/gateway/Event;
	public final fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getShard ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/kord/core/gateway/handler/BaseGatewayEventHandler {
	public fun <init> (Ldev/kord/core/Kord;Ldev/kord/core/gateway/MasterGateway;Ldev/kord/cache/api/DataCache;Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	protected final fun getCache ()Ldev/kord/cache/api/DataCache;
	protected final fun getCoreFlow ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	protected final fun getGateway ()Ldev/kord/core/gateway/MasterGateway;
	protected final fun getKord ()Ldev/kord/core/Kord;
	public abstract fun handle (Ldev/kord/gateway/Event;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/gateway/handler/GatewayEventInterceptor {
	public fun <init> (Ldev/kord/core/Kord;Ldev/kord/core/gateway/MasterGateway;Ldev/kord/cache/api/DataCache;Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public final fun start (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/gateway/handler/InteractionEventHandler : dev/kord/core/gateway/handler/BaseGatewayEventHandler {
	public fun <init> (Ldev/kord/core/Kord;Ldev/kord/core/gateway/MasterGateway;Ldev/kord/cache/api/DataCache;Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public fun handle (Ldev/kord/gateway/Event;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class dev/kord/core/live/AbstractLiveKordEntity : dev/kord/core/live/LiveKordEntity {
	public fun <init> ()V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	protected abstract fun filter (Ldev/kord/core/event/Event;)Z
	public fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public fun shutDown ()V
	protected abstract fun update (Ldev/kord/core/event/Event;)V
}

public final class dev/kord/core/live/LiveGuild : dev/kord/core/live/AbstractLiveKordEntity, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/Guild;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getGuild ()Ldev/kord/core/entity/Guild;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/live/LiveGuildKt {
	public static final fun live (Ldev/kord/core/entity/Guild;)Ldev/kord/core/live/LiveGuild;
	public static final fun live (Ldev/kord/core/entity/Guild;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/LiveGuild;
	public static final fun onBanRemove (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onChannelCreate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onChannelDelete (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onChannelUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onEmojisUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildCreate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onIntegrationsUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMemberJoin (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMemberLeave (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMemberUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMessageCreate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMessageDelete (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMessageUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onPresenceUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/kord/core/live/LiveGuild;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/kord/core/live/LiveGuild;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemoveAll (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onRoleCreate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onRoleDelete (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onRoleUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onVoiceServerUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onVoiceStateUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onWebhookUpdate (Ldev/kord/core/live/LiveGuild;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public abstract interface class dev/kord/core/live/LiveKordEntity : dev/kord/core/entity/KordEntity {
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun shutDown ()V
}

public final class dev/kord/core/live/LiveKordEntity$DefaultImpls {
	public static fun compareTo (Ldev/kord/core/live/LiveKordEntity;Ldev/kord/core/entity/Entity;)I
}

public final class dev/kord/core/live/LiveMember : dev/kord/core/live/AbstractLiveKordEntity, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/Member;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMember ()Ldev/kord/core/entity/Member;
}

public final class dev/kord/core/live/LiveMemberKt {
	public static final fun live (Ldev/kord/core/entity/Member;)Ldev/kord/core/live/LiveMember;
	public static final fun live (Ldev/kord/core/entity/Member;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/LiveMember;
	public static final fun onBanAdd (Ldev/kord/core/live/LiveMember;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/channel/LiveGuildChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onLeave (Ldev/kord/core/live/LiveMember;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/channel/LiveGuildChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/LiveMember;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/LiveMessage : dev/kord/core/live/AbstractLiveKordEntity, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/Message;Ldev/kord/common/entity/Snowflake;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getMessage ()Ldev/kord/core/entity/Message;
}

public final class dev/kord/core/live/LiveMessageKt {
	public static final fun live (Ldev/kord/core/entity/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun live (Ldev/kord/core/entity/Message;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun onBulkDelete (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onChannelDelete (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onCreate (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onOnlyDelete (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/kord/core/live/LiveMessage;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/kord/core/live/LiveMessage;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemoveAll (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/LiveMessage;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/LiveRole : dev/kord/core/live/AbstractLiveKordEntity, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/Role;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getRole ()Ldev/kord/core/entity/Role;
}

public final class dev/kord/core/live/LiveRoleKt {
	public static final fun live (Ldev/kord/core/entity/Role;)Ldev/kord/core/live/LiveRole;
	public static final fun live (Ldev/kord/core/entity/Role;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/LiveRole;
	public static final fun onDelete (Ldev/kord/core/live/LiveRole;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/LiveRole;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/LiveRole;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/LiveRole;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/LiveUser : dev/kord/core/live/AbstractLiveKordEntity, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/User;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
	public final fun getUser ()Ldev/kord/core/entity/User;
}

public final class dev/kord/core/live/LiveUserKt {
	public static final fun live (Ldev/kord/core/entity/User;)Ldev/kord/core/live/LiveUser;
	public static final fun live (Ldev/kord/core/entity/User;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/LiveUser;
	public static final fun onUpdate (Ldev/kord/core/live/LiveUser;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/channel/LiveCategory : dev/kord/core/live/channel/LiveChannel, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/channel/Category;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun getChannel ()Ldev/kord/core/entity/channel/Category;
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/live/channel/LiveCategoryKt {
	public static final fun live (Ldev/kord/core/entity/channel/Category;)Ldev/kord/core/live/channel/LiveCategory;
	public static final fun live (Ldev/kord/core/entity/channel/Category;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/channel/LiveCategory;
	public static final fun onCreate (Ldev/kord/core/live/channel/LiveCategory;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onDelete (Ldev/kord/core/live/channel/LiveCategory;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/channel/LiveCategory;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/channel/LiveCategory;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/channel/LiveCategory;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public abstract class dev/kord/core/live/channel/LiveChannel : dev/kord/core/live/AbstractLiveKordEntity {
	public fun <init> ()V
	protected fun filter (Ldev/kord/core/event/Event;)Z
	public abstract fun getChannel ()Ldev/kord/core/entity/channel/Channel;
}

public final class dev/kord/core/live/channel/LiveChannelKt {
	public static final fun live (Ldev/kord/core/entity/channel/Channel;)Ldev/kord/core/live/channel/LiveChannel;
	public static final fun live (Ldev/kord/core/entity/channel/Channel;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/channel/LiveChannel;
	public static final fun onChannelCreate (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onChannelDelete (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onChannelUpdate (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildCreate (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildUpdate (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMessageCreate (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMessageDelete (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onMessageUpdate (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/kord/core/live/channel/LiveChannel;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionAdd (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/kord/core/live/channel/LiveChannel;Ldev/kord/core/entity/ReactionEmoji;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemove (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onReactionRemoveAll (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onVoiceStateUpdate (Ldev/kord/core/live/channel/LiveChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/channel/LiveDmChannel : dev/kord/core/live/channel/LiveChannel, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/channel/DmChannel;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/DmChannel;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/live/channel/LiveDmChannelKt {
	public static final fun live (Ldev/kord/core/entity/channel/DmChannel;)Ldev/kord/core/live/channel/LiveDmChannel;
	public static final fun live (Ldev/kord/core/entity/channel/DmChannel;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/channel/LiveDmChannel;
	public static final fun onCreate (Ldev/kord/core/live/channel/LiveDmChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onDelete (Ldev/kord/core/live/channel/LiveDmChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/channel/LiveDmChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/channel/LiveDmChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/channel/LiveDmChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/channel/LiveGuildChannel : dev/kord/core/live/channel/LiveChannel, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/channel/GuildChannel;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/GuildChannel;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/live/channel/LiveGuildChannelKt {
	public static final fun live (Ldev/kord/core/entity/channel/GuildChannel;)Ldev/kord/core/live/channel/LiveGuildChannel;
	public static final fun live (Ldev/kord/core/entity/channel/GuildChannel;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/channel/LiveGuildChannel;
	public static final fun onCreate (Ldev/kord/core/live/channel/LiveGuildChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onDelete (Ldev/kord/core/live/channel/LiveGuildChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/channel/LiveGuildChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/channel/LiveGuildChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/channel/LiveGuildChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/channel/LiveGuildMessageChannel : dev/kord/core/live/channel/LiveChannel, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/channel/GuildMessageChannel;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/GuildMessageChannel;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/live/channel/LiveGuildMessageChannelKt {
	public static final fun live (Ldev/kord/core/entity/channel/GuildMessageChannel;)Ldev/kord/core/live/channel/LiveGuildMessageChannel;
	public static final fun live (Ldev/kord/core/entity/channel/GuildMessageChannel;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/channel/LiveGuildMessageChannel;
	public static final fun onChannelDelete (Ldev/kord/core/live/channel/LiveGuildMessageChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onCreate (Ldev/kord/core/live/channel/LiveGuildMessageChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onDelete (Ldev/kord/core/live/channel/LiveGuildMessageChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/channel/LiveGuildMessageChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/channel/LiveGuildMessageChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/channel/LiveVoiceChannel : dev/kord/core/live/channel/LiveChannel, dev/kord/core/entity/KordEntity {
	public fun <init> (Ldev/kord/core/entity/channel/VoiceChannel;)V
	public fun compareTo (Ldev/kord/core/entity/Entity;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public synthetic fun getChannel ()Ldev/kord/core/entity/channel/Channel;
	public fun getChannel ()Ldev/kord/core/entity/channel/VoiceChannel;
	public fun getId ()Ldev/kord/common/entity/Snowflake;
	public fun getKord ()Ldev/kord/core/Kord;
}

public final class dev/kord/core/live/channel/LiveVoiceChannelKt {
	public static final fun live (Ldev/kord/core/entity/channel/VoiceChannel;)Ldev/kord/core/live/channel/LiveVoiceChannel;
	public static final fun live (Ldev/kord/core/entity/channel/VoiceChannel;Lkotlin/jvm/functions/Function1;)Ldev/kord/core/live/channel/LiveVoiceChannel;
	public static final fun onCreate (Ldev/kord/core/live/channel/LiveVoiceChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onDelete (Ldev/kord/core/live/channel/LiveVoiceChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onGuildDelete (Ldev/kord/core/live/channel/LiveVoiceChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onShutDown (Ldev/kord/core/live/channel/LiveVoiceChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun onUpdate (Ldev/kord/core/live/channel/LiveVoiceChannel;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/kord/core/live/exception/LiveCancellationException : java/util/concurrent/CancellationException {
	public fun <init> (Ldev/kord/core/event/Event;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/kord/core/event/Event;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getEvent ()Ldev/kord/core/event/Event;
}

public final class dev/kord/core/rest/CoreRestClient {
	public fun <init> (Ldev/kord/rest/service/RestClient;)V
	public final fun getClient ()Ldev/kord/rest/service/RestClient;
}

public final class dev/kord/core/supplier/CacheEntitySupplier : dev/kord/core/supplier/EntitySupplier {
	public fun <init> (Ldev/kord/core/Kord;)V
	public fun getChannel (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelPins (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getChannelWebhooks (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public final fun getChannels ()Lkotlinx/coroutines/flow/Flow;
	public fun getCurrentUserGuilds (I)Lkotlinx/coroutines/flow/Flow;
	public fun getEmoji (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojiOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojis (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuild (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBan (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBanOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBans (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildChannels (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildMembers (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreview (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreviewOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildRoles (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildVoiceRegions (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWebhooks (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWidget (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildWidgetOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public fun getMember (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMembers ()Lkotlinx/coroutines/flow/Flow;
	public fun getMessage (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessagesAfter (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRole (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoleOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getRoles ()Lkotlinx/coroutines/flow/Flow;
	public fun getSelf (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelfOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstance (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstanceOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getUser (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getUsers ()Lkotlinx/coroutines/flow/Flow;
	public fun getWebhook (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithToken (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithTokenOrNull (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/kord/core/supplier/EntitySupplier {
	public abstract fun getChannel (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChannelPins (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getChannelWebhooks (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getCurrentUserGuilds (I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getEmoji (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getEmojiOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getEmojis (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuild (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildBan (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildBanOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildBans (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildChannels (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildMembers (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildPreview (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildPreviewOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildRoles (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildVoiceRegions (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildWebhooks (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getGuildWidget (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuildWidgetOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMember (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMemberOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessage (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessageOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getMessagesAfter (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesAround (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getMessagesBefore (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getRole (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getRoleOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSelf (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSelfOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstance (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getStageInstanceOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getTemplates (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getUser (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getUserOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhook (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookWithToken (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getWebhookWithTokenOrNull (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/core/supplier/EntitySupplier$DefaultImpls {
	public static fun getChannel (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getCurrentUserGuilds$default (Ldev/kord/core/supplier/EntitySupplier;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getEmoji (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuild (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildBan (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getGuildMembers$default (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getGuildPreview (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getGuildWidget (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMember (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getMessage (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getMessagesAfter$default (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesAround$default (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getMessagesBefore$default (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public static fun getRole (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getSelf (Ldev/kord/core/supplier/EntitySupplier;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getStageInstance (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getTemplate (Ldev/kord/core/supplier/EntitySupplier;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getUser (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhook (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getWebhookWithToken (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/kord/core/supplier/EntitySupplyStrategy {
	public static final field Companion Ldev/kord/core/supplier/EntitySupplyStrategy$Companion;
	public abstract fun supply (Ldev/kord/core/Kord;)Ldev/kord/core/supplier/EntitySupplier;
}

public final class dev/kord/core/supplier/EntitySupplyStrategy$Companion {
	public final fun getCache ()Ldev/kord/core/supplier/EntitySupplyStrategy;
	public final fun getCacheWithRestFallback ()Ldev/kord/core/supplier/EntitySupplyStrategy;
	public final fun getRest ()Ldev/kord/core/supplier/EntitySupplyStrategy;
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Ldev/kord/core/supplier/EntitySupplyStrategy;
}

public final class dev/kord/core/supplier/FallbackEntitySupplierKt {
	public static final fun withFallback (Ldev/kord/core/supplier/EntitySupplier;Ldev/kord/core/supplier/EntitySupplier;)Ldev/kord/core/supplier/EntitySupplier;
}

public final class dev/kord/core/supplier/RestEntitySupplier : dev/kord/core/supplier/EntitySupplier {
	public fun <init> (Ldev/kord/core/Kord;)V
	public final fun getApplicationInfo (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAuditLogEntries (Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/json/request/AuditLogGetRequest;)Lkotlinx/coroutines/flow/Flow;
	public final fun getAuditLogEntries (Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getAuditLogEntries$default (Ldev/kord/core/supplier/RestEntitySupplier;Ldev/kord/common/entity/Snowflake;Ldev/kord/rest/json/request/AuditLogGetRequest;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public fun getChannel (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getChannelPins (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getChannelWebhooks (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getCurrentUserGuilds (I)Lkotlinx/coroutines/flow/Flow;
	public fun getEmoji (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojiOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getEmojis (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuild (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBan (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBanOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildBans (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildChannels (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildMembers (Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreview (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildPreviewOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildRoles (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildVoiceRegions (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getGuildWebhooks (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public final fun getGuildWelcomeScreen (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getGuildWelcomeScreenOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildWidget (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuildWidgetOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getGuilds ()Lkotlinx/coroutines/flow/Flow;
	public final fun getInvite (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getInvite$default (Ldev/kord/core/supplier/RestEntitySupplier;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getInviteOrNull (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getKord ()Ldev/kord/core/Kord;
	public fun getMember (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMemberOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessage (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessageOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getMessagesAfter (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesAround (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public fun getMessagesBefore (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;I)Lkotlinx/coroutines/flow/Flow;
	public final fun getReactors (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/core/entity/ReactionEmoji;)Lkotlinx/coroutines/flow/Flow;
	public fun getRegions ()Lkotlinx/coroutines/flow/Flow;
	public fun getRole (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getRoleOrNull (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelf (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getSelfOrNull (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstance (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStageInstanceOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplateOrNull (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getTemplates (Ldev/kord/common/entity/Snowflake;)Lkotlinx/coroutines/flow/Flow;
	public fun getUser (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getUserOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhook (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookOrNull (Ldev/kord/common/entity/Snowflake;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithToken (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getWebhookWithTokenOrNull (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

